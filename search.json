[{"path":"https://impact-initiatives-hppu.github.io/humind/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 humind authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Quentin VILLOTTA. Author, maintainer. Iyed GHEDAMSI. Author, contributor. Mario DASILVA. Author, contributor. Laith Abu-Nawwas. Contributor. Sunhee Moraes. Contributor. Raphael Bacot. Contributor.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"VILLOTTA Q, GHEDAMSI , DASILVA M (2025). humind: Compose MSNA Indicators. R package version 2025.1.1, https://github.com/impact-initiatives-hppu/humind.","code":"@Manual{,   title = {humind: Compose MSNA Indicators},   author = {Quentin VILLOTTA and Iyed GHEDAMSI and Mario DASILVA},   year = {2025},   note = {R package version 2025.1.1},   url = {https://github.com/impact-initiatives-hppu/humind}, }"},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"humind-","dir":"","previous_headings":"","what":"Compose MSNA Indicators","title":"Compose MSNA Indicators","text":"humind provides functions compose usual humanitarian composite indicators related IMPACT Multi-Sector Needs Assessments (MSNAs). : Specific indicators related MSNI framework: Sectoral Composites, MSNI Metrics recoding indicators needed . Food security indicators (rCSI, LCSI, HHS, FCS). Recoding WASH indicators JMP classifications. package follows ‚ÄòStep - Composition‚Äô approach IMPACT R framework.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compose MSNA Indicators","text":"can install latest stable version humind GitHub: confirm correct version, try following:","code":"install.packages(\"devtools\") devtools::install_github(\"impact-initiatives-hppu/humind@v2025.1.1\") packageVersion(\"humind\") # v2025.1.1"},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"id_-guidance-note","dir":"","previous_headings":"","what":"üìö Guidance Note","title":"Compose MSNA Indicators","text":"comprehensive Guidance Note available SharePoint users humind package. document provides essential background MSNI framework includes sector-specific guidance. sector includes ‚ÄúHumind Data Workflow‚Äù section, guiding users necessary steps highlighting relevant humind package functions use. ‚ö†Ô∏è Users strongly encouraged thoroughly read document ‚Äî particularly Data Workflow sections ‚Äî starting implementation work Humind üìå Note: technical documentation guide soon available, detailing full MSNI analysis workflow using humind, including runnable code examples. guide directly integrated GitHub project streamline process.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"id_-2025-programmatic-changes","dir":"","previous_headings":"","what":"üìñ 2025 Programmatic Changes","title":"Compose MSNA Indicators","text":"Protection: complete ravamp, based series new Tier 1 indicators related Protection Needs. SNFI: Changes number shelter issues mapping FW (8 11 total issues). Inclusion one additional indicator security tenure dimension: hlp_eviction_risk. Hygiene indicator removed FDS series - making total number domestic tasks (lighting) equal 4 instead 5. Optional shelter damages component added. Health: removal WGQs framework. WASH: small changes incorporate self-reported hygiene variants (availability soap & water) map JMP classifications. Food Security: new additional step analyze impact livelihood coping strategies Food Consumption (changes done impactR4PHU reflected humind). Education: small changes indicator naming reflect ‚Äúdirect attack education‚Äù. Indicator name edu_disrupted_occupation now called edu_disrupted_attack.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"id_-issues-and-feedback","dir":"","previous_headings":"","what":"üìå Issues and Feedback","title":"Compose MSNA Indicators","text":"help us respond efficiently, please select appropriate template opening issue: üêõBug report ‚Äì Use ‚Äôve found reproducible error unexpected behavior code. Include clear steps environment details. üßÆ Indicator Logic Change ‚Äì Use adding, updating, fixing logic related indicators, scoring, categorization code. ‚ú® Feature request ‚Äì Use suggest new feature enhancement existing functionality. üìñ Documentation request ‚Äì Use incorrect, missing, unclear documentation needs update. sure issue fits? Open blank issue provide much detail possible.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Compose MSNA Indicators","text":"humind released MIT License.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_access_to_phone_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Best Phone Access and Coverage Information ‚Äî add_access_to_phone_best","title":"Add Best Phone Access and Coverage Information ‚Äî add_access_to_phone_best","text":"function recodes best type phone accessible household coverage network type. provides two main functions: add_access_to_phone_best(): Recodes best type phone accessible household. add_access_to_phone_coverage(): Recodes coverage network type best type phone owned household.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_access_to_phone_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Best Phone Access and Coverage Information ‚Äî add_access_to_phone_best","text":"","code":"add_access_to_phone_best(   df,   access_to_phone = \"etc_access_to_phone\",   none = \"none\",   smartphone = \"smartphone\",   feature_phone = \"feature_phone\",   basic_phone = \"basic_phone\",   dnk = \"dnk\",   pnta = \"pnta\",   sep = \"/\" )  add_access_to_phone_coverage(   df,   coverage_network_type = \"etc_coverage_network_type\",   coverage_none = \"no_coverage\",   coverage_no_internet = c(\"only_sms\", \"voice_sms\", \"only_voice\"),   coverage_yes_internet = c(\"voice_sms_internet\", \"only_internet\"),   coverage_undefined = c(\"dnk\", \"pnta\"),   access_to_phone_best = \"etc_access_to_phone_best\",   access_to_phone_none = \"none\",   access_to_basic_phone = \"basic_phone\",   access_to_feature_phone = \"feature_phone\",   access_to_smartphone = \"smartphone\",   access_to_undefined = \"undefined\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_access_to_phone_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Best Phone Access and Coverage Information ‚Äî add_access_to_phone_best","text":"df input data frame access_to_phone name column contains access phone information. none value phone. smartphone value smartphone. feature_phone value feature phone. basic_phone value basic phone. dnk value know. pnta value prefer answer. sep Separator binary columns. coverage_network_type Network coverage column. coverage_none Value coverage. coverage_no_internet Vector values internet. coverage_yes_internet Value yes internet. coverage_undefined Vector values know. access_to_phone_best name column contains access phone information. access_to_phone_none Value phone. access_to_basic_phone Value basic phone. access_to_feature_phone Value feature phone. access_to_smartphone Value smartphone. access_to_undefined Value undefined.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_access_to_phone_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Best Phone Access and Coverage Information ‚Äî add_access_to_phone_best","text":"data frame additional column 'etc_access_to_phone_best' containing recoded best type phone accessible. data frame additional column 'etc_access_to_phone_coverage' containing recoded coverage phone access information.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize Age and Create Age-Related Variables ‚Äî add_age_cat","title":"Categorize Age and Create Age-Related Variables ‚Äî add_age_cat","text":"function provides two main functionalities: add_age_cat(): Adds age categories dataframe based specified breaks. add_age_18_cat(): Adds age categories dummy variable 18 years old.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize Age and Create Age-Related Variables ‚Äî add_age_cat","text":"","code":"add_age_cat(   df,   age_col,   breaks = c(0, 18, 60, 120),   labels = NULL,   int_undefined = c(-999, 999),   char_undefined = \"undefined\",   new_colname = NULL )  add_age_18_cat(   df,   age_col,   int_undefined = c(-999, 999),   char_undefined = \"undefined\",   new_colname = NULL )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize Age and Create Age-Related Variables ‚Äî add_age_cat","text":"df dataframe. age_col column name recategorize. breaks vector cut points. labels vector labels. NULL, labels breaks. int_undefined vector values undefined (-999, 999) replace char_undefined. char_undefined character replace int_undefined values, often values corresponding know Prefer answer. new_colname name new column. NULL, adds \"_cat\" age_col (\"_18_cat add_age_18_cat()).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize Age and Create Age-Related Variables ‚Äî add_age_cat","text":"add_age_cat(): dataframe additional column containing age categories. add_age_18_cat(): dataframe two additional columns: one categories (below_18, above_18) one dummy variable (0 18, 1 18).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Any barriers to accessing humanitarian assistance encountered ‚Äî add_barriers_assistance_any","title":"Any barriers to accessing humanitarian assistance encountered ‚Äî add_barriers_assistance_any","text":"function recodes barriers accessing humanitarian assistance encountered barriers accessing humanitarian assistance type indicator.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Any barriers to accessing humanitarian assistance encountered ‚Äî add_barriers_assistance_any","text":"","code":"add_barriers_assistance_any(   df,   barriers_assistance = \"aap_barriers_assistance\",   none = \"none\",   pnta = \"pnta\",   dnk = \"dnk\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Any barriers to accessing humanitarian assistance encountered ‚Äî add_barriers_assistance_any","text":"df input data frame barriers_assistance name column contains information barriers accessing humanitarian assistance. none choice value indicates barriers encountered. pnta value value indicates person prefers answer. dnk value value indicates person know.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Any barriers to accessing humanitarian assistance encountered ‚Äî add_barriers_assistance_any","text":"data frame new variable aap_barriers_assistance_any_barrier","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_edu.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Education Sectoral Composite Score and Need Indicators ‚Äî add_comp_edu","title":"Calculate Education Sectoral Composite Score and Need Indicators ‚Äî add_comp_edu","text":"function calculates education sectoral composite score based various education-related indicators. computes scores disrupted education attendance/barriers, combines total score, determines household need acute need educational assistance. Prerequisite functions: add_loop_age_dummy.R add_loop_edu_barrier_protection_d.R add_loop_edu_disrupted_d.R add_loop_edu_ind_age_corrected.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_edu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Education Sectoral Composite Score and Need Indicators ‚Äî add_comp_edu","text":"","code":"add_comp_edu(   df,   schooling_age_n = \"edu_schooling_age_n\",   no_access_n = \"edu_no_access_n\",   barrier_protection_n = \"edu_barrier_protection_n\",   attack_n = \"edu_disrupted_attack_n\",   hazards_n = \"edu_disrupted_hazards_n\",   displaced_n = \"edu_disrupted_displaced_n\",   teacher_n = \"edu_disrupted_teacher_n\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_edu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Education Sectoral Composite Score and Need Indicators ‚Äî add_comp_edu","text":"df data frame. schooling_age_n Column name number children schooling age. no_access_n Column name number children access education. barrier_protection_n Column name number children barriers protection. attack_n Column name number children disrupted education due school occupied armed groups hazards_n Column name number children disrupted education due hazards. displaced_n Column name number children disrupted education due recent displacement. teacher_n Column name number children disrupted education due teachers' absence.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_edu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Education Sectoral Composite Score and Need Indicators ‚Äî add_comp_edu","text":"data frame additional columns: comp_edu_score_disrupted: Score disrupted education (1-4). comp_edu_score_attendance: Score attendance barriers (1-4) comp_edu_score: Total education composite score (max disrupted attendance scores). comp_edu_in_need: Binary indicator need educational assistance. comp_edu_in_acute_need: Binary indicator acute need educational assistance.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_foodsec.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Food Security Sectoral Composite Score and Need Indicators ‚Äî add_comp_foodsec","title":"Calculate Food Security Sectoral Composite Score and Need Indicators ‚Äî add_comp_foodsec","text":"function calculates food security sectoral composite score based food security phase. assigns score 1 5 corresponding food security phase, determines household need acute need food security assistance. Apply prerequisite food security functions re-exported https://github.com/impact-initiatives/impactR4PHU FCS - add_fcs.R HHS - add_hhs.R rCSI - add_rcsi.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_foodsec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Food Security Sectoral Composite Score and Need Indicators ‚Äî add_comp_foodsec","text":"","code":"add_comp_foodsec(   df,   fc_phase = \"fsl_fc_phase\",   phase1 = \"Phase 1 FC\",   phase2 = \"Phase 2 FC\",   phase3 = \"Phase 3 FC\",   phase4 = \"Phase 4 FC\",   phase5 = \"Phase 5 FC\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_foodsec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Food Security Sectoral Composite Score and Need Indicators ‚Äî add_comp_foodsec","text":"df data frame. fc_phase Column name food security phase. phase1 Label Phase 1 FC. phase2 Label Phase 2 FC. phase3 Label Phase 3 FC. phase4 Label Phase 4 FC. phase5 Label Phase 5 FC.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_foodsec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Food Security Sectoral Composite Score and Need Indicators ‚Äî add_comp_foodsec","text":"data frame additional columns: comp_foodsec_score: Food security composite score (1-5) comp_foodsec_in_need: Binary indicator need food security assistance comp_foodsec_in_acute_need: Binary indicator acute need food security assistance","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_health.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Health Composite Score and Need Indicators ‚Äî add_comp_health","title":"Calculate Health Composite Score and Need Indicators ‚Äî add_comp_health","text":"function calculates health composite score based healthcare access needs. considers whether individuals needed healthcare, whether accessed needed, optionally takes account disability status. function determines household need acute need health assistance based calculated score. Prerequisite functions: add_loop_healthcare_needed_cat.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_health.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Health Composite Score and Need Indicators ‚Äî add_comp_health","text":"","code":"add_comp_health(   df,   ind_healthcare_needed_no_n = \"health_ind_healthcare_needed_no_n\",   ind_healthcare_needed_yes_unmet_n = \"health_ind_healthcare_needed_yes_unmet_n\",   ind_healthcare_needed_yes_met_n = \"health_ind_healthcare_needed_yes_met_n\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_health.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Health Composite Score and Need Indicators ‚Äî add_comp_health","text":"df data frame. ind_healthcare_needed_no_n Column name number individuals need access healthcare. ind_healthcare_needed_yes_unmet_n Column name number individuals needed access healthcare . ind_healthcare_needed_yes_met_n Column name number individuals needed access healthcare .","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_health.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Health Composite Score and Need Indicators ‚Äî add_comp_health","text":"data frame additional columns: comp_health_score: Health composite score (1-4) comp_health_in_need: Binary indicator need health assistance comp_health_in_acute_need: Binary indicator acute need health assistance","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":null,"dir":"Reference","previous_headings":"","what":"Add overall Protection composite score and need flags ‚Äî add_comp_prot","title":"Add overall Protection composite score and need flags ‚Äî add_comp_prot","text":"Assumes per‚Äëdimension severity scores already computed added df earlier functions: add_prot_score_movement(), add_prot_score_practices(), add_prot_score_rights(). function performs Step 4 2025 Protection Composite workflow: takes maximum three existing columns create comp_prot_score, generates binary ‚Äúneed‚Äù indicators.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add overall Protection composite score and need flags ‚Äî add_comp_prot","text":"","code":"add_comp_prot(df)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add overall Protection composite score and need flags ‚Äî add_comp_prot","text":"df data.frame tibble containing numeric columns: comp_prot_score_movement ‚Äì severity movement dimension comp_prot_score_practices ‚Äì severity practices dimension comp_prot_score_rights ‚Äì severity rights & services dimension three columns missing, function abort, reminding run corresponding prep functions first.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add overall Protection composite score and need flags ‚Äî add_comp_prot","text":"input df, three new columns: comp_prot_score ‚Äì overall protection severity (maximum three dimensions) comp_prot_in_need ‚Äì binary (0/1): 1 comp_prot_score >= 3, else 0 comp_prot_in_acute_need ‚Äì binary (0/1): 1 comp_prot_score >= 4, else 0","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add overall Protection composite score and need flags ‚Äî add_comp_prot","text":"Column checks via purrr::iwalk() ensure three dimension scores exist. Computation uses pmax() (na.rm = FALSE) Thresholds (3 ‚Äúneed‚Äù, 4 ‚Äúacute need‚Äù) currently hard‚Äëcoded.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_snfi.html","id":null,"dir":"Reference","previous_headings":"","what":"Add SNFI Sectoral Composite Score and Need Indicators ‚Äî add_comp_snfi","title":"Add SNFI Sectoral Composite Score and Need Indicators ‚Äî add_comp_snfi","text":"function calculates Shelter, NFI HLP (SNFI) sectoral composite score based shelter type, shelter issues, occupancy status, functional disability scale (FDS) indicators. also determines household need acute need based calculated score. Prerequisite functions: add_shelter_issue_cat.R add_shelter_type_cat.R add_occupancy_cat.R add_fds_cannot_cat.R OPTIONAL add_shelter_damage_cat.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_snfi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add SNFI Sectoral Composite Score and Need Indicators ‚Äî add_comp_snfi","text":"","code":"add_comp_snfi(   df,   shelter_type_cat = \"snfi_shelter_type_cat\",   shelter_type_cat_none = \"none\",   shelter_type_cat_inadequate = \"inadequate\",   shelter_type_cat_adequate = \"adequate\",   shelter_type_cat_undefined = \"undefined\",   shelter_issue_cat = \"snfi_shelter_issue_cat\",   shelter_issue_cat_1_to_3 = \"1_to_3\",   shelter_issue_cat_4_to_7 = \"4_to_7\",   shelter_issue_cat_8_to_11 = \"8_to_11\",   shelter_issue_cat_none = \"none\",   shelter_issue_cat_undefined = \"undefined\",   shelter_issue_cat_other = \"other\",   tenure_security_cat = \"hlp_occupancy_cat\",   tenure_security_cat_high_risk = \"high_risk\",   tenure_security_cat_medium_risk = \"medium_risk\",   tenure_security_cat_low_risk = \"low_risk\",   tenure_security_cat_undefined = \"undefined\",   fds_cannot_cat = \"snfi_fds_cannot_cat\",   fds_cannot_cat_4 = \"4_tasks\",   fds_cannot_cat_2_to_3 = \"2_to_3_tasks\",   fds_cannot_cat_1 = \"1_task\",   fds_cannot_cat_none = \"none\",   fds_cannot_cat_undefined = \"undefined\",   shelter_damage = FALSE,   shelter_damage_cat = \"snfi_shelter_damage_cat\",   shelter_damage_cat_none = \"none\",   shelter_damage_cat_damaged = \"damaged\",   shelter_damage_cat_part = \"part\",   shelter_damage_cat_total = \"total\",   shelter_damage_cat_undefined = \"undefined\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_snfi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add SNFI Sectoral Composite Score and Need Indicators ‚Äî add_comp_snfi","text":"df data frame containing required SNFI indicators. shelter_type_cat Column name shelter type. shelter_type_cat_none Level shelter. shelter_type_cat_inadequate Level inadequate shelter. shelter_type_cat_adequate Level adequate shelter. shelter_type_cat_undefined Level undefined shelter. shelter_issue_cat Column name shelter issue. shelter_issue_cat_1_to_3 Level 1 3 shelter issues. shelter_issue_cat_4_to_7 Level 4 7 shelter issues. shelter_issue_cat_8_to_11 Level 8 11 shelter issues. shelter_issue_cat_none Level shelter issues. shelter_issue_cat_undefined Level undefined shelter issues. shelter_issue_cat_other Level shelter issues. tenure_security_cat Column name security tenure. tenure_security_cat_high_risk Level high risk security tenure. tenure_security_cat_medium_risk Level medium risk security tenure. tenure_security_cat_low_risk Level low risk security tenure. tenure_security_cat_undefined Level undefined security tenure. fds_cannot_cat Column name fds . fds_cannot_cat_4 Level 4 tasks done. fds_cannot_cat_2_to_3 Level 2 3 tasks done. fds_cannot_cat_1 Level 1 task done. fds_cannot_cat_none Level tasks done. fds_cannot_cat_undefined Level undefined fds . shelter_damage Column shelter damage. shelter_damage_cat Column shelter damage category. shelter_damage_cat_none Level name shelter damage. shelter_damage_cat_damaged Level name minor damages. shelter_damage_cat_part Level name roof risk collapse. shelter_damage_cat_total Level name total collapse destruction. shelter_damage_cat_undefined Level name undefined unknown status shelter damage.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_snfi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add SNFI Sectoral Composite Score and Need Indicators ‚Äî add_comp_snfi","text":"data frame added columns: comp_snfi_score_shelter_type_cat Score based shelter type comp_snfi_score_shelter_issue_cat Score based shelter issues comp_snfi_score_tenure_security_cat Score based security tenure status comp_snfi_score_fds_cannot_cat Score based FDS comp_snfi_score: Overall SNFI composite score comp_snfi_in_need: Indicator need comp_snfi_in_acute_need: Indicator acute need","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_wash.html","id":null,"dir":"Reference","previous_headings":"","what":"Add WASH Sectoral Composite Score and Need Indicator ‚Äî add_comp_wash","title":"Add WASH Sectoral Composite Score and Need Indicator ‚Äî add_comp_wash","text":"Calculates comprehensive WASH (Water, Sanitation, Hygiene) composite score households across different settings (camp, urban, rural). function generates sub-scores water quantity, water quality, sanitation, hygiene, creates dummy variable indicate households need WASH assistance. function performs detailed scoring based multiple WASH-related variables, applying different scoring logic camp, urban, rural settings. Prerequisite functions: add_sanitation_facility_cat.R add_handwashing_facility_cat.R add_drinking_water_source_cat.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_wash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add WASH Sectoral Composite Score and Need Indicator ‚Äî add_comp_wash","text":"","code":"add_comp_wash(   df,   setting = \"setting\",   setting_camp = \"camp\",   setting_urban = \"urban\",   setting_rural = \"rural\",   drinking_water_quantity = \"wash_drinking_water_quantity\",   drinking_water_quantity_always = \"always\",   drinking_water_quantity_often = \"often\",   drinking_water_quantity_sometimes = \"sometimes\",   drinking_water_quantity_rarely = \"rarely\",   drinking_water_quantity_never = \"never\",   drinking_water_quantity_dnk = \"dnk\",   drinking_water_quantity_pnta = \"pnta\",   drinking_water_quality_jmp_cat = \"wash_drinking_water_quality_jmp_cat\",   drinking_water_quality_jmp_cat_surface_water = \"surface_water\",   drinking_water_quality_jmp_cat_unimproved = \"unimproved\",   drinking_water_quality_jmp_cat_limited = \"limited\",   drinking_water_quality_jmp_cat_basic = \"basic\",   drinking_water_quality_jmp_cat_safely_managed = \"safely_managed\",   drinking_water_quality_jmp_cat_undefined = \"undefined\",   sanitation_facility_jmp_cat = \"wash_sanitation_facility_jmp_cat\",   sanitation_facility_jmp_cat_open_defecation = \"open_defecation\",   sanitation_facility_jmp_cat_unimproved = \"unimproved\",   sanitation_facility_jmp_cat_limited = \"limited\",   sanitation_facility_jmp_cat_basic = \"basic\",   sanitation_facility_jmp_cat_safely_managed = \"safely_managed\",   sanitation_facility_jmp_cat_undefined = \"undefined\",   sanitation_facility_cat = \"wash_sanitation_facility_cat\",   sanitation_facility_cat_none = \"none\",   sanitation_facility_cat_unimproved = \"unimproved\",   sanitation_facility_cat_improved = \"improved\",   sanitation_facility_cat_undefined = \"undefined\",   sanitation_facility_n_ind = \"wash_sharing_sanitation_facility_n_ind\",   sanitation_facility_n_ind_50_and_above = \"50_and_above\",   sanitation_facility_n_ind_20_to_49 = \"20_to_49\",   sanitation_facility_n_ind_19_and_below = \"19_and_below\",   sharing_sanitation_facility_cat = \"wash_sharing_sanitation_facility_cat\",   sharing_sanitation_facility_cat_shared = \"shared\",   sharing_sanitation_facility_cat_not_shared = \"not_shared\",   sharing_sanitation_facility_cat_not_applicable = \"not_applicable\",   sharing_sanitation_facility_cat_undefined = \"undefined\",   handwashing_facility_jmp_cat = \"wash_handwashing_facility_jmp_cat\",   handwashing_facility_jmp_cat_no_facility = \"no_facility\",   handwashing_facility_jmp_cat_limited = \"limited\",   handwashing_facility_jmp_cat_basic = \"basic\",   handwashing_facility_jmp_cat_undefined = \"undefined\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_wash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add WASH Sectoral Composite Score and Need Indicator ‚Äî add_comp_wash","text":"df data frame containing required WASH-related variables. setting Column name setting (camp, urban, rural). setting_camp Setting value camp. setting_urban Setting value urban. setting_rural Setting value rural. drinking_water_quantity Column name drinking water quantity. drinking_water_quantity_always Value \"always\" drinking water quantity. drinking_water_quantity_often Value \"often\" drinking water quantity. drinking_water_quantity_sometimes Value \"sometimes\" drinking water quantity. drinking_water_quantity_rarely Value \"rarely\" drinking water quantity. drinking_water_quantity_never Value \"never\" drinking water quantity. drinking_water_quantity_dnk Value \"know\" drinking water quantity. drinking_water_quantity_pnta Value \"prefer answer\" drinking water quantity. drinking_water_quality_jmp_cat Column name drinking water quality JMP category. drinking_water_quality_jmp_cat_surface_water Value \"surface water\" drinking water quality JMP category. drinking_water_quality_jmp_cat_unimproved Value \"unimproved\" drinking water quality JMP category. drinking_water_quality_jmp_cat_limited Value \"limited\" drinking water quality JMP category. drinking_water_quality_jmp_cat_basic Value \"basic\" drinking water quality JMP category. drinking_water_quality_jmp_cat_safely_managed Value \"safely managed\" drinking water quality JMP category. drinking_water_quality_jmp_cat_undefined Value \"undefined\" drinking water quality JMP category. sanitation_facility_jmp_cat Column name sanitation facility JMP category. sanitation_facility_jmp_cat_open_defecation Value \"open defecation\" sanitation facility JMP category. sanitation_facility_jmp_cat_unimproved Value \"unimproved\" sanitation facility JMP category. sanitation_facility_jmp_cat_limited Value \"limited\" sanitation facility JMP category. sanitation_facility_jmp_cat_basic Value \"basic\" sanitation facility JMP category. sanitation_facility_jmp_cat_safely_managed Value \"safely managed\" sanitation facility JMP category. sanitation_facility_jmp_cat_undefined Value \"undefined\" sanitation facility JMP category. sanitation_facility_cat Column name sanitation facility category. sanitation_facility_cat_none Value \"none\" sanitation facility category. sanitation_facility_cat_unimproved Value \"unimproved\" sanitation facility category. sanitation_facility_cat_improved Value \"improved\" sanitation facility category. sanitation_facility_cat_undefined Value \"undefined\" sanitation facility category. sanitation_facility_n_ind Column name number individuals using sanitation facility. sanitation_facility_n_ind_50_and_above Value \"50 \" number individuals using sanitation facility. sanitation_facility_n_ind_20_to_49 Value \"20 49\" number individuals using sanitation facility. sanitation_facility_n_ind_19_and_below Value \"19 \" number individuals using sanitation facility. sharing_sanitation_facility_cat Column name sharing sanitation facility. sharing_sanitation_facility_cat_shared Value \"shared\" sharing sanitation facility. sharing_sanitation_facility_cat_not_shared Value \"shared\" sharing sanitation facility. sharing_sanitation_facility_cat_not_applicable Value \"applicable\" sharing sanitation facility. sharing_sanitation_facility_cat_undefined Value \"undefined\" sharing sanitation facility. handwashing_facility_jmp_cat Column name handwashing facility JMP category. handwashing_facility_jmp_cat_no_facility Value \"facility\" handwashing facility JMP category. handwashing_facility_jmp_cat_limited Value \"limited\" handwashing facility JMP category. handwashing_facility_jmp_cat_basic Value \"basic\" handwashing facility JMP category. handwashing_facility_jmp_cat_undefined Value \"undefined\" handwashing facility JMP category.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_wash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add WASH Sectoral Composite Score and Need Indicator ‚Äî add_comp_wash","text":"data frame new columns: comp_wash_score_water_quantity: Numeric score water quantity (1-5). comp_wash_score_water_quality: Numeric score water quality (1-5). comp_wash_score_sanitation: Numeric score sanitation (1-5). comp_wash_score_hygiene: Numeric score hygiene (1-5). comp_wash_score: Overall WASH composite score (0-20). comp_wash_in_need: Binary indicator (0 1) households need WASH assistance.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_drinking_water_source_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Drinking Water Quality JMP Category ‚Äî add_drinking_water_source_cat","title":"Add Drinking Water Quality JMP Category ‚Äî add_drinking_water_source_cat","text":"function recodes water source time fetch water joint JMP (Joint Monitoring Programme) category.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_drinking_water_source_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Drinking Water Quality JMP Category ‚Äî add_drinking_water_source_cat","text":"","code":"add_drinking_water_source_cat(   df,   drinking_water_source = \"wash_drinking_water_source\",   drinking_water_source_cat_improved = c(\"piped_dwelling\", \"piped_compound\",     \"piped_neighbour\", \"tap\", \"borehole\", \"protected_well\", \"protected_spring\",     \"rainwater_collection\", \"tank_truck\", \"cart_tank\", \"kiosk\", \"bottled_water\",     \"sachet_water\"),   drinking_water_source_cat_unimproved = c(\"unprotected_well\", \"unprotected_spring\"),   drinking_water_source_cat_surface_water = \"surface_water\",   drinking_water_source_cat_undefined = c(\"dnk\", \"pnta\", \"other\") )  add_drinking_water_time_cat(   df,   drinking_water_time_yn = \"wash_drinking_water_time_yn\",   water_on_premises = \"water_on_premises\",   number_minutes = \"number_minutes\",   dnk = \"dnk\",   undefined = \"pnta\",   drinking_water_time_int = \"wash_drinking_water_time_int\",   max = 600,   drinking_water_time_sl = \"wash_drinking_water_time_sl\",   sl_under_30_min = \"under_30_min\",   sl_30min_1hr = \"30min_1hr\",   sl_more_than_1hr = \"more_than_1hr\",   sl_undefined = c(\"dnk\", \"pnta\"),   drinking_water_source = \"wash_drinking_water_source\",   skipped_drinking_water_source_premises = \"piped_dwelling\",   skipped_drinking_water_source_undefined = c(\"dnk\", \"pnta\") )  add_drinking_water_time_threshold_cat(   df,   drinking_water_time_30min_cat = \"wash_drinking_water_time_cat\",   drinking_water_time_30min_cat_premises = \"premises\",   drinking_water_time_30min_cat_under_30min = c(\"under_30_min\"),   drinking_water_time_30min_cat_above_30min = c(\"30min_1hr\", \"more_than_1hr\"),   drinking_water_time_30min_cat_undefined = \"undefined\" )  add_drinking_water_quality_jmp_cat(   df,   drinking_water_source_cat = \"wash_drinking_water_source_cat\",   drinking_water_source_cat_improved = \"improved\",   drinking_water_source_cat_unimproved = \"unimproved\",   drinking_water_source_cat_surface_water = \"surface_water\",   drinking_water_source_cat_undefined = \"undefined\",   drinking_water_time_30min_cat = \"wash_drinking_water_time_30min_cat\",   drinking_water_time_30min_cat_premises = \"premises\",   drinking_water_time_30min_cat_under_30min = \"under_30min\",   drinking_water_time_30min_cat_above_30min = \"above_30min\",   drinking_water_time_30min_cat_undefined = \"undefined\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_drinking_water_source_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Drinking Water Quality JMP Category ‚Äî add_drinking_water_source_cat","text":"df data frame. drinking_water_source Component column: Water source types. drinking_water_source_cat_improved Response code improved water source. drinking_water_source_cat_unimproved Response code unimproved water source. drinking_water_source_cat_surface_water Response code surface water source. drinking_water_source_cat_undefined Response code undefined water source. drinking_water_time_yn Component column: Time fetch water, scoping question. water_on_premises Character vector responses codes water premises. number_minutes Character vector responses codes number minutes. dnk Character vector responses codes \"know\". undefined Character vector responses codes undefined information, e.g. \"Prefer answer\". drinking_water_time_int Component column: Time fetch water, integer. max Integer, maximum value time fetch water. drinking_water_time_sl Component column: Time fetch water, simple choice. sl_under_30_min Response code 30 minutes. sl_30min_1hr Response code 30 minutes 1 hour. sl_more_than_1hr Response code 1 hour. sl_undefined Character vector responses codes undefined information, e.g. \"know\" \"Prefer answer\". skipped_drinking_water_source_premises Character vector responses codes skipped water source premises, e.g. \"Piped dwelling\". skipped_drinking_water_source_undefined Character vector responses codes skipped water source undefined, e.g. \"know\" \"Prefer answer\". drinking_water_time_30min_cat Component column: Time fetch water, recoded categories. drinking_water_time_30min_cat_premises Response code water premises. drinking_water_time_30min_cat_under_30min Response code 30 minutes. drinking_water_time_30min_cat_above_30min Response code 30 minutes. drinking_water_time_30min_cat_undefined Response code undefined time. drinking_water_source_cat Component column: Water source categories.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_drinking_water_source_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Drinking Water Quality JMP Category ‚Äî add_drinking_water_source_cat","text":"data frame new column 'wash_drinking_water_quality_jmp_cat' containing: limited: Response indicating limited access safe drinking water. basic: Response indicating basic access safe drinking water. safely_managed: Response indicating safely managed drinking water. unimproved: Response indicating unimproved water sources. surface_water: Response indicating surface water sources. undefined: Response undefined categories.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_freq_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank Top 3 Frequent Expenditure Types ‚Äî add_expenditure_type_freq_rank","title":"Rank Top 3 Frequent Expenditure Types ‚Äî add_expenditure_type_freq_rank","text":"function ranks top 3 frequent expenditure types household based amount spent various categories. adds new columns input data frame indicating top 3 expenditure types. Prerequisite function: add_expenditure_type_zero_freq.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_freq_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank Top 3 Frequent Expenditure Types ‚Äî add_expenditure_type_freq_rank","text":"","code":"add_expenditure_type_freq_rank(   df,   expenditure_freq_types = c(\"cm_expenditure_frequent_food\",     \"cm_expenditure_frequent_rent\", \"cm_expenditure_frequent_water\",     \"cm_expenditure_frequent_nfi\", \"cm_expenditure_frequent_utilities\",     \"cm_expenditure_frequent_fuel\", \"cm_expenditure_frequent_transportation\",     \"cm_expenditure_frequent_communication\", \"cm_expenditure_frequent_other\"),   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_freq_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank Top 3 Frequent Expenditure Types ‚Äî add_expenditure_type_freq_rank","text":"df data frame containing expenditure data households. expenditure_freq_types character vector. names columns contain amount frequent expenditures types. id_col name column contains unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_freq_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank Top 3 Frequent Expenditure Types ‚Äî add_expenditure_type_freq_rank","text":"data frame additional columns: cm_freq_expenditure_top1: frequent expenditure type. cm_freq_expenditure_top2: second frequent expenditure type. cm_freq_expenditure_top3: third frequent expenditure type.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank Top 3 Infrequent Expenditure Types ‚Äî add_expenditure_type_infreq_rank","title":"Rank Top 3 Infrequent Expenditure Types ‚Äî add_expenditure_type_infreq_rank","text":"function ranks top 3 infrequent expenditure types household based amount spent various categories. adds new columns input data frame indicating top 3 infrequent expenditure types. Prerequisite function: add_expenditure_type_zero_infreq.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank Top 3 Infrequent Expenditure Types ‚Äî add_expenditure_type_infreq_rank","text":"","code":"add_expenditure_type_infreq_rank(   df,   expenditure_infreq_types = c(\"cm_expenditure_infrequent_shelter\",     \"cm_expenditure_infrequent_nfi\", \"cm_expenditure_infrequent_health\",     \"cm_expenditure_infrequent_education\", \"cm_expenditure_infrequent_debt\",     \"cm_expenditure_infrequent_clothing\", \"cm_expenditure_infrequent_other\"),   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank Top 3 Infrequent Expenditure Types ‚Äî add_expenditure_type_infreq_rank","text":"df data frame containing infrequent expenditure data households. expenditure_infreq_types character vector. names columns contain amount infrequent expenditures types. id_col name column contains unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank Top 3 Infrequent Expenditure Types ‚Äî add_expenditure_type_infreq_rank","text":"data frame additional columns: cm_infreq_expenditure_top1: infrequent expenditure type. cm_infreq_expenditure_top2: second infrequent expenditure type. cm_infreq_expenditure_top3: third infrequent expenditure type.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rank Top 3 Infrequent Expenditure Types ‚Äî add_expenditure_type_infreq_rank","text":"Rank Top 3 Infrequent Expenditure Types","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Frequent Expenditure Type Amount as Proportions of Total Frequent Expenditure ‚Äî add_expenditure_type_prop_freq","title":"Add Frequent Expenditure Type Amount as Proportions of Total Frequent Expenditure ‚Äî add_expenditure_type_prop_freq","text":"function calculates proportion frequent expenditure type relative total frequent expenditure. adds new columns input data frame representing proportions. Prerequisite function: add_expenditure_type_zero_freq.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Frequent Expenditure Type Amount as Proportions of Total Frequent Expenditure ‚Äî add_expenditure_type_prop_freq","text":"","code":"add_expenditure_type_prop_freq(   df,   cm_expenditure_frequent_food = \"cm_expenditure_frequent_food\",   cm_expenditure_frequent_rent = \"cm_expenditure_frequent_rent\",   cm_expenditure_frequent_water = \"cm_expenditure_frequent_water\",   cm_expenditure_frequent_nfi = \"cm_expenditure_frequent_nfi\",   cm_expenditure_frequent_utilities = \"cm_expenditure_frequent_utilities\",   cm_expenditure_frequent_fuel = \"cm_expenditure_frequent_fuel\",   cm_expenditure_frequent_transportation = \"cm_expenditure_frequent_transportation\",   cm_expenditure_frequent_communication = \"cm_expenditure_frequent_communication\",   cm_expenditure_frequent_other = \"cm_expenditure_frequent_other\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Frequent Expenditure Type Amount as Proportions of Total Frequent Expenditure ‚Äî add_expenditure_type_prop_freq","text":"df data frame containing frequent expenditure data. cm_expenditure_frequent_food Column name food items expenditure amount. cm_expenditure_frequent_rent Column name rent shelter /land expenditure amount. cm_expenditure_frequent_water Column name water expenditure amount sources combined. cm_expenditure_frequent_nfi Column name non-food household items expenditure amount regular purchase, hygiene items, lightbulbs, etc. cm_expenditure_frequent_utilities Column name utilities expenditure amount, electricity gas connections, etc. cm_expenditure_frequent_fuel Column name fuel expenditure amount cooking, vehicles, etc. cm_expenditure_frequent_transportation Column name transportation expenditure amount, including vehicle fuel. cm_expenditure_frequent_communication Column name communications expenditure amount, phone airtime, Internet costs, etc. cm_expenditure_frequent_other Column name frequent expenditures.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Frequent Expenditure Type Amount as Proportions of Total Frequent Expenditure ‚Äî add_expenditure_type_prop_freq","text":"data frame additional columns: cm_expenditure_frequent_total: total frequent expenditure amount. cm_expenditure_frequent_food_prop: Proportion food expenditure. cm_expenditure_frequent_rent_prop: Proportion rent expenditure. cm_expenditure_frequent_water_prop: Proportion water expenditure. cm_expenditure_frequent_nfi_prop: Proportion non-food items expenditure. cm_expenditure_frequent_utilities_prop: Proportion utilities expenditure. cm_expenditure_frequent_fuel_prop: Proportion fuel expenditure. cm_expenditure_frequent_transportation_prop: Proportion transportation expenditure. cm_expenditure_frequent_communication_prop: Proportion communication expenditure. cm_expenditure_frequent_other_prop: Proportion frequent expenditures.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_infreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Infrequent Expenditure Type Proportions ‚Äî add_expenditure_type_prop_infreq","title":"Add Infrequent Expenditure Type Proportions ‚Äî add_expenditure_type_prop_infreq","text":"function calculates proportion infrequent expenditure type relative total infrequent expenditure. adds new columns input data frame representing proportions. Prerequisite function: add_expenditure_type_zero_infreq.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_infreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Infrequent Expenditure Type Proportions ‚Äî add_expenditure_type_prop_infreq","text":"","code":"add_expenditure_type_prop_infreq(   df,   cm_expenditure_infrequent_shelter = \"cm_expenditure_infrequent_shelter\",   cm_expenditure_infrequent_nfi = \"cm_expenditure_infrequent_nfi\",   cm_expenditure_infrequent_health = \"cm_expenditure_infrequent_health\",   cm_expenditure_infrequent_education = \"cm_expenditure_infrequent_education\",   cm_expenditure_infrequent_debt = \"cm_expenditure_infrequent_debt\",   cm_expenditure_infrequent_clothing = \"cm_expenditure_infrequent_clothing\",   cm_expenditure_infrequent_other = \"cm_expenditure_infrequent_other\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_infreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Infrequent Expenditure Type Proportions ‚Äî add_expenditure_type_prop_infreq","text":"df data frame containing infrequent expenditure data. cm_expenditure_infrequent_shelter Column name shelter maintenance repair expenditure amount. cm_expenditure_infrequent_nfi Column containing expenditure amount non-food household items infrequent purchase, blankets, cooking pots, clothing, etc. cm_expenditure_infrequent_health Column name health-related expenditures, healthcare, medicine, etc. cm_expenditure_infrequent_education Column name education-related expenditures, school fees, supplies, uniforms, etc. cm_expenditure_infrequent_debt Column containing expenditure amount debt repayment. cm_expenditure_infrequent_clothing Column containing expenditure amount clothing. cm_expenditure_infrequent_other Column name infrequent expenditures.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_infreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Infrequent Expenditure Type Proportions ‚Äî add_expenditure_type_prop_infreq","text":"data frame additional columns: cm_expenditure_infrequent_total: total infrequent expenditure amount. cm_expenditure_infrequent_shelter_prop: Proportion shelter maintenance repair expenditure. cm_expenditure_infrequent_nfi_prop: Proportion non-food household items expenditure. cm_expenditure_infrequent_health_prop: Proportion health-related expenditures. cm_expenditure_infrequent_education_prop: Proportion education-related expenditures. cm_expenditure_infrequent_debt_prop: Proportion debt repayment expenditure. cm_expenditure_infrequent_clothing_prop: Proportion clothing-related expenditure. cm_expenditure_infrequent_other_prop: Proportion infrequent expenditures.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Zero for Skipped Frequent Expenditure Types ‚Äî add_expenditure_type_zero_freq","title":"Add Zero for Skipped Frequent Expenditure Types ‚Äî add_expenditure_type_zero_freq","text":"function adds zero values frequent expenditure types skipped survey. Frequent expenditures defined 30-day recall period. function also ensures expenditure reported, expenditure types set zero.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Zero for Skipped Frequent Expenditure Types ‚Äî add_expenditure_type_zero_freq","text":"","code":"add_expenditure_type_zero_freq(   df,   expenditure_freq = \"cm_expenditure_frequent\",   none = \"none\",   undefined = c(\"dnk\", \"pnta\"),   expenditure_freq_types = c(\"cm_expenditure_frequent_food\",     \"cm_expenditure_frequent_rent\", \"cm_expenditure_frequent_water\",     \"cm_expenditure_frequent_nfi\", \"cm_expenditure_frequent_utilities\",     \"cm_expenditure_frequent_fuel\", \"cm_expenditure_frequent_transportation\",     \"cm_expenditure_frequent_communication\", \"cm_expenditure_frequent_other\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Zero for Skipped Frequent Expenditure Types ‚Äî add_expenditure_type_zero_freq","text":"df data frame containing expenditure data. expenditure_freq character string. name column contains frequent expenditures. none value expenditure. undefined character vector. values indicate frequent expenditures type skipped. expenditure_freq_types character vector. names columns contain amount frequent expenditures types.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Zero for Skipped Frequent Expenditure Types ‚Äî add_expenditure_type_zero_freq","text":"data frame updated expenditure columns: columns specified expenditure_freq_types updated zeros skipped entries.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_infreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Zero for Skipped Infrequent Expenditure Types ‚Äî add_expenditure_type_zero_infreq","title":"Add Zero for Skipped Infrequent Expenditure Types ‚Äî add_expenditure_type_zero_infreq","text":"function adds zero values infrequent expenditure types skipped survey. Infrequent expenditures defined 6-month recall period. function also ensures expenditure reported, expenditure types set zero.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_infreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Zero for Skipped Infrequent Expenditure Types ‚Äî add_expenditure_type_zero_infreq","text":"","code":"add_expenditure_type_zero_infreq(   df,   expenditure_infreq = \"cm_expenditure_frequent\",   none = \"none\",   undefined = c(\"dnk\", \"pnta\"),   expenditure_infreq_types = c(\"cm_expenditure_infrequent_shelter\",     \"cm_expenditure_infrequent_nfi\", \"cm_expenditure_infrequent_health\",     \"cm_expenditure_infrequent_education\", \"cm_expenditure_infrequent_debt\",     \"cm_expenditure_infrequent_clothing\", \"cm_expenditure_infrequent_other\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_infreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Zero for Skipped Infrequent Expenditure Types ‚Äî add_expenditure_type_zero_infreq","text":"df data frame containing expenditure data. expenditure_infreq character string. name column contains infrequent expenditures. none value expenditure. undefined character vector. values indicate infrequent expenditures type skipped. expenditure_infreq_types character vector. names columns contain amount infrequent expenditures types.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_infreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Zero for Skipped Infrequent Expenditure Types ‚Äî add_expenditure_type_zero_infreq","text":"data frame updated expenditure columns: columns specified expenditure_infreq_types updated zeros skipped entries.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_fds_cannot_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Functional Domestic Space Tasks Categories ‚Äî add_fds_cannot_cat","title":"Add Functional Domestic Space Tasks Categories ‚Äî add_fds_cannot_cat","text":"function adds categories functional domestic space tasks based various input parameters. processes cooking, sleeping, storing, lighting tasks, creating new columns standardized categories summary tasks performed.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_fds_cannot_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Functional Domestic Space Tasks Categories ‚Äî add_fds_cannot_cat","text":"","code":"add_fds_cannot_cat(   df,   fds_cooking = \"snfi_fds_cooking\",   fds_cooking_can = \"no\",   fds_cooking_cannot = \"yes\",   fds_cooking_no_need = \"no_need\",   fds_cooking_undefined = \"pnta\",   fds_sleeping = \"snfi_fds_sleeping\",   fds_sleeping_can = \"yes\",   fds_sleeping_cannot = \"no\",   fds_sleeping_undefined = \"pnta\",   fds_storing = \"snfi_fds_storing\",   fds_storing_cannot = \"no\",   fds_storing_can = c(\"yes_issues\", \"yes_no_issues\"),   fds_storing_undefined = \"pnta\",   lighting_source = \"energy_lighting_source\",   lighting_source_none = \"none\",   lighting_source_undefined = c(\"pnta\", \"dnk\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_fds_cannot_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Functional Domestic Space Tasks Categories ‚Äî add_fds_cannot_cat","text":"df data frame containing input columns fds_cooking Column name cooking tasks fds_cooking_can Value can perform cooking tasks without issues fds_cooking_cannot Value facing issues cooking fds_cooking_no_need Value need perform cooking tasks fds_cooking_undefined Vector undefined responses cooking tasks fds_sleeping Column name sleeping tasks fds_sleeping_can Value can perform sleeping tasks fds_sleeping_cannot Value perform sleeping tasks fds_sleeping_undefined Vector undefined responses sleeping tasks fds_storing Column name storing tasks fds_storing_cannot Value perform storing tasks fds_storing_can Value can perform storing tasks fds_storing_undefined Vector undefined responses storing tasks lighting_source Column name lighting source lighting_source_none Value lighting source lighting_source_undefined Vector undefined responses lighting source","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_fds_cannot_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Functional Domestic Space Tasks Categories ‚Äî add_fds_cannot_cat","text":"data frame additional columns: snfi_fds_cooking: Standardized categories cooking tasks snfi_fds_sleeping: Standardized categories sleeping tasks snfi_fds_storing: Standardized categories storing tasks energy_lighting_source: Standardized categories lighting source snfi_fds_cannot_n: Number tasks performed snfi_fds_cannot_cat: Categorized number tasks performed","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Handwashing Facility Category ‚Äî add_handwashing_facility_cat","title":"Add Handwashing Facility Category ‚Äî add_handwashing_facility_cat","text":"function categorizes handwashing facilities \"Basic,\" \"Limited,\" \"facility\" based survey data. evaluates various parameters related availability handwashing facilities presence soap water.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Handwashing Facility Category ‚Äî add_handwashing_facility_cat","text":"","code":"add_handwashing_facility_cat(   df,   survey_modality = \"survey_modality\",   survey_modality_in_person = c(\"in_person\"),   survey_modality_remote = c(\"remote\"),   facility = \"wash_handwashing_facility\",   facility_yes = c(\"available_fixed_in_dwelling\", \"available_fixed_in_plot\",     \"available_fixed_or_mobile\"),   facility_no = \"none\",   facility_no_permission = \"no_permission\",   facility_undefined = c(\"other\", \"pnta\"),   facility_observed_water = \"wash_handwashing_facility_observed_water\",   facility_observed_water_yes = \"water_available\",   facility_observed_water_no = \"water_not_available\",   facility_observed_soap = \"wash_soap_observed\",   facility_observed_soap_yes = \"yes_soap_shown\",   facility_observed_soap_no = \"no\",   facility_observed_soap_undefined = c(\"other\", \"pnta\"),   facility_reported = \"wash_handwashing_facility_reported\",   facility_reported_yes = c(\"fixed_dwelling\", \"fixed_yard\", \"mobile\"),   facility_reported_no = c(\"none\"),   facility_reported_undefined = c(\"other\", \"dnk\", \"pnta\"),   facility_reported_water = \"wash_handwashing_facility_water_reported\",   facility_reported_water_yes = \"yes\",   facility_reported_water_no = \"no\",   facility_reported_water_undefined = c(\"dnk\", \"pnta\"),   facility_reported_soap = \"wash_soap_reported\",   facility_reported_soap_yes = \"yes\",   facility_reported_soap_no = \"no\",   facility_reported_soap_undefined = c(\"dnk\", \"pnta\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Handwashing Facility Category ‚Äî add_handwashing_facility_cat","text":"df data frame containing survey data. survey_modality Column name survey modality (e.g., \"survey_modality\"). survey_modality_in_person Options -person survey modality. survey_modality_remote Options remote survey modality. facility Column name observed handwashing facility (e.g., \"wash_handwashing_facility\"). facility_yes Response code(s) indicating availability (e.g., \"available\"). facility_no Response code indicating unavailability (e.g., \"none\"). facility_no_permission Response code cases permission observe. facility_undefined Response code(s) undefined situations. facility_observed_water Column name observed water availability (e.g., \"wash_handwashing_facility_observed_water\"). facility_observed_water_yes Response code indicating water available. facility_observed_water_no Response code indicating water available. facility_observed_soap Column name observed soap availability. facility_observed_soap_yes Response code indicating soap available (observed). facility_observed_soap_no Response code indicating soap available (observed). facility_observed_soap_undefined Response code(s) undefined observed soap situations. facility_reported Column name reported handwashing facility (used remote/-permission cases). facility_reported_yes Response code(s) indicating facility available (reported). facility_reported_no Response code(s) indicating facility available (reported). facility_reported_undefined Response code(s) undefined reported facility situations. facility_reported_water Column name reported water availability permission remote conditions. facility_reported_water_yes Response code(s) indicating water available permission remote conditions. facility_reported_water_no Response code indicating water available permission remote conditions. facility_reported_water_undefined Response code(s) undefined water situations permission remote conditions. facility_reported_soap Column name reported soap availability permission remote conditions. facility_reported_soap_yes Response code(s) indicating soap available permission remote conditions. facility_reported_soap_no Response code indicating soap available permission remote conditions. facility_reported_soap_undefined Response code(s) undefined soap situations permission remote conditions.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Handwashing Facility Category ‚Äî add_handwashing_facility_cat","text":"data frame additional column 'wash_handwashing_facility_jmp_cat': Categorized handwashing facilities: \"Basic,\" \"Limited,\" \"Facility.\"","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Handwashing Facility Category ‚Äî add_handwashing_facility_cat","text":"function checks presence validity required columns values input data frame. ensures parameters documented used logic. categorization follows JMP (Joint Monitoring Programme) standards handwashing facilities.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Head of Household Information ‚Äî add_hoh_final","title":"Update Head of Household Information ‚Äî add_hoh_final","text":"function updates head household (HoH) gender age information based whether respondent HoH . respondent HoH, gender age used; otherwise, existing HoH information retained.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Head of Household Information ‚Äî add_hoh_final","text":"","code":"add_hoh_final(   df,   resp_hoh_yn = \"resp_hoh_yn\",   yes = \"yes\",   no = \"no\",   hoh_gender = \"hoh_gender\",   hoh_age = \"hoh_age\",   resp_gender = \"resp_gender\",   resp_age = \"resp_age\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Head of Household Information ‚Äî add_hoh_final","text":"df input dataframe. resp_hoh_yn column name whether respondent head household (HoH) yes/indicator. yes value 'yes' 'resp_hoh_yn' column. value '' 'resp_hoh_yn' column. hoh_gender column name household (HoH) gender. hoh_age column name household (HoH) age. resp_gender column name respondent (resp) gender. resp_age column name respondent (resp) age.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Head of Household Information ‚Äî add_hoh_final","text":"modified dataframe updated columns: hoh_gender: Updated head household gender. hoh_age: Updated head household age.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Income Source Amounts as Proportions of Total Income ‚Äî add_income_source_prop","title":"Add Income Source Amounts as Proportions of Total Income ‚Äî add_income_source_prop","text":"function calculates proportion income source relative total income. also computes total income sources. Prerequisite function: add_income_source_zero_to_sl.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Income Source Amounts as Proportions of Total Income ‚Äî add_income_source_prop","text":"","code":"add_income_source_prop(   df,   income_souce_salaried_n = \"cm_income_source_salaried_n\",   income_source_casual_n = \"cm_income_source_casual_n\",   income_source_own_business_n = \"cm_income_source_own_business_n\",   income_source_own_production_n = \"cm_income_source_own_production_n\",   income_source_social_benefits_n = \"cm_income_source_social_benefits_n\",   income_source_rent_n = \"cm_income_source_rent_n\",   income_source_remittances_n = \"cm_income_source_remittances_n\",   income_source_assistance_n = \"cm_income_source_assistance_n\",   income_source_support_friends_n = NULL,   income_source_donation_n = NULL,   income_source_other_n = \"cm_income_source_other_n\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Income Source Amounts as Proportions of Total Income ‚Äî add_income_source_prop","text":"df data frame containing income source columns income_souce_salaried_n Column name salaried income amount income_source_casual_n Column name casual income amount income_source_own_business_n Column name business income amount income_source_own_production_n Column name production income amount income_source_social_benefits_n Column name social benefits income amount income_source_rent_n Column name rent income amount income_source_remittances_n Column name remittances income amount income_source_assistance_n Column name assistance income amount income_source_support_friends_n Column name support friends income amount income_source_donation_n Column name donation income amount income_source_other_n Column name income amount","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Income Source Amounts as Proportions of Total Income ‚Äî add_income_source_prop","text":"data frame additional columns: cm_income_total: Total income sources. *_prop: Proportion income source relative total income (e.g., cm_income_source_salaried_n_prop).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":"details-on-loans","dir":"Reference","previous_headings":"","what":"Details on loans","title":"Add Income Source Amounts as Proportions of Total Income ‚Äî add_income_source_prop","text":"Loans (income_source_support_friends_n income_source_donation_n) considered cash influx. Yet count formal income source. good practice collect figures part module, included total income calculation. default value NULL.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Income Source Categories, Count, and Ranking Top 3 ‚Äî add_income_source_rank","title":"Add Income Source Categories, Count, and Ranking Top 3 ‚Äî add_income_source_rank","text":"function categorizes income sources, counts type, ranks top 3 income sources. also adds categories emergency, unstable, stable, income sources. Prerequisite function: add_income_source_zero_to_sl.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Income Source Categories, Count, and Ranking Top 3 ‚Äî add_income_source_rank","text":"","code":"add_income_source_rank(   df,   emergency = c(\"cm_income_source_assistance_n\", \"cm_income_source_support_friends_n\",     \"cm_income_source_donation_n\"),   unstable = c(\"cm_income_source_casual_n\", \"cm_income_source_social_benefits_n\",     \"cm_income_source_rent_n\", \"cm_income_source_remittances_n\"),   stable = c(\"cm_income_source_salaried_n\", \"cm_income_source_own_business_n\",     \"cm_income_source_own_production_n\"),   other = \"cm_income_source_other_n\",   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Income Source Categories, Count, and Ranking Top 3 ‚Äî add_income_source_rank","text":"df data frame containing income source information. emergency vector column names containing emergency income sources. unstable vector column names containing unstable income sources. stable vector column names containing stable income sources. name column containing income sources. id_col name column containing unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Income Source Categories, Count, and Ranking Top 3 ‚Äî add_income_source_rank","text":"data frame additional columns: cm_income_source_emergency_n: Count emergency income sources. cm_income_source_unstable_n: Count unstable income sources. cm_income_source_stable_n: Count stable income sources. cm_income_source_other_n: Count income sources. cm_income_source_top1: Top income source. cm_income_source_top2: Second top income source. cm_income_source_top3: Third top income source.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_zero_to_sl.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Zero to Income Sources When Skipped ‚Äî add_income_source_zero_to_sl","title":"Add Zero to Income Sources When Skipped ‚Äî add_income_source_zero_to_sl","text":"function adds zero income source columns main income source skipped undefined. also ensures income sources zero main income source \"none\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_zero_to_sl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Zero to Income Sources When Skipped ‚Äî add_income_source_zero_to_sl","text":"","code":"add_income_source_zero_to_sl(   df,   income_source = \"cm_income_source\",   none = \"none\",   undefined = c(\"dnk\", \"pnta\"),   income_sources = c(\"cm_income_source_salaried_n\", \"cm_income_source_casual_n\",     \"cm_income_source_own_business_n\", \"cm_income_source_own_production_n\",     \"cm_income_source_social_benefits_n\", \"cm_income_source_rent_n\",     \"cm_income_source_remittances_n\", \"cm_income_source_assistance_n\",     \"cm_income_source_support_friends_n\", \"cm_income_source_donation_n\",     \"cm_income_source_other_n\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_zero_to_sl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Zero to Income Sources When Skipped ‚Äî add_income_source_zero_to_sl","text":"df data frame containing income source information. income_source character string. name column contains main income source. none character string. value indicates income source selected. undefined character vector. values indicate income source undefined skipped. income_sources character vector. names columns contain amount income various sources.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_zero_to_sl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Zero to Income Sources When Skipped ‚Äî add_income_source_zero_to_sl","text":"data frame updated income source columns: income_sources: specified income source columns updated zero main income source skipped, undefined, none.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_age_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Age and Gender Dummy Variables for Demographics Loop ‚Äî add_loop_age_dummy","title":"Add Age and Gender Dummy Variables for Demographics Loop ‚Äî add_loop_age_dummy","text":"set functions adds dummy variables age classes gender demographics loop, optionally sums dummies main dataset. includes four main functions: add_loop_age_dummy(), add_loop_age_dummy_to_main(), add_loop_age_gender_dummy(), add_loop_age_gender_dummy_to_main().","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_age_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Age and Gender Dummy Variables for Demographics Loop ‚Äî add_loop_age_dummy","text":"","code":"add_loop_age_dummy(   loop,   ind_age = \"ind_age\",   lb = 5,   ub = 18,   new_colname = NULL )  add_loop_age_dummy_to_main(   main,   loop,   ind_age_dummy = \"ind_age_5_18\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\",   new_colname = NULL )  add_loop_age_gender_dummy(   loop,   ind_age = \"ind_age\",   lb = 5,   ub = 18,   ind_gender = \"ind_gender\",   gender = \"female\",   new_colname = NULL )  add_loop_age_gender_dummy_to_main(   main,   loop,   ind_age_gender_dummy = \"ind_age_female_5_18\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\",   new_colname = NULL )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_age_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Age and Gender Dummy Variables for Demographics Loop ‚Äî add_loop_age_dummy","text":"loop data frame individual-level data. ind_age Column name individual age. lb Lower bound age class. ub Upper bound age class. new_colname New column name dummy variable. NULL, default \"ind_age_lb_ub\" \"ind_dummy_n\" \"ind_age_gender_lb_ub\" \"ind_age_gender_dummy_n\" depending function used. main data frame household-level data. ind_age_dummy Column name dummy variable age class. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset. ind_gender Column name individual gender. gender Response options interest, e.g. \"Female\". ind_age_gender_dummy Column name dummy variable age-gender class.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_age_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Age and Gender Dummy Variables for Demographics Loop ‚Äî add_loop_age_dummy","text":"Depending function used: add_loop_age_dummy: Returns loop data frame additional column age dummy variable. add_loop_age_dummy_to_main: Returns main data frame additional column sum age dummy variables. add_loop_age_gender_dummy: Returns loop data frame additional column age-gender dummy variable. add_loop_age_gender_dummy_to_main: Returns main data frame additional column sum age-gender dummy variables.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_access_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Education Access Dummy Variables ‚Äî add_loop_edu_access_d","title":"Add Education Access Dummy Variables ‚Äî add_loop_edu_access_d","text":"function adds dummy variables individual-level dataframe school-aged children. creates variable (edu_ind_access_d) indicates whether child accessed school (1 accessed, 0 otherwise) another variable (edu_ind_no_access_d) indicates access school. Prerequisite function: add_loop_edu_ind_age_corrected.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_access_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Education Access Dummy Variables ‚Äî add_loop_edu_access_d","text":"","code":"add_loop_edu_access_d(   loop,   ind_access = \"edu_access\",   yes = \"yes\",   no = \"no\",   pnta = \"pnta\",   dnk = \"dnk\",   ind_schooling_age_d = \"edu_ind_schooling_age_d\" )  add_loop_edu_access_d_to_main(   main,   loop,   ind_access_d = \"edu_ind_access_d\",   ind_no_access_d = \"edu_ind_no_access_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_access_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Education Access Dummy Variables ‚Äî add_loop_edu_access_d","text":"loop data frame individual-level data loop. ind_access Column name education access. yes Value indicating access education (e.g., \"yes\"). Value indicating access education (e.g., \"\"). pnta Value indicating applicable (e.g., \"pnta\"). dnk Value indicating know (e.g., \"dnk\"). ind_schooling_age_d Column name dummy variable indicating schooling age. main data frame household-level data. ind_access_d Column name education access (binary). ind_no_access_d Column name education access (binary). id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_access_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Education Access Dummy Variables ‚Äî add_loop_edu_access_d","text":"data frame additional columns: edu_ind_access_d: Dummy variable indicating access education (1 accessed, 0 otherwise). edu_ind_no_access_d: Dummy variable indicating access education (1 accessed, 0 otherwise).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_barrier_protection_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Child Protection Barriers to Education Variable ‚Äî add_loop_edu_barrier_protection_d","title":"Add Child Protection Barriers to Education Variable ‚Äî add_loop_edu_barrier_protection_d","text":"function adds dummy variable child protection barriers education individual-level data aggregates household-level data. Prerequisite function: add_loop_edu_ind_age_corrected.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_barrier_protection_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Child Protection Barriers to Education Variable ‚Äî add_loop_edu_barrier_protection_d","text":"","code":"add_loop_edu_barrier_protection_d(   loop,   barriers = \"edu_barrier\",   protection_issues = c(\"protection_at_school\", \"protection_travel_school\",     \"child_work_home\", \"child_work_outside\", \"child_armed_group\", \"child_marriage\",     \"ban\", \"enroll_lack_documentation\", \"discrimination\"),   ind_schooling_age_d = \"edu_ind_schooling_age_d\" )  add_loop_edu_barrier_protection_d_to_main(   main,   loop,   ind_barrier_protection_d = \"edu_ind_barrier_protection_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_barrier_protection_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Child Protection Barriers to Education Variable ‚Äî add_loop_edu_barrier_protection_d","text":"loop data frame individual-level data loop. barriers Column name child protection barrier category. protection_issues Vector protection issues RESPONSE CODES. ind_schooling_age_d Column name dummy variable schooling age. main data frame household-level data. ind_barrier_protection_d Column name dummy variable child protection barrier category. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_barrier_protection_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Child Protection Barriers to Education Variable ‚Äî add_loop_edu_barrier_protection_d","text":"data frame additional column: edu_ind_barrier_protection_d: Dummy variable indicating school-aged child faces protection barrier (1) (0). data frame additional column: edu_barrier_protection_n Count school-aged children facing protection barriers household.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_disrupted_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Education Disruption Categories ‚Äî add_loop_edu_disrupted_d","title":"Add Education Disruption Categories ‚Äî add_loop_edu_disrupted_d","text":"function adds education disruption binaries individual-level data summarizes household level. includes two main functions: add_loop_edu_disrupted_d() individual-level data add_loop_edu_disrupted_d_to_main() household-level data. Prerequisite function: add_loop_edu_ind_age_corrected.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_disrupted_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Education Disruption Categories ‚Äî add_loop_edu_disrupted_d","text":"","code":"add_loop_edu_disrupted_d(   df,   attack = \"edu_disrupted_attack\",   hazards = \"edu_disrupted_hazards\",   displaced = \"edu_disrupted_displaced\",   teacher = \"edu_disrupted_teacher\",   levels = c(\"yes\", \"no\", \"dnk\", \"pnta\"),   ind_schooling_age_d = \"edu_ind_schooling_age_d\" )  add_loop_edu_disrupted_d_to_main(   main,   loop,   attack_d = \"edu_disrupted_attack_d\",   hazards_d = \"edu_disrupted_hazards_d\",   displaced_d = \"edu_disrupted_displaced_d\",   teacher_d = \"edu_disrupted_teacher_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_disrupted_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Education Disruption Categories ‚Äî add_loop_edu_disrupted_d","text":"df data frame containing individual-level education data. attack Column name attack disruption. NULL dimension present data frame. hazards Column name hazards disruption. displaced Column name displaced disruption. teacher Column name teacher disruption. levels Vector levels disruption variables. ind_schooling_age_d Column name dummy variable schooling age class. main data frame household-level data. loop data frame individual-level data. attack_d Column name dummy variable attack dimension. NULL dimension present data frame. hazards_d Column name dummy variable hazards dimension. displaced_d Column name dummy variable displaced dimension. teacher_d Column name dummy variable teacher dimension. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_disrupted_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Education Disruption Categories ‚Äî add_loop_edu_disrupted_d","text":"data frame additional columns: *_d: Binary columns disruption type (e.g., edu_disrupted_attack_d). data frame additional columns: edu_disrupted_*_n: Count individuals experiencing type education disruption (e.g., edu_disrupted_hazards_n).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a correct schooling age to the loop ‚Äî add_loop_edu_ind_age_corrected","title":"Add a correct schooling age to the loop ‚Äî add_loop_edu_ind_age_corrected","text":"Add correct schooling age loop","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a correct schooling age to the loop ‚Äî add_loop_edu_ind_age_corrected","text":"","code":"add_loop_edu_ind_age_corrected(   loop,   main,   id_col_loop = \"uuid\",   id_col_main = \"uuid\",   survey_start_date = \"start\",   school_year_start_month = 9,   ind_age = \"ind_age\",   month = NULL,   schooling_start_age = 5 )  add_loop_edu_ind_schooling_age_d_to_main(   main,   loop,   ind_schooling_age_d = \"edu_ind_schooling_age_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a correct schooling age to the loop ‚Äî add_loop_edu_ind_age_corrected","text":"loop data frame individual-level data. main data frame household-level data. id_col_loop Column name unique identifier loop dataset. id_col_main Column name unique identifier main dataset. survey_start_date Survey start date column name main. school_year_start_month month school year started. ind_age individual age column. month NULL, integer 1 12 used month data collection households. schooling_start_age age assign value 1 edu_ind_schooling_age_d. Default 5. ind_schooling_age_d Column name dummy variable schooling age class.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a correct schooling age to the loop ‚Äî add_loop_edu_ind_age_corrected","text":"2 new columns: \"edu_ind_age_corrected\" corrected individual age, dummy variable edu_ind_schooling_age_d","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_healthcare_needed_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Healthcare Needed Category to Individual Data ‚Äî add_loop_healthcare_needed_cat","title":"Add Healthcare Needed Category to Individual Data ‚Äî add_loop_healthcare_needed_cat","text":"function adds healthcare need categories individual-level data, including disability information provided. creates dummy variables different healthcare need scenarios optionally includes disability-specific indicators. function aggregates individual-level healthcare need data household level, including disability-specific information provided.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_healthcare_needed_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Healthcare Needed Category to Individual Data ‚Äî add_loop_healthcare_needed_cat","text":"","code":"add_loop_healthcare_needed_cat(   loop,   ind_healthcare_needed = \"health_ind_healthcare_needed\",   ind_healthcare_needed_no = \"no\",   ind_healthcare_needed_yes = \"yes\",   ind_healthcare_needed_dnk = \"dnk\",   ind_healthcare_needed_pnta = \"pnta\",   ind_healthcare_received = \"health_ind_healthcare_received\",   ind_healthcare_received_no = \"no\",   ind_healthcare_received_yes = \"yes\",   ind_healthcare_received_dnk = \"dnk\",   ind_healthcare_received_pnta = \"pnta\",   ind_age = \"ind_age\" )  add_loop_healthcare_needed_cat_to_main(   main,   loop,   ind_healthcare_needed_no = \"health_ind_healthcare_needed_no\",   ind_healthcare_needed_yes_unmet = \"health_ind_healthcare_needed_yes_unmet\",   ind_healthcare_needed_yes_met = \"health_ind_healthcare_needed_yes_met\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_healthcare_needed_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Healthcare Needed Category to Individual Data ‚Äî add_loop_healthcare_needed_cat","text":"loop data frame individual-level data. ind_healthcare_needed name variable indicates healthcare needed. ind_healthcare_needed_no binary variable indicates healthcare needed. ind_healthcare_needed_yes Level \"yes\" ind_healthcare_needed. ind_healthcare_needed_dnk Level \"know\" ind_healthcare_needed. ind_healthcare_needed_pnta Level \"prefer answer\" ind_healthcare_needed. ind_healthcare_received name variable indicates healthcare received. ind_healthcare_received_no Level \"\" ind_healthcare_received. ind_healthcare_received_yes Level \"yes\" ind_healthcare_received. ind_healthcare_received_dnk Level \"know\" ind_healthcare_received. ind_healthcare_received_pnta Level \"prefer answer\" ind_healthcare_received. ind_age name variable indicates age individual. main data frame household-level data. ind_healthcare_needed_yes_unmet binary variable indicates healthcare needed unmet. ind_healthcare_needed_yes_met binary variable indicates healthcare needed met. id_col_main column name unique identifier main data frame. id_col_loop column name unique identifier loop data frame.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_healthcare_needed_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Healthcare Needed Category to Individual Data ‚Äî add_loop_healthcare_needed_cat","text":"data frame additional columns: health_ind_healthcare_needed_d: Dummy variable healthcare needed. health_ind_healthcare_received_d: Dummy variable healthcare received. health_ind_healthcare_needed_cat: Categorized healthcare need: \"no_need\", \"yes_unmet_need\", \"yes_met_need\". health_ind_healthcare_needed_no: Dummy variable healthcare need. health_ind_healthcare_needed_yes_unmet: Dummy variable unmet healthcare need. health_ind_healthcare_needed_yes_met: Dummy variable met healthcare need. data frame additional columns: health_ind_healthcare_needed_no_n: Count individuals needing healthcare. health_ind_healthcare_needed_yes_unmet_n: Count individuals unmet healthcare needs. health_ind_healthcare_needed_yes_met_n: Count individuals met healthcare needs.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_wgq_ss.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Washington Group Short Set (WG-SS) Disability Indicators ‚Äî add_loop_wgq_ss","title":"Prepare Washington Group Short Set (WG-SS) Disability Indicators ‚Äî add_loop_wgq_ss","text":"function prepares dummy variables WG-SS component (vision, hearing, mobility, cognition, self-care, communication) levels (difficulty, difficulty, lot difficulty, ). combines sum scores level creates disability binary cut-offs variables.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_wgq_ss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Washington Group Short Set (WG-SS) Disability Indicators ‚Äî add_loop_wgq_ss","text":"","code":"add_loop_wgq_ss(   loop,   ind_age = \"ind_age\",   vision = \"wgq_vision\",   hearing = \"wgq_hearing\",   mobility = \"wgq_mobility\",   cognition = \"wgq_cognition\",   self_care = \"wgq_self_care\",   communication = \"wgq_communication\",   no_difficulty = \"no_difficulty\",   some_difficulty = \"some_difficulty\",   lot_of_difficulty = \"lot_of_difficulty\",   cannot_do = \"cannot_do\",   undefined = c(\"dnk\", \"pnta\") )  add_loop_wgq_ss_to_main(   main,   loop,   wgq_dis_4 = \"wgq_dis_4\",   wgq_dis_3 = \"wgq_dis_3\",   wgq_dis_2 = \"wgq_dis_2\",   wgq_dis_1 = \"wgq_dis_1\",   ind_age_above_5 = \"ind_age_above_5\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_wgq_ss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Washington Group Short Set (WG-SS) Disability Indicators ‚Äî add_loop_wgq_ss","text":"loop data frame individual-level data. ind_age individual age column. vision Vision component column. hearing Hearing component column. mobility Mobility component column. cognition Cognition component column. self_care Self-care component column. communication Communication component column. no_difficulty Level difficulty. some_difficulty Level difficulty. lot_of_difficulty Level lot difficulty. cannot_do Level . undefined Vector undefined responses, Prefer answer know. main data frame household-level data. wgq_dis_4 Column name disability 4 cut-offs binary. wgq_dis_3 Column name disability 3 cut-offs binary. wgq_dis_2 Column name disability 2 cut-offs binary. wgq_dis_1 Column name disability 1 cut-offs binary. ind_age_above_5 Column name age 5 dummy individual-level dataset. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_wgq_ss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Washington Group Short Set (WG-SS) Disability Indicators ‚Äî add_loop_wgq_ss","text":"data frame additional columns: *_cannot_do_d: Binary indicators \"\" level component. *_lot_of_difficulty_d: Binary indicators \"lot difficulty\" level component. *_some_difficulty_d: Binary indicators \"difficulty\" level component. *_no_difficulty_d: Binary indicators \"difficulty\" level component. wgq_cannot_do_n: Sum \"\" indicators across components. wgq_lot_of_difficulty_n: Sum \"lot difficulty\" indicators across components. wgq_some_difficulty_n: Sum \"difficulty\" indicators across components. wgq_no_difficulty_n: Sum \"difficulty\" indicators across components. wgq_cannot_do_d: Binary indicator \"\" across components. wgq_lot_of_difficulty_d: Binary indicator \"lot difficulty\" across components. wgq_some_difficulty_d: Binary indicator \"difficulty\" across components. wgq_no_difficulty_d: Binary indicator \"difficulty\" across components. wgq_dis_4: Disability cut-4: domain coded \"\". wgq_dis_3: Disability cut-3: domain coded \"lot difficulty\" \"\". wgq_dis_2: Disability cut-2: least 2 domains coded \"difficulty\" domain coded \"lot difficulty\" \"\". wgq_dis_1: Disability cut-1: least one domain coded \"difficulty\", \"lot difficulty\", \"\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Multi-Sectoral Needs Index (MSNI) Score and Related Indicators ‚Äî add_msni","title":"Add Multi-Sectoral Needs Index (MSNI) Score and Related Indicators ‚Äî add_msni","text":"function calculates MSNI score, determines households need acute need, counts number sectoral needs, creates sectoral needs profile. Prerequisite functions: add_comp_edu.R add_comp_foodsec.R add_comp_health.R add_comp_prot.R add_comp_snfi.R add_comp_wash.R","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Multi-Sectoral Needs Index (MSNI) Score and Related Indicators ‚Äî add_msni","text":"","code":"add_msni(   df,   comp_foodsec_score = \"comp_foodsec_score\",   comp_snfi_score = \"comp_snfi_score\",   comp_wash_score = \"comp_wash_score\",   comp_prot_score = \"comp_prot_score\",   comp_health_score = \"comp_health_score\",   comp_edu_score = \"comp_edu_score\",   comp_foodsec_in_need = \"comp_foodsec_in_need\",   comp_snfi_in_need = \"comp_snfi_in_need\",   comp_wash_in_need = \"comp_wash_in_need\",   comp_prot_in_need = \"comp_prot_in_need\",   comp_health_in_need = \"comp_health_in_need\",   comp_edu_in_need = \"comp_edu_in_need\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Multi-Sectoral Needs Index (MSNI) Score and Related Indicators ‚Äî add_msni","text":"df data frame containing sectoral composite scores -need indicators. comp_foodsec_score Column name food security composite score. comp_snfi_score Column name SNFI composite score. comp_wash_score Column name WASH composite score. comp_prot_score Column name protection composite score. comp_health_score Column name health composite score. comp_edu_score Column name education composite score. comp_foodsec_in_need Column name food security need. comp_snfi_in_need Column name SNFI need. comp_wash_in_need Column name WASH need. comp_prot_in_need Column name protection need. comp_health_in_need Column name health need. comp_edu_in_need Column name education need.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Multi-Sectoral Needs Index (MSNI) Score and Related Indicators ‚Äî add_msni","text":"data frame 5 new columns: msni_score: Multi-Sectoral Needs Index score. msni_in_need: Binary indicator households need. msni_in_acute_need: Binary indicator households acute need. sector_in_need_n: Number sectoral needs identified. sector_needs_profile: Profile sectoral needs identified (NA sectoral need identified).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_occupancy_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Category of Occupancy Arrangement and Tenure Security ‚Äî add_occupancy_cat","title":"Add Category of Occupancy Arrangement and Tenure Security ‚Äî add_occupancy_cat","text":"function categorizes occupancy arrangements eviction risk high, medium, low risk, creates new column overall tenure security, taking maximum risk .","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_occupancy_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Category of Occupancy Arrangement and Tenure Security ‚Äî add_occupancy_cat","text":"","code":"add_occupancy_cat(   df,   occupancy = \"hlp_occupancy\",   occupancy_high_risk = c(\"no_agreement\"),   occupancy_medium_risk = c(\"rented\", \"hosted_free\"),   occupancy_low_risk = c(\"ownership\"),   occupancy_undefined = c(\"dnk\", \"pnta\", \"other\"),   eviction = \"hlp_risk_eviction\",   eviction_high_risk = \"yes\",   eviction_low_risk = \"no\",   eviction_undefined = c(\"dnk\", \"pnta\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_occupancy_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Category of Occupancy Arrangement and Tenure Security ‚Äî add_occupancy_cat","text":"df data frame containing occupancy arrangement data. occupancy Component column: Occupancy arrangement. occupancy_high_risk Character vector high risk occupancy arrangements. occupancy_medium_risk Character vector medium risk occupancy arrangements. occupancy_low_risk Character vector low risk occupancy arrangements. occupancy_undefined Character vector undefined response codes (e.g. \"Prefer answer\"). eviction Component column: Eviction risk. eviction_high_risk Character vector high risk eviction responses. eviction_low_risk Character vector low risk eviction responses. eviction_undefined Character vector undefined eviction responses.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_occupancy_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Category of Occupancy Arrangement and Tenure Security ‚Äî add_occupancy_cat","text":"data frame additional columns: hlp_occupancy_cat: Categorized occupancy arrangement: \"high_risk\", \"medium_risk\", \"low_risk\", \"undefined\". hlp_eviction_cat: Categorized eviction risk: \"high_risk\", \"low_risk\", \"undefined\". hlp_tenure_security: Maximum risk hlp_occupancy_cat hlp_eviction_cat.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_movement.html","id":null,"dir":"Reference","previous_headings":"","what":"add_prot_score_movement ‚Äî add_prot_score_movement","title":"add_prot_score_movement ‚Äî add_prot_score_movement","text":"add_prot_score_movement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_movement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add_prot_score_movement ‚Äî add_prot_score_movement","text":"","code":"add_prot_score_movement(   df,   sep = \"/\",   prot_needs_3_movement = \"prot_needs_3_movement\",   no_changes_feel_unsafe = \"no_changes_feel_unsafe\",   no_safety_concerns = \"no_safety_concerns\",   women_girls_avoid_places = \"women_girls_avoid_places\",   men_boys_avoid_places = \"men_boys_avoid_places\",   women_girls_avoid_night = \"women_girls_avoid_night\",   men_boys_avoid_night = \"men_boys_avoid_night\",   girls_boys_avoid_school = \"girls_boys_avoid_school\",   different_routes = \"different_routes\",   avoid_markets = \"avoid_markets\",   avoid_public_offices = \"avoid_public_offices\",   avoid_fields = \"avoid_fields\",   other_safety_measures = \"other_safety_measures\",   dnk = \"dnk\",   pnta = \"pnta\",   .keep_weighted = FALSE )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_movement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add_prot_score_movement ‚Äî add_prot_score_movement","text":"df Data frame containing survey data. sep Separator binary columns, default \"/\". prot_needs_3_movement Column name no_changes_feel_unsafe answer option no_safety_concerns answer option women_girls_avoid_places answer option men_boys_avoid_places answer option women_girls_avoid_night answer option men_boys_avoid_night answer option girls_boys_avoid_school answer option different_routes answer option avoid_markets answer option avoid_public_offices answer option avoid_fields answer option other_safety_measures answer option dnk answer option pnta answer option .keep_weighted Logical, whether keep weighted columns output data frame. Default FALSE.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_movement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add_prot_score_movement ‚Äî add_prot_score_movement","text":"data frame additional columns: comp_prot_score_prot_needs_3 comp_prot_score_movement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_practices.html","id":null,"dir":"Reference","previous_headings":"","what":"Add composite score for Ability to Participate in Safe Practices and Activities ‚Äî add_prot_score_practices","title":"Add composite score for Ability to Participate in Safe Practices and Activities ‚Äî add_prot_score_practices","text":"Creates weighted scores two multi-choice questions threats affecting household members‚Äô ability engage activities social interactions. computes overall severity category (1‚Äì4) combined scores.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_practices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add composite score for Ability to Participate in Safe Practices and Activities ‚Äî add_prot_score_practices","text":"","code":"add_prot_score_practices(   df,   sep = \"/\",   prot_needs_2_activities = \"prot_needs_2_activities\",   yes_work = \"yes_work\",   yes_livelihood = \"yes_livelihood\",   yes_safety = \"yes_safety\",   yes_farm = \"yes_farm\",   yes_water = \"yes_water\",   yes_other_activities = \"yes_other_activities\",   yes_free_choices = \"yes_free_choices\",   prot_needs_2_social = \"prot_needs_2_social\",   yes_visiting_family = \"yes_visiting_family\",   yes_visiting_friends = \"yes_visiting_friends\",   yes_community_events = \"yes_community_events\",   yes_joining_groups = \"yes_joining_groups\",   yes_other_social = \"yes_other_social\",   yes_child_recreation = \"yes_child_recreation\",   yes_decision_making = \"yes_decision_making\",   no = \"no\",   dnk = \"dnk\",   pnta = \"pnta\",   .keep_weighted = FALSE )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_practices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add composite score for Ability to Participate in Safe Practices and Activities ‚Äî add_prot_score_practices","text":"df data frame containing binary indicator columns. question multiple \"option\" columns named using pattern question\\(sep\\)option_suffix. sep Separator question names suffixes column names. Defaults \"/\". prot_needs_2_activities Name first question (activities). Default: \"prot_needs_2_activities\". yes_work Answer option name \"Yes, affected ability work\" option. Default: \"yes_work\". yes_livelihood Answer option name \"Yes, affected general access livelihood\" column. Default: \"yes_livelihood\". \"Yes, affected general access livelihood\" option. Default: \"yes_livelihood\". yes_safety Answer option name \"Yes, affected ability seek safety\" column. Default: \"yes_safety\". \"Yes, affected ability seek safety\" option. Default: \"yes_safety\". yes_farm Answer option name \"Yes, affected ability farm\" column. Default: \"yes_farm\". \"Yes, affected ability farm\" option. Default: \"yes_farm\". yes_water Answer option name \"Yes, affected ability collect water\" column. Default: \"yes_water\". \"Yes, affected ability collect water\" option. Default: \"yes_water\". yes_other_activities Answer option name \"Yes, affected activities needed meet needs\" column. Default: \"yes_other_activities\". \"Yes, affected activities needed meet needs\" option. Default: \"yes_other_activities\". yes_free_choices Answer option name \"Yes, affected ability make free choices\" column. Default: \"yes_free_choices\". \"Yes, affected ability make free choices\" option. Default: \"yes_free_choices\". prot_needs_2_social Name second question (social interactions). Default: \"prot_needs_2_social\". yes_visiting_family Answer option name \"Yes, visiting family members\" column. Default: \"yes_visiting_family\". \"Yes, visiting family members\" option. Default: \"yes_visiting_family\". yes_visiting_friends Answer option name \"Yes, visiting friends\" column. Default: \"yes_visiting_friends\". \"Yes, visiting friends\" option. Default: \"yes_visiting_friends\". yes_community_events Answer option name \"Yes, attending community events\" column. Default: \"yes_community_events\". \"Yes, attending community events\" option. Default: \"yes_community_events\". yes_joining_groups Answer option name \"Yes, joining groups public gatherings\" column. Default: \"yes_joining_groups\". \"Yes, joining groups public gatherings\" option. Default: \"yes_joining_groups\". yes_other_social Answer option name \"Yes, participating social activities\" column. Default: \"yes_other_social\". \"Yes, participating social activities\" option. Default: \"yes_other_social\". yes_child_recreation Answer option name \"Yes, children's recreational activities\" column. Default: \"yes_child_recreation\". \"Yes, children's recreational activities\" option. Default: \"yes_child_recreation\". yes_decision_making Answer option name \"Yes, participating decision making bodies\" column. Default: \"yes_decision_making\". \"Yes, participating decision making bodies\" option. Default: \"yes_decision_making\". Answer option name \"\" column. Default: \"\". \"\" option. Default: \"\". dnk Answer option name \"know\" column (treated NA). Default: \"dnk\". \"know\" option (treated NA). Default: \"dnk\". pnta Answer option name \"Prefer answer\" column (treated NA). Default: \"pnta\". \"Prefer answer\" option (treated NA). Default: \"pnta\". .keep_weighted Logical; TRUE, retains intermediate weighted columns (suffix \"_w\"). Default: FALSE.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_practices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add composite score for Ability to Participate in Safe Practices and Activities ‚Äî add_prot_score_practices","text":"input data frame three new composite-score columns: comp_prot_score_prot_needs_2_activities: weighted sum activity-related options. comp_prot_score_prot_needs_2_social: weighted sum social-related options. comp_prot_score_practices: overall severity (1‚Äì4) based combined score. Plus optional weighted columns (suffix \"_w\") .keep_weighted = TRUE.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_rights.html","id":null,"dir":"Reference","previous_headings":"","what":"Add composite score for Ability to Access Rights and Services ‚Äî add_prot_score_rights","title":"Add composite score for Ability to Access Rights and Services ‚Äî add_prot_score_rights","text":"Computes weighted sums two questions household difficulties accessing services justice/legal resources, derives overall severity category (1‚Äì4).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_rights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add composite score for Ability to Access Rights and Services ‚Äî add_prot_score_rights","text":"","code":"add_prot_score_rights(   df,   sep = \"/\",   prot_needs_1_services = \"prot_needs_1_services\",   yes_healthcare = \"yes_healthcare\",   yes_schools = \"yes_schools\",   yes_gov_services = \"yes_gov_services\",   yes_other_services = \"yes_other_services\",   prot_needs_1_justice = \"prot_needs_1_justice\",   yes_identity_documents = \"yes_identity_documents\",   yes_counselling_legal = \"yes_counselling_legal\",   yes_property_docs = \"yes_property_docs\",   yes_gov_services_justice = \"yes_gov_services\",   yes_other_services_justice = \"yes_other_services\",   no = \"no\",   dnk = \"dnk\",   pnta = \"pnta\",   .keep_weighted = FALSE )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_rights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add composite score for Ability to Access Rights and Services ‚Äî add_prot_score_rights","text":"df data frame containing binary indicator columns questions. sep Separator question code answer option column names. Default: \"/\". prot_needs_1_services Base name services question. Default: \"prot_needs_1_services\". yes_healthcare Answer option name \"Yes, accessing healthcare\". Default: \"yes_healthcare\". yes_schools Answer option name \"Yes, accessing schools\". Default: \"yes_schools\". yes_gov_services Answer option name \"Yes, accessing governmental services\". Default: \"yes_gov_services\". yes_other_services Answer option name \"Yes, accessing services\". Default: \"yes_other_services\". prot_needs_1_justice Base name justice question. Default: \"prot_needs_1_justice\". yes_identity_documents Answer option name \"Yes, accessing identity civil documents services\". Default: \"yes_identity_documents\". yes_counselling_legal Answer option name \"Yes, individual counselling legal assistance\". Default: \"yes_counselling_legal\". yes_property_docs Answer option name \"Yes, accessing house, land property documentation\". Default: \"yes_property_docs\". yes_gov_services_justice Answer option name \"Yes, accessing governmental services\". Default: \"yes_gov_services\". yes_other_services_justice Answer option name \"Yes, accessing services\". Default: \"yes_other_services\". Answer option name \"\". Default: \"\". dnk Answer option name \"know\"  Default: \"dnk\". pnta Answer option name \"Prefer answer\" Default: \"pnta\". .keep_weighted Logical; TRUE, retain intermediate weighted columns suffix _w. Default: FALSE.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_prot_score_rights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add composite score for Ability to Access Rights and Services ‚Äî add_prot_score_rights","text":"Input data frame three new composite-score columns: comp_prot_score_prot_needs_1_services: weighted sum services options. comp_prot_score_prot_needs_1_justice: weighted sum justice options. comp_prot_score_needs_1: overall severity (1‚Äì4) based combined score. Plus optional _w columns .keep_weighted = TRUE.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_quantile_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Quantile Intervals to Income Variable ‚Äî add_quantile_interval","title":"Add Quantile Intervals to Income Variable ‚Äî add_quantile_interval","text":"function calculates weighted income quantiles classifies households according . can handle multiple income variables applies weighted unweighted quantiles based input.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_quantile_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Quantile Intervals to Income Variable ‚Äî add_quantile_interval","text":"","code":"add_quantile_interval(   df,   vars,   cut_offs = c(0, 0.2, 0.4, 0.6, 0.8, 1),   weight = NULL )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_quantile_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Quantile Intervals to Income Variable ‚Äî add_quantile_interval","text":"df dataframe containing income variables. vars variable variables income integer values. cut_offs cut-offs computation quantiles. default corresponds quantiles distribution, based weighted median. weight sampling weights column name. NULL, unweighted quantiles calculated.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_quantile_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Quantile Intervals to Income Variable ‚Äî add_quantile_interval","text":"dataframe additional columns: *_qtl: input variable, new column added quantile interval classification. naming format 'original_variable_name'_qtl.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_received_assistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Received Assistance (Combined Calculation) ‚Äî add_received_assistance","title":"Add Received Assistance (Combined Calculation) ‚Äî add_received_assistance","text":"function calculates adds new column received assistance based two input columns: assistance received last 12 months recall period assistance.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_received_assistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Received Assistance (Combined Calculation) ‚Äî add_received_assistance","text":"","code":"add_received_assistance(   df,   received_assistance_12m = \"aap_received_assistance_12m\",   yes = \"yes\",   no = \"no\",   undefined = c(\"dnk\", \"pnta\"),   received_assistance_date = \"aap_received_assistance_date\",   date_past_30d = \"past_30d\",   date_1_3_months = \"1_3_months\",   date_4_6_months = \"4_6_months\",   date_7_12_months = \"7_12_months\",   date_undefined = c(\"dnk\", \"pnta\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_received_assistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Received Assistance (Combined Calculation) ‚Äî add_received_assistance","text":"df data frame containing assistance information. received_assistance_12m Column name received assistance last 12 months. yes Value yes. Value . undefined Vector undefined responses. received_assistance_date Column name recall period assistance received. date_past_30d Value received assistance past 30 days. date_1_3_months Value received assistance last 1-3 months. date_4_6_months Value received assistance last 4-6 months. date_7_12_months Value received assistance last 7-12 months. date_undefined Vector undefined responses date received assistance.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_received_assistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Received Assistance (Combined Calculation) ‚Äî add_received_assistance","text":"data frame additional column: aap_received_assistance: Categorized received assistance: \"undefined\", \"\", \"past_30d\", \"1_3_months\", \"4_6_months\", \"7_12_months\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_sanitation_facility_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitation Facility Classification ‚Äî add_sanitation_facility_cat","title":"Sanitation Facility Classification ‚Äî add_sanitation_facility_cat","text":"set functions classifies sanitation facilities according various criteria. includes functions categorize sanitation facility types, sharing status, number individuals sharing, JMP (Joint Monitoring Programme) classification. function recodes sharing status sanitation facilities based user responses. categorizes whether facility shared shared handles cases facility skipped. function calculates number households sharing sanitation facility categorizes based predefined thresholds. also handles household size survey weights calculations. function combines previous two functions recode sanitation facility JMP classification. also includes information whether facility shared shared.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_sanitation_facility_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitation Facility Classification ‚Äî add_sanitation_facility_cat","text":"","code":"add_sanitation_facility_cat(   df,   sanitation_facility = \"wash_sanitation_facility\",   improved = c(\"flush_piped_sewer\", \"flush_septic_tank\", \"flush_pit_latrine\",     \"flush_dnk_where\", \"pit_latrine_slab\", \"twin_pit_latrine_slab\",     \"ventilated_pit_latrine_slab\", \"container\", \"compost\"),   unimproved = c(\"flush_open_drain\", \"flush_elsewhere\", \"pit_latrine_wo_slab\", \"bucket\",     \"hanging_toilet\", \"plastic_bag\"),   none = \"none\",   undefined = c(\"other\", \"dnk\", \"pnta\") )  add_sharing_sanitation_facility_cat(   df,   sharing_sanitation_facility = \"wash_sanitation_facility_sharing_yn\",   yes = \"yes\",   no = \"no\",   undefined = c(\"dnk\", \"pnta\"),   sanitation_facility = \"wash_sanitation_facility\",   skipped_sanitation_facility = NULL )  add_sharing_sanitation_facility_n_ind(   df,   sharing_sanitation_facility_cat = \"wash_sharing_sanitation_facility_cat\",   sharing_sanitation_facility_cat_shared = \"shared\",   sharing_sanitation_facility_cat_not_shared = \"not_shared\",   sharing_sanitation_facility_cat_not_applicable = \"not_applicable\",   sharing_sanitation_facility_cat_undefined = \"undefined\",   sanitation_facility_sharing_n = \"wash_sanitation_facility_sharing_n\",   hh_size = \"hh_size\",   weight = \"weight\" )  add_sanitation_facility_jmp_cat(   df,   sanitation_facility_cat = \"wash_sanitation_facility_cat\",   sanitation_facility_cat_improved = \"improved\",   sanitation_facility_cat_unimproved = \"unimproved\",   sanitation_facility_cat_none = \"none\",   sanitation_facility_cat_undefined = \"undefined\",   sharing_sanitation_facility_cat = \"wash_sharing_sanitation_facility_cat\",   sharing_sanitation_facility_cat_shared = \"shared\",   sharing_sanitation_facility_cat_not_shared = \"not_shared\",   sharing_sanitation_facility_cat_not_applicable = \"not_applicable\",   sharing_sanitation_facility_cat_undefined = \"undefined\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_sanitation_facility_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitation Facility Classification ‚Äî add_sanitation_facility_cat","text":"df data frame containing sanitation facility types sharing status information. sanitation_facility Column name sanitation facility types. improved Character vector response codes Improved facilities. unimproved Character vector response codes Unimproved facilities. none Character vector response codes sanitation facility/Open defecation. undefined Character vector response codes indicating undefined responses (e.g., c(\"dnk\", \"pnta\")). sharing_sanitation_facility Component column: Number people facility shared. yes Character vector response codes Yes. Character vector response codes . skipped_sanitation_facility Character vector response codes skipped sanitation facility. sharing_sanitation_facility_cat Component column: Sharing status sanitation facility recoded. sharing_sanitation_facility_cat_shared Level: Shared sanitation facility. sharing_sanitation_facility_cat_not_shared Level: shared sanitation facility. sharing_sanitation_facility_cat_not_applicable Level: applicable sharing status. sharing_sanitation_facility_cat_undefined Level: Undefined sharing status. sanitation_facility_sharing_n Component column: Number households sharing sanitation facility. hh_size Column name household size. weight Column name survey weights. sanitation_facility_cat Component column: Sanitation facility types recoded. sanitation_facility_cat_improved Level: Improved sanitation facility. sanitation_facility_cat_unimproved Level: Unimproved sanitation facility. sanitation_facility_cat_none Level: sanitation facility. sanitation_facility_cat_undefined Level: Undefined sanitation facility.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_sanitation_facility_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitation Facility Classification ‚Äî add_sanitation_facility_cat","text":"data frame additional column: wash_sanitation_facility_cat: Categorized sanitation facility: \"none\", \"unimproved\", \"improved\", \"undefined\". data frame additional column: wash_sharing_sanitation_facility_cat: Categorized sharing status: \"shared\", \"not_shared\", \"not_applicable\". data frame additional column: wash_sharing_sanitation_n_ind: Categorized number individuals sharing sanitation facility. data frame additional column: wash_sanitization_jmp_cat: Categorized JMP classification based type sharing status.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_damage_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Category of Shelter damage (Optional SNFI dimension) ‚Äî add_shelter_damage_cat","title":"Add Category of Shelter damage (Optional SNFI dimension) ‚Äî add_shelter_damage_cat","text":"function categorizes shelter damage category based provided criteria.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_damage_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Category of Shelter damage (Optional SNFI dimension) ‚Äî add_shelter_damage_cat","text":"","code":"add_shelter_damage_cat(   df,   sep = \"/\",   snfi_shelter_damage = \"snfi_shelter_damage\",   none = \"none\",   minor = \"minor\",   major = \"major\",   damage_windows_doors = \"damage_windows_doors\",   damage_floors = \"damage_floors\",   damage_walls = \"damage_walls\",   total_collapse = \"total_collapse\",   other = \"other\",   dnk = \"dnk\",   pnta = \"pnta\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_damage_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Category of Shelter damage (Optional SNFI dimension) ‚Äî add_shelter_damage_cat","text":"df Data frame containing survey data. sep Separator binary columns, default \"/\". snfi_shelter_damage Column name none answer option minor answer option major answer option damage_windows_doors answer option damage_floors answer option damage_walls answer option total_collapse answer option answer option dnk answer option pnta answer option","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_damage_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Category of Shelter damage (Optional SNFI dimension) ‚Äî add_shelter_damage_cat","text":"data frame additional column: snfi_shelter_damage_cat: Categorized shelter damages: \"damage\", \"Damaged\", \"Partial collapse destruction\", \"Total collapse destruction\", \"Undefined\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_issue_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Number of Shelter Issues and Related Category ‚Äî add_shelter_issue_cat","title":"Add Number of Shelter Issues and Related Category ‚Äî add_shelter_issue_cat","text":"function calculates number shelter issues categorizes based predefined thresholds. also handles undefined responses.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_issue_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Number of Shelter Issues and Related Category ‚Äî add_shelter_issue_cat","text":"","code":"add_shelter_issue_cat(   df,   shelter_issue = \"snfi_shelter_issue\",   none = \"none\",   issues = c(\"lack_privacy\", \"lack_space\", \"temperature\", \"ventilation\", \"vectors\",     \"no_natural_light\", \"leak\", \"lock\", \"lack_lighting\", \"difficulty_move\",     \"lack_space_laundry\"),   undefined = c(\"dnk\", \"pnta\"),   other = c(\"other\"),   sep = \"/\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_issue_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Number of Shelter Issues and Related Category ‚Äî add_shelter_issue_cat","text":"df data frame containing shelter issue data. shelter_issue Component column: Shelter issues. none Response code issue. issues Character vector issues. undefined Character vector undefined responses codes (e.g. \"Prefer answer\"). Character vector responses codes (e.g. \"\"). sep Separator binary columns.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_issue_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Number of Shelter Issues and Related Category ‚Äî add_shelter_issue_cat","text":"data frame additional columns: snfi_shelter_issue_n: Count shelter issues. snfi_shelter_issue_cat: Categorized shelter issues: \"none\", \"undefined\", \"\", \"1_to_3\", \"4_to_7\", \"8_to_11\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_type_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine and Recode Shelter Types ‚Äî add_shelter_type_cat","title":"Combine and Recode Shelter Types ‚Äî add_shelter_type_cat","text":"function combines shelter types questions recodes type shelter categories \"none\", \"inadequate\", \"adequate\", \"undefined\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_type_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine and Recode Shelter Types ‚Äî add_shelter_type_cat","text":"","code":"add_shelter_type_cat(   df,   shelter_type = \"snfi_shelter_type\",   sl_none = \"none\",   sl_collective_center = \"collective_center\",   sl_undefined = \"pnta\",   shelter_type_individual = \"snfi_shelter_type_individual\",   adequate = c(\"house\", \"apartment\", \"tent\"),   inadequate = c(\"makeshift\", \"unfinished_building\"),   undefined = c(\"pnta\", \"other\", \"dnk\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_type_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine and Recode Shelter Types ‚Äî add_shelter_type_cat","text":"df data frame containing shelter type information. shelter_type Component column: Shelter type categories. sl_none Character vector responses codes none/sleeping open skipped. sl_collective_center Character vector responses codes collective center skipped. sl_undefined Character vector undefined responses codes (e.g. \"Prefer answer\") skipped. shelter_type_individual Component column: Individual shelter types. adequate Character vector responses codes adequate shelter types. inadequate Character vector responses codes inadequate shelter types. undefined Character vector responses codes undefined shelter types.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_type_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine and Recode Shelter Types ‚Äî add_shelter_type_cat","text":"data frame additional column: snfi_shelter_type_cat: Categorized shelter type: \"none\", \"inadequate\", \"adequate\", \"undefined\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement values are not numeric ‚Äî are_cols_numeric","title":"Stop statement values are not numeric ‚Äî are_cols_numeric","text":"Stop statement values numeric","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement values are not numeric ‚Äî are_cols_numeric","text":"","code":"are_cols_numeric(df, cols)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement values are not numeric ‚Äî are_cols_numeric","text":"df data frame cols vector column names (quoted)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement values are not numeric ‚Äî are_cols_numeric","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement values are not in range ‚Äî are_values_in_range","title":"Stop statement values are not in range ‚Äî are_values_in_range","text":"Stop statement values range","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement values are not in range ‚Äî are_values_in_range","text":"","code":"are_values_in_range(df, cols, lower = 0, upper = 7)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement values are not in range ‚Äî are_values_in_range","text":"df data frame cols vector column names (quoted) lower Lower bound upper Upper bound","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement values are not in range ‚Äî are_values_in_range","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement values are not in set ‚Äî are_values_in_set","title":"Stop statement values are not in set ‚Äî are_values_in_set","text":"Stop statement values set","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement values are not in set ‚Äî are_values_in_set","text":"","code":"are_values_in_set(   df,   cols,   set,   main_message = \"All columns must be in the following set: \" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement values are not in set ‚Äî are_values_in_set","text":"df data frame cols vector column names (quoted) set vector values main_message main message","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement values are not in set ‚Äî are_values_in_set","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/count_if_above_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Dummy Variables and Count Across if Above Zero ‚Äî count_if_above_zero","title":"Create Dummy Variables and Count Across if Above Zero ‚Äî count_if_above_zero","text":"function creates dummy variables input column, setting 1 value zero, 0 zero, NA zero. sums dummy variables create count.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/count_if_above_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Dummy Variables and Count Across if Above Zero ‚Äî count_if_above_zero","text":"","code":"count_if_above_zero(df, vars, new_colname)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/count_if_above_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Dummy Variables and Count Across if Above Zero ‚Äî count_if_above_zero","text":"df data frame containing columns processed. vars Vector column names processed. new_colname name new column contain count.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/count_if_above_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Dummy Variables and Count Across if Above Zero ‚Äî count_if_above_zero","text":"data frame additional columns: \"*_d\": Dummy variables input column, 'star' original column name. new_colname: new column containing count values zero across specified variables.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/humind-package.html","id":null,"dir":"Reference","previous_headings":"","what":"humind: Compose MSNA Indicators ‚Äî humind-package","title":"humind: Compose MSNA Indicators ‚Äî humind-package","text":"packages provides functions compose usual humanitarian composite indicators related IMPACT Multi-Sector Needs Assessments (MSNAs) food sec indicators (rCSI, LCSI, HHS, FCS), Washington Group Short Set questions, JMP ladders, well specific indicators related MSNI framework.","code":""},{"path":[]},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/humind-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"humind: Compose MSNA Indicators ‚Äî humind-package","text":"Maintainer: Quentin VILLOTTA quentin.villotta@impact-initiatives.org Authors: Iyed GHEDAMSI iyed.ghedamsi@impact-initiatives.org [contributor] Mario DASILVA mario.fidalgo@impact-initiatives.org [contributor] contributors: Laith Abu-Nawwas laith.abu-nawwas@impact-initiatives.org [contributor] Sunhee Moraes sunhee.moraes@impact-initiatives.org [contributor] Raphael Bacot raphael.bacot@impact-initiatives.org [contributor]","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement ","title":"Stop statement ","text":"Stop statement \"colnames\" colnames","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement ","text":"","code":"if_not_in_stop(df, cols, df_name, arg = NULL)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement ","text":"df data frame cols vector column names (quoted) df_name Provide tibble name character string arg Default NULL.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement ","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/impute_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Missing Values ‚Äî impute_value","title":"Impute Missing Values ‚Äî impute_value","text":"set functions replaces missing values specified variables. impute_value() replaces missing values specific value, impute_median() replaces missing values (weighted) median variable.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/impute_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Missing Values ‚Äî impute_value","text":"","code":"impute_value(df, vars, value)  impute_median(df, vars, group = NULL, weighted = FALSE, weight = NULL)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/impute_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Missing Values ‚Äî impute_value","text":"df dataframe containing variables imputed. vars character vector variables replace NA . value value replace NA . group character vector grouping variables. weighted boolean indicating whether use weighted median . weight weight variable.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/impute_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Missing Values ‚Äî impute_value","text":"dataframe imputed values: vars: specified variables missing values replaced. dataframe imputed values: vars: specified variables missing values replaced respective (weighted) medians.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/is_in_need.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Dummy Variable for 'In Need' Status ‚Äî is_in_need","title":"Add Dummy Variable for 'In Need' Status ‚Äî is_in_need","text":"set functions adds new binary variables indicating score certain thresholds. is_in_need() adds variable scores 3 (indicating \"need\"), is_in_acute_need() adds variable scores 4 (indicating \"acute need\").","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/is_in_need.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Dummy Variable for 'In Need' Status ‚Äî is_in_need","text":"","code":"is_in_need(df, score, new_colname = NULL)  is_in_acute_need(df, score, new_colname = NULL)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/is_in_need.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Dummy Variable for 'In Need' Status ‚Äî is_in_need","text":"df dataframe containing score variable. score variable containing score 1-5 scale. new_colname name new column. NULL, function create new column name 'score_in_need' 'score_in_acute_need'.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/is_in_need.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Dummy Variable for 'In Need' Status ‚Äî is_in_need","text":"dataframe additional column: new_colname: binary variable indicating score meets threshold \"need\" (1) (0).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Categories for a Numeric Variable ‚Äî num_cat","title":"Add Categories for a Numeric Variable ‚Äî num_cat","text":"function categorizes numeric column dataframe based specified breaks labels. can handle undefined values provides options customizing categorization process.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Categories for a Numeric Variable ‚Äî num_cat","text":"","code":"num_cat(   df,   num_col,   breaks,   labels = NULL,   int_undefined = c(-999, 999),   char_undefined = \"Unknown\",   new_colname = NULL,   plus_last = FALSE,   above_last = FALSE )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Categories for a Numeric Variable ‚Äî num_cat","text":"df dataframe containing numeric column categorized. num_col column name recategorize. breaks vector cut points categorization. labels vector labels categories. NULL, labels automatically generated. int_undefined vector numeric values replaced char_undefined. char_undefined character string replace int_undefined values. new_colname name new column. NULL, automatically generated. plus_last Logical, whether add \"+\" last category. above_last Logical, whether add category values last break.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Categories for a Numeric Variable ‚Äî num_cat","text":"dataframe additional column: new_colname: new column containing categorized values original numeric column.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/rank_top3_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank Top 3 Variables ‚Äî rank_top3_vars","title":"Rank Top 3 Variables ‚Äî rank_top3_vars","text":"function ranks top 3 numeric variables row data frame. case equality, takes precedence order 'vars' factors.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/rank_top3_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank Top 3 Variables ‚Äî rank_top3_vars","text":"","code":"rank_top3_vars(   df,   vars,   new_colname_top1,   new_colname_top2,   new_colname_top3,   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/rank_top3_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank Top 3 Variables ‚Äî rank_top3_vars","text":"df data frame containing variables ranked. vars character vector numeric variable names ranked. new_colname_top1 new column name top variable. new_colname_top2 new column name 2nd top variable. new_colname_top3 new column name 3rd top variable. id_col column name unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/rank_top3_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank Top 3 Variables ‚Äî rank_top3_vars","text":"data frame additional columns: new_colname_top1: name top-ranked variable row. new_colname_top2: name second-ranked variable row. new_colname_top3: name third-ranked variable row.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages ‚Äî reexports","title":"Objects exported from other packages ‚Äî reexports","text":"objects imported packages. Follow links see documentation. impactR4PHU add_fclcm_phase, add_fcm_phase, add_fcs, add_hhs, add_lcsi, add_rcsi","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Subvec in ‚Äî subvec_in","title":"Subvec in ‚Äî subvec_in","text":"Subvec ","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subvec in ‚Äî subvec_in","text":"","code":"subvec_in(vector, set)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subvec in ‚Äî subvec_in","text":"vector vector subset set set-vector","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subvec in ‚Äî subvec_in","text":"subset list vector","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Subvec not in ‚Äî subvec_not_in","title":"Subvec not in ‚Äî subvec_not_in","text":"Subvec ","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subvec not in ‚Äî subvec_not_in","text":"","code":"subvec_not_in(vector, set)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subvec not in ‚Äî subvec_not_in","text":"vector vector subset set set-vector","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subvec not in ‚Äî subvec_not_in","text":"subset vector set","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/sum_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum Columns Row-wise ‚Äî sum_vars","title":"Sum Columns Row-wise ‚Äî sum_vars","text":"function sums specified columns row-wise dataframe, options imputation missing values weighted calculations.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/sum_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum Columns Row-wise ‚Äî sum_vars","text":"","code":"sum_vars(   df,   vars,   new_colname,   imputation = \"none\",   na_rm = FALSE,   weight = \"weight\",   value = 0,   group = NULL )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/sum_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum Columns Row-wise ‚Äî sum_vars","text":"df dataframe containing columns summed. vars character vector columns sum. new_colname character vector new column name. imputation imputation method, either none (default), value, median weighted median. na_rm boolean indicating whether remove missing values summing across columns. weight weight variable calculate weighted means medians. value value replace missing values imputation \"value\". group character vector grouping variables.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/sum_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum Columns Row-wise ‚Äî sum_vars","text":"dataframe additional column: new_colname: sum specified variables, imputation applied specified.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/value_to_sl.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a specific value to variables that were skipped ‚Äî value_to_sl","title":"Add a specific value to variables that were skipped ‚Äî value_to_sl","text":"Add specific value variables skipped","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/value_to_sl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a specific value to variables that were skipped ‚Äî value_to_sl","text":"","code":"value_to_sl(df, var, undefined = NULL, sl_vars, sl_value, suffix = \"\")"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/value_to_sl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a specific value to variables that were skipped ‚Äî value_to_sl","text":"df data frame. var name variable used skip logic. undefined character vector values considered \"undefined\" replaced follow-variables. sl_vars character vector variable names skipped replaced value. sl_value value added skipped variables. suffix suffix add new variable names. Default suffix (empty string).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-202511","dir":"Changelog","previous_headings":"","what":"humind 2025.1.1","title":"humind 2025.1.1","text":"release introduces major updates across protection indicators, SNFI shelter categorization, expenditure scoring, testing framework improvements, dependency management, documentation. Deprecated WGQ components fully removed.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_-programmatic-changes-2025-1-1","dir":"Changelog","previous_headings":"","what":"üìñ 2025 Programmatic Changes","title":"humind 2025.1.1","text":"Protection: complete ravamp, based series new Tier 1 indicators related Protection Needs. SNFI: Changes number shelter issues mapping FW (8 11 total issues). Inclusion one additional indicator security tenure dimension: hlp_eviction_risk. Hygiene indicator removed FDS series - making total number domestic tasks (lighting) equal 4 instead 5. Optional shelter damages component added. Health: removal WGQs framework. WASH: small changes incorporate self-reported hygiene variants (availability soap & water) map JMP classifications. Food Security: new additional step analyze impact livelihood coping strategies Food Consumption (changes done impactR4PHU reflected humind). Education: small changes indicator naming reflect ‚Äúdirect attack education‚Äù. Indicator name edu_disrupted_occupation now called edu_disrupted_attack. edu_disrupted_occupation now called edu_disrupted_attack.","code":""},{"path":[]},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_-new-features-2025-1-1","dir":"Changelog","previous_headings":"üõ† Codebase Changes","what":"üöÄ New Features","title":"humind 2025.1.1","text":"Added add_comp_prot_score() main function computing overall Protection Composite. Introduced supporting functions rights, practices, participation dimensions.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_-enhancements-2025-1-1","dir":"Changelog","previous_headings":"üõ† Codebase Changes","what":"üîÑ Enhancements","title":"humind 2025.1.1","text":"Revised add_shelter_issue_cat() logic better category handling alignment 2025 specifications. Updated add_comp_snfi() consistent categorization explicit handling special cases. Enhanced infrequent expenditure categorization functions ranking logic. Composition functions now preserve original data instead overwriting intermediate steps.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_-bug-fixes-2025-1-1","dir":"Changelog","previous_headings":"üõ† Codebase Changes","what":"üõ† Bug Fixes","title":"humind 2025.1.1","text":"Fixed improper handling invalid inputs multiple test cases. Addressed warnings triggered implicit handling max() -NA vectors.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_-testing-2025-1-1","dir":"Changelog","previous_headings":"üõ† Codebase Changes","what":"üß™ Testing","title":"humind 2025.1.1","text":"Adopted testthat best practices across test suites. Protection composite framework Shelter occupancy categorization Expenditure ranking Standardized warning suppression ensured expected warnings captured. Removed obsolete tests linked deprecated WGQ components.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_-documentation-2025-1-1","dir":"Changelog","previous_headings":"üõ† Codebase Changes","what":"üìö Documentation","title":"humind 2025.1.1","text":"Completed function documentation updated indicators. Updated argument descriptions clarified logic SNFI protection functions. Removed references WGQ components. Added Humind 2025 change documentation.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_-dependency-management-2025-1-1","dir":"Changelog","previous_headings":"üõ† Codebase Changes","what":"üì¶ Dependency Management","title":"humind 2025.1.1","text":"Removed unused packages implicit dependency tibble. Now depends forked impactR.utils package.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"id_Ô∏è-breaking-changes-2025-1-1","dir":"Changelog","previous_headings":"üõ† Codebase Changes","what":"‚ö†Ô∏è Breaking Changes","title":"humind 2025.1.1","text":"Fully removed WGQ-related components associated tests. Deleted obsolete function add_child_sep_cat.R.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-202414","dir":"Changelog","previous_headings":"","what":"humind 2024.1.4","title":"humind 2024.1.4","text":"release covers bug fixes, documentation updates, changes parameters, additional enhancements: Documentation updates better describe function purpose, outputs, prerequisite functions. Functions lover use _levels instead use separate parameters. (#547) add_comp_wash() per MSNI framework, function updated urban categorization ‚Äúbasic score 1 instead score 2 (#558) add_comp_edu() updates show comp_edu_score_disrupted 3 displaced_n greater 0, instead greater 1.(#556) add_comp_health() updated households least one person disability value 3 comp_health_score (#550) add_loop_edu_ind_age_corrected() updated allow custom starting age education analysis based country-specific requirements (#549) add_comp_snfi() now correctly categorizes ‚Äú‚Äù‚Äù snfi_shelter_issue_cat (#545) add_loop_edu_ind_age_corrected() function error message added date formats ISO 8601 format (#513)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-202413","dir":"Changelog","previous_headings":"","what":"humind 2024.1.3","title":"humind 2024.1.3","text":"release covers bug fixes. comp_edu_score_attendance() now categorizes households correctly children attending school protection issue faced. (#532) add_shelter_issue_cat() add -999 -998 shelter issue Don‚Äôt know Prefer answer (keeps NAs) ‚Äú‚Äù categorized others undefined. (#534) add_comp_snfi() default values fixed documentation. (#535) add_drinking_water_time_threshold_cat(): corrected input parameters ‚Äúunder_30min‚Äù ‚Äúabove_30min‚Äù. (#539) add_comp_wash(): corrected assigned severities comp_wash_score_sanitation among HHs camps. (#536)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-202412","dir":"Changelog","previous_headings":"","what":"humind 2024.1.2","title":"humind 2024.1.2","text":"release covers hot patch, new function, enhancements. add_sanitation_facility_jmp_cat() now correctly handles cases sanitation facility improved shared (#522) marvelous new function add_quantile_interval() now allows add (weighted) quantile intervals columns numeric variables (#516), instance adding income quantiles. bug fixes add_loop_healthcare_needed_cat_to_main() add_loop_edu_disrupted_d_to_main datasets name UUI columns ‚Äúuuid‚Äù (#517). add_age_cat() intuitive breaks due fix improvement num_cat(). able get following thresholds: 0-17, 18-59, 60-119, 120+, can write add_age_cat(\"resp_age\", breaks = c(0, 18, 60, 120)) (#504). Default breaks also changed aforementioned ones. occupation armed groups added country due relevancy, add_loop_edu_disrupted_d() add_loop_edu_disrupted_d_to_main(), occupation can set NULL.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-202411","dir":"Changelog","previous_headings":"","what":"humind 2024.1.1","title":"humind 2024.1.1","text":"release covers mostly hot patches bugs. perceived protection risks, add_comp_prot() assigns score 1 severity level. (#514) add_msni() now correctly handles metrics 3 4, adding missing value household need (#509, #510) add_comp_wash minor refinements. (#507) total income, loans friends assistance considered. Function add_income_source_prop() now two parameters NULL default. still possible include . (#506)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-202410","dir":"Changelog","previous_headings":"","what":"humind 2024.1.0","title":"humind 2024.1.0","text":"Provides functions compose usual humanitarian composite indicators related IMPACT Multi-Sector Needs Assessments (MSNAs). : Food security indicators (rCSI, LCSI, HHS, FCS). Washington Group Short Set questions (WG-SS). JMP ladders. Specific indicators related MSNI framework. package follows ‚ÄòStep-Composition‚Äô approach IMPACT R framework.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-01900","dir":"Changelog","previous_headings":"","what":"humind 0.1.900","title":"humind 0.1.900","text":"Expect many breaking changes moving towards consistent coherent package 2024 MSNAs Food security indicators imported impactR4PHU, potentially Public Health functions.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0053","dir":"Changelog","previous_headings":"","what":"humind 0.0.5.3","title":"humind 0.0.5.3","text":"Bug fix: rsci() now correctly adds rcsi_score variable.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0052","dir":"Changelog","previous_headings":"","what":"humind 0.0.5.2","title":"humind 0.0.5.2","text":"Breaking change: drinking_water_quantity() now recodes frequencies days without drinking water, drinking_water_quantity_score() assigns score 5-point scale. Added: time_to_fetch_water_int_char() time_to_fetch_water_combine() recode combine variables time fetch water.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0051","dir":"Changelog","previous_headings":"","what":"humind 0.0.5.1","title":"humind 0.0.5.1","text":"Bug fix breaking change: handwashing_facility() now recodes types handwashing facility. Added: handwashing_facility_score() calculates score 2-point scale based handwashing_facility()","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-005","dir":"Changelog","previous_headings":"","what":"humind 0.0.5","title":"humind 0.0.5","text":"Breaking changes: revamp water sources sanitation facilities fonctions approach food security functions. Added: drinking_water_source() recodes types water sources, time_to_fetch_water() time fetch water according chosen threshold, drinking_water_source_score() classify household/individual 5-point scale. Added: sanitation_facility() recodes types sanitation facilities, sharing_sanitation_facility() recodes number people sharing sanitation facility, sanitation_facility_score() classify household 5-point scale.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-004","dir":"Changelog","previous_headings":"","what":"humind 0.0.4","title":"humind 0.0.4","text":"Added water_source(): Water source 5-point-scale. Added sanitation_facility(): Sanitation facility 5-point scale. Added handwashing_facility(): Handwashing facility 2-point scale. Added drinking_water_quantity(): Drinking water quantity 5-point scale.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-003","dir":"Changelog","previous_headings":"","what":"humind 0.0.3","title":"humind 0.0.3","text":"Added hdds(): Household Dietary Diversity Scores (HDDS) (#5) Added fies(): Food Insecurity Experience Scale (FIES) #6 Bug fix: error lcsi() aggregated categories‚Äô names corrected (#20)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-002","dir":"Changelog","previous_headings":"","what":"humind 0.0.2","title":"humind 0.0.2","text":"Added: HWISE functions. (#16) Updated: dplyr v1.1.0 dplyr::case_when() revamp. (#) Modified: dependency know goes impactR.utils impactR. (#)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-001","dir":"Changelog","previous_headings":"","what":"humind 0.0.1","title":"humind 0.0.1","text":"patches github-action pages","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0009000","dir":"Changelog","previous_headings":"","what":"humind 0.0.0.9000","title":"humind 0.0.0.9000","text":"Initial commit","code":""}]
