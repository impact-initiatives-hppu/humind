[{"path":"https://impact-initiatives-hppu.github.io/humind/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Guillaume Noblet. Author, maintainer. Laith Abu-Nawwas. Author. Sunhee Moraes. Author. Raphael Bacot. Contributor.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Noblet G, Abu-Nawwas L, Moraes S (2024). humind: Compose MSNA Indicators. R package version 2024.1, https://github.com/impact-initiatives-hppu/humind.","code":"@Manual{,   title = {humind: Compose MSNA Indicators},   author = {Guillaume Noblet and Laith Abu-Nawwas and Sunhee Moraes},   year = {2024},   note = {R package version 2024.1},   url = {https://github.com/impact-initiatives-hppu/humind}, }"},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"humind-","dir":"","previous_headings":"","what":"Compose MSNA Indicators","title":"Compose MSNA Indicators","text":"humind provides functions compose usual humanitarian composite indicators related IMPACT Multi-Sector Needs Assessments (MSNAs). : Food security indicators (rCSI, LCSI, HHS, FCS). Washington Group Short Set questions (WG-SS). JMP ladders. Specific indicators related MSNI framework. package follows ‘Step-Composition’ approach IMPACT R framework.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compose MSNA Indicators","text":"can install latest stable version humind GitHub: Education specific functions stored education branch moment. added main branch upcoming version/milestone. IMPORTANT: education branch --date main branch. install education branch:","code":"install.packages(\"devtools\") devtools::install_github(\"impact-initiatives-hppu/humind\") devtools::install_github(\"impact-initiatives-hppu/humind@education\")"},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Compose MSNA Indicators","text":"’s quick dummy example use humind: general information layout functions parameters, check R Package Documentation","code":"#loading the package, check install step above before if not installed!   library(humind)  # Example usage (replace with the actual function name based on the desired output, check R directory for each function name) dummy_data <- data.frame(   dummy_variableA = c(1, 2, 3),   dummy_variableB = c(2, 3, 1),   dummy_variableC = c(0, 1, 2) )  result <- dummy_function(dummy_data) print(result)"},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"issues-and-feedback","dir":"","previous_headings":"","what":"Issues and Feedback","title":"Compose MSNA Indicators","text":"encounter issues feedback, /new features suggestion, please open issue GitHub repository.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Compose MSNA Indicators","text":"actively developing humind. Expect potential breaking changes roll first version package 2024 MSNAs, based country testing feedback. PACKAGE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. Check project board upcoming features milestones.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Compose MSNA Indicators","text":"humind released MIT License.","code":""},{"path":[]},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_access_to_phone_best","dir":"","previous_headings":"","what":"add_access_to_phone_best","title":"R Package Documentation","text":"Description: Access phone coverage Parameters: - df: - access_to_phone: - none: - smartphone: - feature_phone: - basic_phone: - dnk: - pnta: - sep: Outputs: - access_to_phone_d_none - access_to_phone_d_pnta - access_to_phone_d_basic_phone - access_to_phone_d_smartphone - access_to_phone_d_dnk - access_to_phone_d_vars - access_to_phone_d_feature_phone - df New/Modified Columns: - etc_access_to_phone_best Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_access_to_phone_best]     B --> C[Output]         D0[df] --> B     A --> D0     D1[access_to_phone] --> B     A --> D1     D2[none] --> B     A --> D2     D3[smartphone] --> B     A --> D3     D4[feature_phone] --> B     A --> D4     D5[basic_phone] --> B     A --> D5     D6[dnk] --> B     A --> D6     D7[pnta] --> B     A --> D7     D8[sep] --> B     A --> D8     B --> E0[access_to_phone_d_none]     E0 --> C     B --> E1[access_to_phone_d_pnta]     E1 --> C     B --> E2[access_to_phone_d_basic_phone]     E2 --> C     B --> E3[access_to_phone_d_smartphone]     E3 --> C     B --> E4[access_to_phone_d_dnk]     E4 --> C     B --> E5[access_to_phone_d_vars]     E5 --> C     B --> E6[access_to_phone_d_feature_phone]     E6 --> C     B --> E7[df]     E7 --> C     B --> F0[etc_access_to_phone_best]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_access_to_phone_coverage","dir":"","previous_headings":"","what":"add_access_to_phone_coverage","title":"R Package Documentation","text":"Description: Parameters: - df: - coverage_network_type: - coverage_none: - coverage_no_internet: - coverage_yes_internet: - coverage_undefined: - access_to_phone_best: - access_to_phone_none: - access_to_basic_phone: - access_to_feature_phone: - access_to_smartphone: - access_to_undefined: Outputs: - df New/Modified Columns: - etc_access_to_phone_coverage Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_access_to_phone_coverage]     B --> C[Output]         D0[df] --> B     A --> D0     D1[coverage_network_type] --> B     A --> D1     D2[coverage_none] --> B     A --> D2     D3[coverage_no_internet] --> B     A --> D3     D4[coverage_yes_internet] --> B     A --> D4     D5[coverage_undefined] --> B     A --> D5     D6[access_to_phone_best] --> B     A --> D6     D7[access_to_phone_none] --> B     A --> D7     D8[access_to_basic_phone] --> B     A --> D8     D9[access_to_feature_phone] --> B     A --> D9     D10[access_to_smartphone] --> B     A --> D10     D11[access_to_undefined] --> B     A --> D11     B --> E0[df]     E0 --> C     B --> F0[etc_access_to_phone_coverage]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_age_cat","dir":"","previous_headings":"","what":"add_age_cat","title":"R Package Documentation","text":"Description: Add categories age Parameters: - df: - age_col: - breaks: - labels: - int_undefined: - char_undefined: - new_colname: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_age_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[age_col] --> B     A --> D1     D2[breaks] --> B     A --> D2     D3[labels] --> B     A --> D3     D4[int_undefined] --> B     A --> D4     D5[char_undefined] --> B     A --> D5     D6[new_colname] --> B     A --> D6     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_age_18_cat","dir":"","previous_headings":"","what":"add_age_18_cat","title":"R Package Documentation","text":"Description: Parameters: - df: - age_col: - int_undefined: - char_undefined: - new_colname: Outputs: - new_colname - new_colname_d - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_age_18_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[age_col] --> B     A --> D1     D2[int_undefined] --> B     A --> D2     D3[char_undefined] --> B     A --> D3     D4[new_colname] --> B     A --> D4     B --> E0[new_colname]     E0 --> C     B --> E1[new_colname_d]     E1 --> C     B --> E2[df]     E2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_child_sep_cat","dir":"","previous_headings":"","what":"add_child_sep_cat","title":"R Package Documentation","text":"Description: Add child separation categories Parameters: - df: - child_sep: - child_sep_yes: - child_sep_no: - child_sep_undefined: - child_sep_reason: - child_sep_reason_non_severe: - child_sep_reason_severe: - child_sep_reason_very_severe: - child_sep_reason_undefined: - sep: Outputs: - child_sep_reason_d_severe - child_sep_reason_d_non_severe - child_sep_reason_d_very_severe - child_sep_reason_d_undefined - df New/Modified Columns: - prot_child_sep_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_child_sep_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[child_sep] --> B     A --> D1     D2[child_sep_yes] --> B     A --> D2     D3[child_sep_no] --> B     A --> D3     D4[child_sep_undefined] --> B     A --> D4     D5[child_sep_reason] --> B     A --> D5     D6[child_sep_reason_non_severe] --> B     A --> D6     D7[child_sep_reason_severe] --> B     A --> D7     D8[child_sep_reason_very_severe] --> B     A --> D8     D9[child_sep_reason_undefined] --> B     A --> D9     D10[sep] --> B     A --> D10     B --> E0[child_sep_reason_d_severe]     E0 --> C     B --> E1[child_sep_reason_d_non_severe]     E1 --> C     B --> E2[child_sep_reason_d_very_severe]     E2 --> C     B --> E3[child_sep_reason_d_undefined]     E3 --> C     B --> E4[df]     E4 --> C     B --> F0[prot_child_sep_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_comp_edu","dir":"","previous_headings":"","what":"add_comp_edu","title":"R Package Documentation","text":"Description: Education sectoral composite - add score dummy need Parameters: - df: - schooling_age_n: - no_access_n: - barrier_protection_n: - occupation_n: - hazards_n: - displaced_n: - teacher_n: Outputs: - df New/Modified Columns: - comp_edu_score_disrupted - comp_edu_score_attendance - comp_edu_score Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_comp_edu]     B --> C[Output]         D0[df] --> B     A --> D0     D1[schooling_age_n] --> B     A --> D1     D2[no_access_n] --> B     A --> D2     D3[barrier_protection_n] --> B     A --> D3     D4[occupation_n] --> B     A --> D4     D5[hazards_n] --> B     A --> D5     D6[displaced_n] --> B     A --> D6     D7[teacher_n] --> B     A --> D7     B --> E0[df]     E0 --> C     B --> F0[comp_edu_score_disrupted]     F0 --> C     B --> F1[comp_edu_score_attendance]     F1 --> C     B --> F2[comp_edu_score]     F2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_comp_foodsec","dir":"","previous_headings":"","what":"add_comp_foodsec","title":"R Package Documentation","text":"Description: Food security sectoral composite - add score dummy need Parameters: - df: - fc_phase: - fc_phase_levels: Outputs: - df New/Modified Columns: - comp_foodsec_score Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_comp_foodsec]     B --> C[Output]         D0[df] --> B     A --> D0     D1[fc_phase] --> B     A --> D1     D2[fc_phase_levels] --> B     A --> D2     B --> E0[df]     E0 --> C     B --> F0[comp_foodsec_score]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_comp_health","dir":"","previous_headings":"","what":"add_comp_health","title":"R Package Documentation","text":"Description: Health composite - add score dummy need Parameters: - df: - ind_healthcare_needed_no_n: - ind_healthcare_needed_yes_unmet_n: - ind_healthcare_needed_yes_met_n: - wgq_dis: - ind_healthcare_needed_no_wgq_dis_n: - ind_healthcare_needed_yes_unmet_wgq_dis_n: - ind_healthcare_needed_yes_met_wgq_dis_n: Outputs: - vars_n - vars_dis_n - df New/Modified Columns: - comp_health_score Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_comp_health]     B --> C[Output]         D0[df] --> B     A --> D0     D1[ind_healthcare_needed_no_n] --> B     A --> D1     D2[ind_healthcare_needed_yes_unmet_n] --> B     A --> D2     D3[ind_healthcare_needed_yes_met_n] --> B     A --> D3     D4[wgq_dis] --> B     A --> D4     D5[ind_healthcare_needed_no_wgq_dis_n] --> B     A --> D5     D6[ind_healthcare_needed_yes_unmet_wgq_dis_n] --> B     A --> D6     D7[ind_healthcare_needed_yes_met_wgq_dis_n] --> B     A --> D7     B --> E0[vars_n]     E0 --> C     B --> E1[vars_dis_n]     E1 --> C     B --> E2[df]     E2 --> C     B --> F0[comp_health_score]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_comp_prot","dir":"","previous_headings":"","what":"add_comp_prot","title":"R Package Documentation","text":"Description: Protection composite - add score dummy need Parameters: - df: - child_sep_cat: - child_sep_cat_levels: - concern_freq_cope: - concern_freq_displaced: - concern_hh_freq_kidnapping: - concern_hh_freq_discrimination: - concern_levels: Outputs: - df New/Modified Columns: - comp_prot_score_concern_freq_cope - comp_prot_child_sep_cat - default - comp_prot_score_concern - comp_prot_risk_always_d - comp_prot_score Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_comp_prot]     B --> C[Output]         D0[df] --> B     A --> D0     D1[child_sep_cat] --> B     A --> D1     D2[child_sep_cat_levels] --> B     A --> D2     D3[concern_freq_cope] --> B     A --> D3     D4[concern_freq_displaced] --> B     A --> D4     D5[concern_hh_freq_kidnapping] --> B     A --> D5     D6[concern_hh_freq_discrimination] --> B     A --> D6     D7[concern_levels] --> B     A --> D7     B --> E0[df]     E0 --> C     B --> F0[comp_prot_score_concern_freq_cope]     F0 --> C     B --> F1[comp_prot_child_sep_cat]     F1 --> C     B --> F2[default]     F2 --> C     B --> F3[comp_prot_score_concern]     F3 --> C     B --> F4[comp_prot_risk_always_d]     F4 --> C     B --> F5[comp_prot_score]     F5 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_comp_snfi","dir":"","previous_headings":"","what":"add_comp_snfi","title":"R Package Documentation","text":"Description: SNFI sectoral composite - add score dummy need Parameters: - df: - shelter_type_cat: - shelter_type_cat_levels: - shelter_issue_cat: - shelter_issue_cat_levels: - occupancy_cat: - occupancy_cat_levels: - fds_cannot_cat: - fds_cannot_cat_levels: Outputs: - df New/Modified Columns: - comp_snfi_score_shelter_issue_cat - comp_snfi_score_occupancy_cat - comp_snfi_score - comp_snfi_score_shelter_type_cat - comp_snfi_score_fds_cannot_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_comp_snfi]     B --> C[Output]         D0[df] --> B     A --> D0     D1[shelter_type_cat] --> B     A --> D1     D2[shelter_type_cat_levels] --> B     A --> D2     D3[shelter_issue_cat] --> B     A --> D3     D4[shelter_issue_cat_levels] --> B     A --> D4     D5[occupancy_cat] --> B     A --> D5     D6[occupancy_cat_levels] --> B     A --> D6     D7[fds_cannot_cat] --> B     A --> D7     D8[fds_cannot_cat_levels] --> B     A --> D8     B --> E0[df]     E0 --> C     B --> F0[comp_snfi_score_shelter_issue_cat]     F0 --> C     B --> F1[comp_snfi_score_occupancy_cat]     F1 --> C     B --> F2[comp_snfi_score]     F2 --> C     B --> F3[comp_snfi_score_shelter_type_cat]     F3 --> C     B --> F4[comp_snfi_score_fds_cannot_cat]     F4 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_comp_wash","dir":"","previous_headings":"","what":"add_comp_wash","title":"R Package Documentation","text":"Description: WASH sectoral composite - add score dummy need Parameters: - df: - setting: - setting_levels: - drinking_water_quantity: - drinking_water_quantity_levels: - drinking_water_quality_jmp_cat: - drinking_water_quality_jmp_cat_levels: - sanitation_facility_jmp_cat: - sanitation_facility_jmp_cat_levels: - sanitation_facility_cat: - sanitation_facility_cat_levels: - sanitation_facility_n_ind: - sanitation_facility_n_ind_levels: - handwashing_facility_jmp_cat: - handwashing_facility_jmp_cat_levels: Outputs: - df New/Modified Columns: - comp_wash_score_water_quantity - comp_wash_score Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_comp_wash]     B --> C[Output]         D0[df] --> B     A --> D0     D1[setting] --> B     A --> D1     D2[setting_levels] --> B     A --> D2     D3[drinking_water_quantity] --> B     A --> D3     D4[drinking_water_quantity_levels] --> B     A --> D4     D5[drinking_water_quality_jmp_cat] --> B     A --> D5     D6[drinking_water_quality_jmp_cat_levels] --> B     A --> D6     D7[sanitation_facility_jmp_cat] --> B     A --> D7     D8[sanitation_facility_jmp_cat_levels] --> B     A --> D8     D9[sanitation_facility_cat] --> B     A --> D9     D10[sanitation_facility_cat_levels] --> B     A --> D10     D11[sanitation_facility_n_ind] --> B     A --> D11     D12[sanitation_facility_n_ind_levels] --> B     A --> D12     D13[handwashing_facility_jmp_cat] --> B     A --> D13     D14[handwashing_facility_jmp_cat_levels] --> B     A --> D14     B --> E0[df]     E0 --> C     B --> F0[comp_wash_score_water_quantity]     F0 --> C     B --> F1[comp_wash_score]     F1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_drinking_water_source_cat","dir":"","previous_headings":"","what":"add_drinking_water_source_cat","title":"R Package Documentation","text":"Description: Drinking water source recoding Parameters: - df: - drinking_water_source: - improved: - unimproved: - surface_water: - undefined: Outputs: - df New/Modified Columns: - wash_drinking_water_source_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_drinking_water_source_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[drinking_water_source] --> B     A --> D1     D2[improved] --> B     A --> D2     D3[unimproved] --> B     A --> D3     D4[surface_water] --> B     A --> D4     D5[undefined] --> B     A --> D5     B --> E0[df]     E0 --> C     B --> F0[wash_drinking_water_source_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_drinking_water_time_cat","dir":"","previous_headings":"","what":"add_drinking_water_time_cat","title":"R Package Documentation","text":"Description: Parameters: - df: - drinking_water_time_yn: - water_on_premises: - number_minutes: - dnk: - undefined: - drinking_water_time_int: - max: - drinking_water_time_sl: - sl_under_30_min: - sl_30min_1hr: - sl_more_than_1hr: - sl_undefined: - drinking_water_source: - skipped_drinking_water_source_premises: - skipped_drinking_water_source_undefined: Outputs: - df New/Modified Columns: - wash_drinking_water_time_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_drinking_water_time_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[drinking_water_time_yn] --> B     A --> D1     D2[water_on_premises] --> B     A --> D2     D3[number_minutes] --> B     A --> D3     D4[dnk] --> B     A --> D4     D5[undefined] --> B     A --> D5     D6[drinking_water_time_int] --> B     A --> D6     D7[max] --> B     A --> D7     D8[drinking_water_time_sl] --> B     A --> D8     D9[sl_under_30_min] --> B     A --> D9     D10[sl_30min_1hr] --> B     A --> D10     D11[sl_more_than_1hr] --> B     A --> D11     D12[sl_undefined] --> B     A --> D12     D13[drinking_water_source] --> B     A --> D13     D14[skipped_drinking_water_source_premises] --> B     A --> D14     D15[skipped_drinking_water_source_undefined] --> B     A --> D15     B --> E0[df]     E0 --> C     B --> F0[wash_drinking_water_time_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_drinking_water_time_threshold_cat","dir":"","previous_headings":"","what":"add_drinking_water_time_threshold_cat","title":"R Package Documentation","text":"Description: Parameters: - df: - drinking_water_time_cat: - premises: - under_30min: - above_30min: - undefined: Outputs: - df New/Modified Columns: - wash_drinking_water_time_30min_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_drinking_water_time_threshold_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[drinking_water_time_cat] --> B     A --> D1     D2[premises] --> B     A --> D2     D3[under_30min] --> B     A --> D3     D4[above_30min] --> B     A --> D4     D5[undefined] --> B     A --> D5     B --> E0[df]     E0 --> C     B --> F0[wash_drinking_water_time_30min_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_expenditure_type_prop_freq","dir":"","previous_headings":"","what":"add_expenditure_type_prop_freq","title":"R Package Documentation","text":"Description: Add frequent expenditure type amount proportions total frequent expenditure Parameters: - df: - cm_expenditure_frequent_food: - cm_expenditure_frequent_rent: - cm_expenditure_frequent_water: - cm_expenditure_frequent_nfi: - cm_expenditure_frequent_utilitiues: - cm_expenditure_frequent_fuel: - cm_expenditure_frequent_transportation: - cm_expenditure_frequent_communication: - cm_expenditure_frequent_other: Outputs: - expenditure_freq_types - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_expenditure_type_prop_freq]     B --> C[Output]         D0[df] --> B     A --> D0     D1[cm_expenditure_frequent_food] --> B     A --> D1     D2[cm_expenditure_frequent_rent] --> B     A --> D2     D3[cm_expenditure_frequent_water] --> B     A --> D3     D4[cm_expenditure_frequent_nfi] --> B     A --> D4     D5[cm_expenditure_frequent_utilitiues] --> B     A --> D5     D6[cm_expenditure_frequent_fuel] --> B     A --> D6     D7[cm_expenditure_frequent_transportation] --> B     A --> D7     D8[cm_expenditure_frequent_communication] --> B     A --> D8     D9[cm_expenditure_frequent_other] --> B     A --> D9     B --> E0[expenditure_freq_types]     E0 --> C     B --> E1[df]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_expenditure_type_prop_infreq","dir":"","previous_headings":"","what":"add_expenditure_type_prop_infreq","title":"R Package Documentation","text":"Description: Add infrequent expenditure type amount proportions total infrequent expenditure Parameters: - df: - cm_expenditure_infrequent_shelter: - cm_expenditure_infrequent_nfi: - cm_expenditure_infrequent_health: - cm_expenditure_infrequent_education: - cm_expenditure_infrequent_debt: - cm_expenditure_infrequent_other: Outputs: - expenditure_infreq_types - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_expenditure_type_prop_infreq]     B --> C[Output]         D0[df] --> B     A --> D0     D1[cm_expenditure_infrequent_shelter] --> B     A --> D1     D2[cm_expenditure_infrequent_nfi] --> B     A --> D2     D3[cm_expenditure_infrequent_health] --> B     A --> D3     D4[cm_expenditure_infrequent_education] --> B     A --> D4     D5[cm_expenditure_infrequent_debt] --> B     A --> D5     D6[cm_expenditure_infrequent_other] --> B     A --> D6     B --> E0[expenditure_infreq_types]     E0 --> C     B --> E1[df]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_expenditure_type_zero_freq","dir":"","previous_headings":"","what":"add_expenditure_type_zero_freq","title":"R Package Documentation","text":"Description: Add zero frequent expenditure type skipped Parameters: - df: - expenditure_freq: - undefined: - expenditure_freq_types: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_expenditure_type_zero_freq]     B --> C[Output]         D0[df] --> B     A --> D0     D1[expenditure_freq] --> B     A --> D1     D2[undefined] --> B     A --> D2     D3[expenditure_freq_types] --> B     A --> D3     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_expenditure_type_zero_infreq","dir":"","previous_headings":"","what":"add_expenditure_type_zero_infreq","title":"R Package Documentation","text":"Description: Add zero infrequent expenditure type skipped Parameters: - df: - expenditure_infreq: - undefined: - expenditure_infreq_types: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_expenditure_type_zero_infreq]     B --> C[Output]         D0[df] --> B     A --> D0     D1[expenditure_infreq] --> B     A --> D1     D2[undefined] --> B     A --> D2     D3[expenditure_infreq_types] --> B     A --> D3     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_fds_cannot_cat","dir":"","previous_headings":"","what":"add_fds_cannot_cat","title":"R Package Documentation","text":"Description: Add functional domestic space tasks categories Parameters: - df: - fds_cooking: - fds_cooking_cannot: - fds_cooking_can_issues: - fds_cooking_can_no_issues: - fds_cooking_no_need: - fds_cooking_undefined: - fds_sleeping: - fds_sleeping_cannot: - fds_sleeping_can_issues: - fds_sleeping_can_no_issues: - fds_sleeping_undefined: - fds_storing: - fds_storing_cannot: - fds_storing_can_issues: - fds_storing_can_no_issues: - fds_storing_undefined: - fds_personal_hygiene: - fds_personal_hygiene_cannot: - fds_personal_hygiene_can_issues: - fds_personal_hygiene_can_no_issues: - fds_personal_hygiene_undefined: - lighting_source: - lighting_source_none: - lighting_source_undefined: Outputs: - df New/Modified Columns: - snfi_fds_cannot_n - x - snfi_fds_cooking - default - energy_lighting_source - snfi_fds_cannot_cat - energy_lighting_source_d Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_fds_cannot_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[fds_cooking] --> B     A --> D1     D2[fds_cooking_cannot] --> B     A --> D2     D3[fds_cooking_can_issues] --> B     A --> D3     D4[fds_cooking_can_no_issues] --> B     A --> D4     D5[fds_cooking_no_need] --> B     A --> D5     D6[fds_cooking_undefined] --> B     A --> D6     D7[fds_sleeping] --> B     A --> D7     D8[fds_sleeping_cannot] --> B     A --> D8     D9[fds_sleeping_can_issues] --> B     A --> D9     D10[fds_sleeping_can_no_issues] --> B     A --> D10     D11[fds_sleeping_undefined] --> B     A --> D11     D12[fds_storing] --> B     A --> D12     D13[fds_storing_cannot] --> B     A --> D13     D14[fds_storing_can_issues] --> B     A --> D14     D15[fds_storing_can_no_issues] --> B     A --> D15     D16[fds_storing_undefined] --> B     A --> D16     D17[fds_personal_hygiene] --> B     A --> D17     D18[fds_personal_hygiene_cannot] --> B     A --> D18     D19[fds_personal_hygiene_can_issues] --> B     A --> D19     D20[fds_personal_hygiene_can_no_issues] --> B     A --> D20     D21[fds_personal_hygiene_undefined] --> B     A --> D21     D22[lighting_source] --> B     A --> D22     D23[lighting_source_none] --> B     A --> D23     D24[lighting_source_undefined] --> B     A --> D24     B --> E0[df]     E0 --> C     B --> F0[snfi_fds_cannot_n]     F0 --> C     B --> F1[x]     F1 --> C     B --> F2[snfi_fds_cooking]     F2 --> C     B --> F3[default]     F3 --> C     B --> F4[energy_lighting_source]     F4 --> C     B --> F5[snfi_fds_cannot_cat]     F5 --> C     B --> F6[energy_lighting_source_d]     F6 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_handwashing_facility_cat","dir":"","previous_headings":"","what":"add_handwashing_facility_cat","title":"R Package Documentation","text":"Description: Add frequent expenditure type amount proportions total frequent expenditure Parameters: - df: - survey_modality: - survey_modality_in_person: - survey_modality_remote: - facility: - facility_yes: - facility_no: - facility_no_permission: - facility_undefined: - facility_observed_water: - facility_observed_water_yes: - facility_observed_water_no: - facility_observed_soap: - facility_observed_soap_yes: - facility_observed_soap_no: - facility_observed_soap_alternative: - facility_reported: - facility_reported_yes: - facility_reported_no: - facility_reported_undefined: - facility_reported_no_permission_soap: - facility_reported_no_permission_soap_yes: - facility_reported_no_permission_soap_no: - facility_reported_no_permission_soap_undefined: - facility_reported_no_permission_soap_type: - facility_reported_no_permission_soap_type_yes: - facility_reported_no_permission_soap_type_no: - facility_reported_no_permission_soap_type_undefined: - facility_reported_remote_soap: - facility_reported_remote_soap_yes: - facility_reported_remote_soap_no: - facility_reported_remote_soap_undefined: - facility_reported_remote_soap_type: - facility_reported_remote_soap_type_yes: - facility_reported_remote_soap_type_no: - facility_reported_remote_soap_type_undefined: Outputs: - df New/Modified Columns: - wash_handwashing_facility_jmp_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_handwashing_facility_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[survey_modality] --> B     A --> D1     D2[survey_modality_in_person] --> B     A --> D2     D3[survey_modality_remote] --> B     A --> D3     D4[facility] --> B     A --> D4     D5[facility_yes] --> B     A --> D5     D6[facility_no] --> B     A --> D6     D7[facility_no_permission] --> B     A --> D7     D8[facility_undefined] --> B     A --> D8     D9[facility_observed_water] --> B     A --> D9     D10[facility_observed_water_yes] --> B     A --> D10     D11[facility_observed_water_no] --> B     A --> D11     D12[facility_observed_soap] --> B     A --> D12     D13[facility_observed_soap_yes] --> B     A --> D13     D14[facility_observed_soap_no] --> B     A --> D14     D15[facility_observed_soap_alternative] --> B     A --> D15     D16[facility_reported] --> B     A --> D16     D17[facility_reported_yes] --> B     A --> D17     D18[facility_reported_no] --> B     A --> D18     D19[facility_reported_undefined] --> B     A --> D19     D20[facility_reported_no_permission_soap] --> B     A --> D20     D21[facility_reported_no_permission_soap_yes] --> B     A --> D21     D22[facility_reported_no_permission_soap_no] --> B     A --> D22     D23[facility_reported_no_permission_soap_undefined] --> B     A --> D23     D24[facility_reported_no_permission_soap_type] --> B     A --> D24     D25[facility_reported_no_permission_soap_type_yes] --> B     A --> D25     D26[facility_reported_no_permission_soap_type_no] --> B     A --> D26     D27[facility_reported_no_permission_soap_type_undefined] --> B     A --> D27     D28[facility_reported_remote_soap] --> B     A --> D28     D29[facility_reported_remote_soap_yes] --> B     A --> D29     D30[facility_reported_remote_soap_no] --> B     A --> D30     D31[facility_reported_remote_soap_undefined] --> B     A --> D31     D32[facility_reported_remote_soap_type] --> B     A --> D32     D33[facility_reported_remote_soap_type_yes] --> B     A --> D33     D34[facility_reported_remote_soap_type_no] --> B     A --> D34     D35[facility_reported_remote_soap_type_undefined] --> B     A --> D35     B --> E0[df]     E0 --> C     B --> F0[wash_handwashing_facility_jmp_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_hoh_final","dir":"","previous_headings":"","what":"add_hoh_final","title":"R Package Documentation","text":"Description: Head household final values (respondent skip logic) Parameters: - df: - resp_hoh_yn: - yes: - : - hoh_gender: - hoh_age: - resp_gender: - resp_age: Outputs: - df New/Modified Columns: - hoh_gender Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_hoh_final]     B --> C[Output]         D0[df] --> B     A --> D0     D1[resp_hoh_yn] --> B     A --> D1     D2[yes] --> B     A --> D2     D3[no] --> B     A --> D3     D4[hoh_gender] --> B     A --> D4     D5[hoh_age] --> B     A --> D5     D6[resp_gender] --> B     A --> D6     D7[resp_age] --> B     A --> D7     B --> E0[df]     E0 --> C     B --> F0[hoh_gender]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_income_source_rank","dir":"","previous_headings":"","what":"add_income_source_rank","title":"R Package Documentation","text":"Description: Add income source categories, count, top 3 Parameters: - df: - emergency: - unstable: - stable: - : - id_col: Outputs: - income_source_cat_rec - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_income_source_rank]     B --> C[Output]         D0[df] --> B     A --> D0     D1[emergency] --> B     A --> D1     D2[unstable] --> B     A --> D2     D3[stable] --> B     A --> D3     D4[other] --> B     A --> D4     D5[id_col] --> B     A --> D5     B --> E0[income_source_cat_rec]     E0 --> C     B --> E1[df]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_income_source_prop","dir":"","previous_headings":"","what":"add_income_source_prop","title":"R Package Documentation","text":"Description: Add income source amount proportions total income Parameters: - df: - income_souce_salaried_n: - income_source_casual_n: - income_source_own_business_n: - income_source_own_production_n: - income_source_social_benefits_n: - income_source_rent_n: - income_source_remittances_n: - income_source_assistance_n: - income_source_support_friends_n: - income_source_donation_n: - income_source_other_n: Outputs: - df - income_sources New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_income_source_prop]     B --> C[Output]         D0[df] --> B     A --> D0     D1[income_souce_salaried_n] --> B     A --> D1     D2[income_source_casual_n] --> B     A --> D2     D3[income_source_own_business_n] --> B     A --> D3     D4[income_source_own_production_n] --> B     A --> D4     D5[income_source_social_benefits_n] --> B     A --> D5     D6[income_source_rent_n] --> B     A --> D6     D7[income_source_remittances_n] --> B     A --> D7     D8[income_source_assistance_n] --> B     A --> D8     D9[income_source_support_friends_n] --> B     A --> D9     D10[income_source_donation_n] --> B     A --> D10     D11[income_source_other_n] --> B     A --> D11     B --> E0[df]     E0 --> C     B --> E1[income_sources]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_income_source_zero_to_sl","dir":"","previous_headings":"","what":"add_income_source_zero_to_sl","title":"R Package Documentation","text":"Description: Add zero income source skipped Parameters: - df: - income_source: - undefined: - income_sources: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_income_source_zero_to_sl]     B --> C[Output]         D0[df] --> B     A --> D0     D1[income_source] --> B     A --> D1     D2[undefined] --> B     A --> D2     D3[income_sources] --> B     A --> D3     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_age_dummy","dir":"","previous_headings":"","what":"add_loop_age_dummy","title":"R Package Documentation","text":"Description: Add dummy variable age class Parameters: - loop: - ind_age: - lb: - ub: - new_colname: Outputs: - new_colname - loop New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_age_dummy]     B --> C[Output]         D0[loop] --> B     A --> D0     D1[ind_age] --> B     A --> D1     D2[lb] --> B     A --> D2     D3[ub] --> B     A --> D3     D4[new_colname] --> B     A --> D4     B --> E0[new_colname]     E0 --> C     B --> E1[loop]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_age_dummy_to_main","dir":"","previous_headings":"","what":"add_loop_age_dummy_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - ind_age_dummy: - id_col_main: - id_col_loop: - new_colname: Outputs: - new_colname - loop - main New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_age_dummy_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[ind_age_dummy] --> B     A --> D2     D3[id_col_main] --> B     A --> D3     D4[id_col_loop] --> B     A --> D4     D5[new_colname] --> B     A --> D5     B --> E0[new_colname]     E0 --> C     B --> E1[loop]     E1 --> C     B --> E2[main]     E2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_age_gender_dummy","dir":"","previous_headings":"","what":"add_loop_age_gender_dummy","title":"R Package Documentation","text":"Description: Parameters: - loop: - ind_age: - lb: - ub: - ind_gender: - gender: - new_colname: Outputs: - new_colname - loop New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_age_gender_dummy]     B --> C[Output]         D0[loop] --> B     A --> D0     D1[ind_age] --> B     A --> D1     D2[lb] --> B     A --> D2     D3[ub] --> B     A --> D3     D4[ind_gender] --> B     A --> D4     D5[gender] --> B     A --> D5     D6[new_colname] --> B     A --> D6     B --> E0[new_colname]     E0 --> C     B --> E1[loop]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_age_gender_dummy_to_main","dir":"","previous_headings":"","what":"add_loop_age_gender_dummy_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - ind_age_gender_dummy: - id_col_main: - id_col_loop: - new_colname: Outputs: - new_colname - loop - main New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_age_gender_dummy_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[ind_age_gender_dummy] --> B     A --> D2     D3[id_col_main] --> B     A --> D3     D4[id_col_loop] --> B     A --> D4     D5[new_colname] --> B     A --> D5     B --> E0[new_colname]     E0 --> C     B --> E1[loop]     E1 --> C     B --> E2[main]     E2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_access_d","dir":"","previous_headings":"","what":"add_loop_edu_access_d","title":"R Package Documentation","text":"Description: Add education access dummy Parameters: - loop: - ind_access: - yes: - : - pnta: - dnk: - ind_schooling_age_d: Outputs: - loop New/Modified Columns: - edu_ind_access_d Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_access_d]     B --> C[Output]         D0[loop] --> B     A --> D0     D1[ind_access] --> B     A --> D1     D2[yes] --> B     A --> D2     D3[no] --> B     A --> D3     D4[pnta] --> B     A --> D4     D5[dnk] --> B     A --> D5     D6[ind_schooling_age_d] --> B     A --> D6     B --> E0[loop]     E0 --> C     B --> F0[edu_ind_access_d]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_access_d_to_main","dir":"","previous_headings":"","what":"add_loop_edu_access_d_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - ind_access_d: - ind_no_access_d: - id_col_main: - id_col_loop: Outputs: - main - loop - ind_access_d_n - ind_no_access_d_n New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_access_d_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[ind_access_d] --> B     A --> D2     D3[ind_no_access_d] --> B     A --> D3     D4[id_col_main] --> B     A --> D4     D5[id_col_loop] --> B     A --> D5     B --> E0[main]     E0 --> C     B --> E1[loop]     E1 --> C     B --> E2[ind_access_d_n]     E2 --> C     B --> E3[ind_no_access_d_n]     E3 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_barrier_protection_d","dir":"","previous_headings":"","what":"add_loop_edu_barrier_protection_d","title":"R Package Documentation","text":"Description: Add variable child protection barriers education Parameters: - loop: - barriers: - protection_issues: - ind_schooling_age_d: Outputs: - loop New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_barrier_protection_d]     B --> C[Output]         D0[loop] --> B     A --> D0     D1[barriers] --> B     A --> D1     D2[protection_issues] --> B     A --> D2     D3[ind_schooling_age_d] --> B     A --> D3     B --> E0[loop]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_barrier_protection_d_to_main","dir":"","previous_headings":"","what":"add_loop_edu_barrier_protection_d_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - ind_barrier_protection_d: - id_col_main: - id_col_loop: Outputs: - loop - main - ind_barrier_protection_d_n New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_barrier_protection_d_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[ind_barrier_protection_d] --> B     A --> D2     D3[id_col_main] --> B     A --> D3     D4[id_col_loop] --> B     A --> D4     B --> E0[loop]     E0 --> C     B --> E1[main]     E1 --> C     B --> E2[ind_barrier_protection_d_n]     E2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_disrupted_d","dir":"","previous_headings":"","what":"add_loop_edu_disrupted_d","title":"R Package Documentation","text":"Description: Add education disruption categories Parameters: - df: - occupation: - hazards: - displaced: - teacher: - levels: - ind_schooling_age_d: Outputs: - hazards_d - teacher_d - displaced_d - occupation_d - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_disrupted_d]     B --> C[Output]         D0[df] --> B     A --> D0     D1[occupation] --> B     A --> D1     D2[hazards] --> B     A --> D2     D3[displaced] --> B     A --> D3     D4[teacher] --> B     A --> D4     D5[levels] --> B     A --> D5     D6[ind_schooling_age_d] --> B     A --> D6     B --> E0[hazards_d]     E0 --> C     B --> E1[teacher_d]     E1 --> C     B --> E2[displaced_d]     E2 --> C     B --> E3[occupation_d]     E3 --> C     B --> E4[df]     E4 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_disrupted_d_to_main","dir":"","previous_headings":"","what":"add_loop_edu_disrupted_d_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - occupation_d: - hazards_d: - displaced_d: - teacher_d: - id_col_main: - id_col_loop: Outputs: - loop - main New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_disrupted_d_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[occupation_d] --> B     A --> D2     D3[hazards_d] --> B     A --> D3     D4[displaced_d] --> B     A --> D4     D5[teacher_d] --> B     A --> D5     D6[id_col_main] --> B     A --> D6     D7[id_col_loop] --> B     A --> D7     B --> E0[loop]     E0 --> C     B --> E1[main]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_ind_age_corrected","dir":"","previous_headings":"","what":"add_loop_edu_ind_age_corrected","title":"R Package Documentation","text":"Description: Add correct schooling age loop Parameters: - loop: - main: - id_col_loop: - id_col_main: - survey_start_date: - school_year_start_month: - ind_age: - month: Outputs: - loop - main - school_year_start_month_adj New/Modified Columns: - edu_ind_age_corrected - month - edu_ind_schooling_age_d Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_ind_age_corrected]     B --> C[Output]         D0[loop] --> B     A --> D0     D1[main] --> B     A --> D1     D2[id_col_loop] --> B     A --> D2     D3[id_col_main] --> B     A --> D3     D4[survey_start_date] --> B     A --> D4     D5[school_year_start_month] --> B     A --> D5     D6[ind_age] --> B     A --> D6     D7[month] --> B     A --> D7     B --> E0[loop]     E0 --> C     B --> E1[main]     E1 --> C     B --> E2[school_year_start_month_adj]     E2 --> C     B --> F0[edu_ind_age_corrected]     F0 --> C     B --> F1[month]     F1 --> C     B --> F2[edu_ind_schooling_age_d]     F2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_edu_ind_schooling_age_d_to_main","dir":"","previous_headings":"","what":"add_loop_edu_ind_schooling_age_d_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - ind_schooling_age_d: - id_col_main: - id_col_loop: Outputs: - ind_schooling_age_d_n - loop - main New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_edu_ind_schooling_age_d_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[ind_schooling_age_d] --> B     A --> D2     D3[id_col_main] --> B     A --> D3     D4[id_col_loop] --> B     A --> D4     B --> E0[ind_schooling_age_d_n]     E0 --> C     B --> E1[loop]     E1 --> C     B --> E2[main]     E2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_healthcare_needed_cat","dir":"","previous_headings":"","what":"add_loop_healthcare_needed_cat","title":"R Package Documentation","text":"Description: Add healthcare needed category loop data (incl. WGQ-SS provided) Parameters: - loop: - ind_healthcare_needed: - ind_healthcare_needed_levels: - ind_healthcare_received: - ind_healthcare_received_levels: - wgq_dis: - ind_age: Outputs: - loop New/Modified Columns: - health_ind_healthcare_needed_yes_met - health_ind_healthcare_needed_no_wgq_dis - health_ind_healthcare_needed_no - default - health_ind_healthcare_received_d - health_ind_healthcare_needed_d - health_ind_healthcare_needed_yes_unmet - health_ind_healthcare_needed_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_healthcare_needed_cat]     B --> C[Output]         D0[loop] --> B     A --> D0     D1[ind_healthcare_needed] --> B     A --> D1     D2[ind_healthcare_needed_levels] --> B     A --> D2     D3[ind_healthcare_received] --> B     A --> D3     D4[ind_healthcare_received_levels] --> B     A --> D4     D5[wgq_dis] --> B     A --> D5     D6[ind_age] --> B     A --> D6     B --> E0[loop]     E0 --> C     B --> F0[health_ind_healthcare_needed_yes_met]     F0 --> C     B --> F1[health_ind_healthcare_needed_no_wgq_dis]     F1 --> C     B --> F2[health_ind_healthcare_needed_no]     F2 --> C     B --> F3[default]     F3 --> C     B --> F4[health_ind_healthcare_received_d]     F4 --> C     B --> F5[health_ind_healthcare_needed_d]     F5 --> C     B --> F6[health_ind_healthcare_needed_yes_unmet]     F6 --> C     B --> F7[health_ind_healthcare_needed_cat]     F7 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_healthcare_needed_cat_to_main","dir":"","previous_headings":"","what":"add_loop_healthcare_needed_cat_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - ind_healthcare_needed_no: - ind_healthcare_needed_yes_unmet: - ind_healthcare_needed_yes_met: - ind_healthcare_needed_no_wgq_dis: - ind_healthcare_needed_yes_unmet_wgq_dis: - ind_healthcare_needed_yes_met_wgq_dis: - id_col_main: - id_col_loop: Outputs: - new_colname_yes_unmet_wgq_dis - new_colname_no_wgq_dis - loop_yes_unmet_wgq_dis - new_colname_yes_met_wgq_dis - loop_no_wgq_dis - vars_n - loop - main - vars - loop_yes_met_wgq_dis - loop_vars New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_healthcare_needed_cat_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[ind_healthcare_needed_no] --> B     A --> D2     D3[ind_healthcare_needed_yes_unmet] --> B     A --> D3     D4[ind_healthcare_needed_yes_met] --> B     A --> D4     D5[ind_healthcare_needed_no_wgq_dis] --> B     A --> D5     D6[ind_healthcare_needed_yes_unmet_wgq_dis] --> B     A --> D6     D7[ind_healthcare_needed_yes_met_wgq_dis] --> B     A --> D7     D8[id_col_main] --> B     A --> D8     D9[id_col_loop] --> B     A --> D9     B --> E0[new_colname_yes_unmet_wgq_dis]     E0 --> C     B --> E1[new_colname_no_wgq_dis]     E1 --> C     B --> E2[loop_yes_unmet_wgq_dis]     E2 --> C     B --> E3[new_colname_yes_met_wgq_dis]     E3 --> C     B --> E4[loop_no_wgq_dis]     E4 --> C     B --> E5[vars_n]     E5 --> C     B --> E6[loop]     E6 --> C     B --> E7[main]     E7 --> C     B --> E8[vars]     E8 --> C     B --> E9[loop_yes_met_wgq_dis]     E9 --> C     B --> E10[loop_vars]     E10 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_wgq_ss","dir":"","previous_headings":"","what":"add_loop_wgq_ss","title":"R Package Documentation","text":"Description: Prepare dummy variables WG-SS component (individual data) Parameters: - loop: - ind_age: - vision: - hearing: - mobility: - cognition: - self_care: - communication: - no_difficulty: - some_difficulty: - lot_of_difficulty: - cannot_do: - undefined: Outputs: - wgq_vars_lot_of_difficulty - levels - wgq_vars - loop - wgq_vars_cannot_do - wqg_vars_no_difficulty - wgq_vars_some_difficulty New/Modified Columns: - wgq_no_difficulty_d - wgq_dis_1 - wgq_cannot_do_d - wgq_dis_4 - x - wgq_lot_of_difficulty_d - default - ind_age_above_5 - wgq_some_difficulty_d - wgq_dis_3 - wgq_dis_2 Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_wgq_ss]     B --> C[Output]         D0[loop] --> B     A --> D0     D1[ind_age] --> B     A --> D1     D2[vision] --> B     A --> D2     D3[hearing] --> B     A --> D3     D4[mobility] --> B     A --> D4     D5[cognition] --> B     A --> D5     D6[self_care] --> B     A --> D6     D7[communication] --> B     A --> D7     D8[no_difficulty] --> B     A --> D8     D9[some_difficulty] --> B     A --> D9     D10[lot_of_difficulty] --> B     A --> D10     D11[cannot_do] --> B     A --> D11     D12[undefined] --> B     A --> D12     B --> E0[wgq_vars_lot_of_difficulty]     E0 --> C     B --> E1[levels]     E1 --> C     B --> E2[wgq_vars]     E2 --> C     B --> E3[loop]     E3 --> C     B --> E4[wgq_vars_cannot_do]     E4 --> C     B --> E5[wqg_vars_no_difficulty]     E5 --> C     B --> E6[wgq_vars_some_difficulty]     E6 --> C     B --> F0[wgq_no_difficulty_d]     F0 --> C     B --> F1[wgq_dis_1]     F1 --> C     B --> F2[wgq_cannot_do_d]     F2 --> C     B --> F3[wgq_dis_4]     F3 --> C     B --> F4[x]     F4 --> C     B --> F5[wgq_lot_of_difficulty_d]     F5 --> C     B --> F6[default]     F6 --> C     B --> F7[ind_age_above_5]     F7 --> C     B --> F8[wgq_some_difficulty_d]     F8 --> C     B --> F9[wgq_dis_3]     F9 --> C     B --> F10[wgq_dis_2]     F10 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_loop_wgq_ss_to_main","dir":"","previous_headings":"","what":"add_loop_wgq_ss_to_main","title":"R Package Documentation","text":"Description: Parameters: - main: - loop: - wgq_dis_4: - wgq_dis_3: - wgq_dis_2: - wgq_dis_1: - ind_age_above_5: - id_col_main: - id_col_loop: Outputs: - ind_age_above_5_n - wgq_dis - loop - main - wgq_dis_n New/Modified Columns: - x - default Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_loop_wgq_ss_to_main]     B --> C[Output]         D0[main] --> B     A --> D0     D1[loop] --> B     A --> D1     D2[wgq_dis_4] --> B     A --> D2     D3[wgq_dis_3] --> B     A --> D3     D4[wgq_dis_2] --> B     A --> D4     D5[wgq_dis_1] --> B     A --> D5     D6[ind_age_above_5] --> B     A --> D6     D7[id_col_main] --> B     A --> D7     D8[id_col_loop] --> B     A --> D8     B --> E0[ind_age_above_5_n]     E0 --> C     B --> E1[wgq_dis]     E1 --> C     B --> E2[loop]     E2 --> C     B --> E3[main]     E3 --> C     B --> E4[wgq_dis_n]     E4 --> C     B --> F0[x]     F0 --> C     B --> F1[default]     F1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_msni","dir":"","previous_headings":"","what":"add_msni","title":"R Package Documentation","text":"Description: Add MSNI - add score dummy need Parameters: - df: - comp_foodsec_score: - comp_snfi_score: - comp_wash_score: - comp_prot_score: - comp_health_score: - comp_edu_score: - comp_foodsec_in_need: - comp_snfi_in_need: - comp_wash_in_need: - comp_prot_in_need: - comp_health_in_need: - comp_edu_in_need: Outputs: - labels - values - comp_scores_nin - comp_names - comp_scores - comp_in_need_lgl - comp_in_need - sector_needs_profile - df_comp_in_need - comp_scores_lgl - comp_in_need_nin - df New/Modified Columns: - sector_needs_profile - msni_score Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_msni]     B --> C[Output]         D0[df] --> B     A --> D0     D1[comp_foodsec_score] --> B     A --> D1     D2[comp_snfi_score] --> B     A --> D2     D3[comp_wash_score] --> B     A --> D3     D4[comp_prot_score] --> B     A --> D4     D5[comp_health_score] --> B     A --> D5     D6[comp_edu_score] --> B     A --> D6     D7[comp_foodsec_in_need] --> B     A --> D7     D8[comp_snfi_in_need] --> B     A --> D8     D9[comp_wash_in_need] --> B     A --> D9     D10[comp_prot_in_need] --> B     A --> D10     D11[comp_health_in_need] --> B     A --> D11     D12[comp_edu_in_need] --> B     A --> D12     B --> E0[labels]     E0 --> C     B --> E1[values]     E1 --> C     B --> E2[comp_scores_nin]     E2 --> C     B --> E3[comp_names]     E3 --> C     B --> E4[comp_scores]     E4 --> C     B --> E5[comp_in_need_lgl]     E5 --> C     B --> E6[comp_in_need]     E6 --> C     B --> E7[sector_needs_profile]     E7 --> C     B --> E8[df_comp_in_need]     E8 --> C     B --> E9[comp_scores_lgl]     E9 --> C     B --> E10[comp_in_need_nin]     E10 --> C     B --> E11[df]     E11 --> C     B --> F0[sector_needs_profile]     F0 --> C     B --> F1[msni_score]     F1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_occupancy_cat","dir":"","previous_headings":"","what":"add_occupancy_cat","title":"R Package Documentation","text":"Description: Add category occupancy arrangement Parameters: - df: - occupancy: - high_risk: - medium_risk: - low_risk: - undefined: Outputs: - df New/Modified Columns: - hlp_occupancy_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_occupancy_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[occupancy] --> B     A --> D1     D2[high_risk] --> B     A --> D2     D3[medium_risk] --> B     A --> D3     D4[low_risk] --> B     A --> D4     D5[undefined] --> B     A --> D5     B --> E0[df]     E0 --> C     B --> F0[hlp_occupancy_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_received_assistance","dir":"","previous_headings":"","what":"add_received_assistance","title":"R Package Documentation","text":"Description: Add received assistance (combined calculation) Parameters: - df: - received_assistance_12m: - yes: - : - undefined: - received_assistance_date: - date_past_30d: - date_1_3_months: - date_4_6_months: - date_7_12_months: - date_undefined: Outputs: - df New/Modified Columns: - aap_received_assistance Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_received_assistance]     B --> C[Output]         D0[df] --> B     A --> D0     D1[received_assistance_12m] --> B     A --> D1     D2[yes] --> B     A --> D2     D3[no] --> B     A --> D3     D4[undefined] --> B     A --> D4     D5[received_assistance_date] --> B     A --> D5     D6[date_past_30d] --> B     A --> D6     D7[date_1_3_months] --> B     A --> D7     D8[date_4_6_months] --> B     A --> D8     D9[date_7_12_months] --> B     A --> D9     D10[date_undefined] --> B     A --> D10     B --> E0[df]     E0 --> C     B --> F0[aap_received_assistance]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_barriers_assistance_any","dir":"","previous_headings":"","what":"add_barriers_assistance_any","title":"R Package Documentation","text":"Description: barriers accessing humanitarian assistance encountered Parameters: - df: - barriers_assistance: - none: - pnta: - dnk: Outputs: - df New/Modified Columns: - aap_barriers_assistance_any Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_barriers_assistance_any]     B --> C[Output]         D0[df] --> B     A --> D0     D1[barriers_assistance] --> B     A --> D1     D2[none] --> B     A --> D2     D3[pnta] --> B     A --> D3     D4[dnk] --> B     A --> D4     B --> E0[df]     E0 --> C     B --> F0[aap_barriers_assistance_any]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_sanitation_facility_cat","dir":"","previous_headings":"","what":"add_sanitation_facility_cat","title":"R Package Documentation","text":"Description: Sanitation facility classification Parameters: - df: - sanitation_facility: - improved: - unimproved: - none: - undefined: Outputs: - df New/Modified Columns: - wash_sanitation_facility_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_sanitation_facility_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[sanitation_facility] --> B     A --> D1     D2[improved] --> B     A --> D2     D3[unimproved] --> B     A --> D3     D4[none] --> B     A --> D4     D5[undefined] --> B     A --> D5     B --> E0[df]     E0 --> C     B --> F0[wash_sanitation_facility_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_sharing_sanitation_facility_cat","dir":"","previous_headings":"","what":"add_sharing_sanitation_facility_cat","title":"R Package Documentation","text":"Description: Parameters: - df: - sharing_sanitation_facility: - yes: - : - undefined: - sanitation_facility: - skipped_sanitation_facility: Outputs: - df New/Modified Columns: - wash_sharing_sanitation_facility_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_sharing_sanitation_facility_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[sharing_sanitation_facility] --> B     A --> D1     D2[yes] --> B     A --> D2     D3[no] --> B     A --> D3     D4[undefined] --> B     A --> D4     D5[sanitation_facility] --> B     A --> D5     D6[skipped_sanitation_facility] --> B     A --> D6     B --> E0[df]     E0 --> C     B --> F0[wash_sharing_sanitation_facility_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_sharing_sanitation_facility_num_ind","dir":"","previous_headings":"","what":"add_sharing_sanitation_facility_num_ind","title":"R Package Documentation","text":"Description: Parameters: - df: - sharing_sanitation_facility_cat: - levels: - sanitation_facility_sharing_n: - hh_size: - weight: Outputs: - mean_hh_size - df New/Modified Columns: - wash_sharing_sanitation_facility_num_hh - wash_sharing_sanitation_facility_n_ind Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_sharing_sanitation_facility_num_ind]     B --> C[Output]         D0[df] --> B     A --> D0     D1[sharing_sanitation_facility_cat] --> B     A --> D1     D2[levels] --> B     A --> D2     D3[sanitation_facility_sharing_n] --> B     A --> D3     D4[hh_size] --> B     A --> D4     D5[weight] --> B     A --> D5     B --> E0[mean_hh_size]     E0 --> C     B --> E1[df]     E1 --> C     B --> F0[wash_sharing_sanitation_facility_num_hh]     F0 --> C     B --> F1[wash_sharing_sanitation_facility_n_ind]     F1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_sanitation_facility_jmp_cat","dir":"","previous_headings":"","what":"add_sanitation_facility_jmp_cat","title":"R Package Documentation","text":"Description: Parameters: - df: - sanitation_facility_cat: - sanitation_facility_levels: - sharing_sanitation_facility_cat: - sharing_sanitation_facility_levels: Outputs: - df New/Modified Columns: - wash_sanitation_facility_jmp_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_sanitation_facility_jmp_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[sanitation_facility_cat] --> B     A --> D1     D2[sanitation_facility_levels] --> B     A --> D2     D3[sharing_sanitation_facility_cat] --> B     A --> D3     D4[sharing_sanitation_facility_levels] --> B     A --> D4     B --> E0[df]     E0 --> C     B --> F0[wash_sanitation_facility_jmp_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_shelter_issue_cat","dir":"","previous_headings":"","what":"add_shelter_issue_cat","title":"R Package Documentation","text":"Description: Add number shelter issues related category Parameters: - df: - shelter_issue: - none: - issues: - undefined: - sep: Outputs: - shelter_issue_d_undefined - shelter_issue_d_none - shelter_issue_d_issues - df New/Modified Columns: - snfi_shelter_issue_cat - snfi_shelter_issue_n - default Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_shelter_issue_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[shelter_issue] --> B     A --> D1     D2[none] --> B     A --> D2     D3[issues] --> B     A --> D3     D4[undefined] --> B     A --> D4     D5[sep] --> B     A --> D5     B --> E0[shelter_issue_d_undefined]     E0 --> C     B --> E1[shelter_issue_d_none]     E1 --> C     B --> E2[shelter_issue_d_issues]     E2 --> C     B --> E3[df]     E3 --> C     B --> F0[snfi_shelter_issue_cat]     F0 --> C     B --> F1[snfi_shelter_issue_n]     F1 --> C     B --> F2[default]     F2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_shelter_type_cat","dir":"","previous_headings":"","what":"add_shelter_type_cat","title":"R Package Documentation","text":"Description: Combines shelter types questions recodes type shelter. Parameters: - df: - shelter_type: - sl_none: - sl_collective_center: - sl_undefined: - shelter_type_individual: - adequate: - inadequate: - undefined: Outputs: - df New/Modified Columns: - snfi_shelter_type_cat Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_shelter_type_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[shelter_type] --> B     A --> D1     D2[sl_none] --> B     A --> D2     D3[sl_collective_center] --> B     A --> D3     D4[sl_undefined] --> B     A --> D4     D5[shelter_type_individual] --> B     A --> D5     D6[adequate] --> B     A --> D6     D7[inadequate] --> B     A --> D7     D8[undefined] --> B     A --> D8     B --> E0[df]     E0 --> C     B --> F0[snfi_shelter_type_cat]     F0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_top3_expenditure_type_freq","dir":"","previous_headings":"","what":"add_top3_expenditure_type_freq","title":"R Package Documentation","text":"Description: Rank top 3 frequent expenditure types Parameters: - df: - expenditure_freq_types: - id_col: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_top3_expenditure_type_freq]     B --> C[Output]         D0[df] --> B     A --> D0     D1[expenditure_freq_types] --> B     A --> D1     D2[id_col] --> B     A --> D2     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"add_top3_expenditure_type_infreq","dir":"","previous_headings":"","what":"add_top3_expenditure_type_infreq","title":"R Package Documentation","text":"Description: Rank top 3 infrequent expenditure types Parameters: - df: - expenditure_infreq_types: - id_col: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[add_top3_expenditure_type_infreq]     B --> C[Output]         D0[df] --> B     A --> D0     D1[expenditure_infreq_types] --> B     A --> D1     D2[id_col] --> B     A --> D2     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"impute_value","dir":"","previous_headings":"","what":"impute_value","title":"R Package Documentation","text":"Description: Impute missing values Parameters: - df: - vars: - value: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[impute_value]     B --> C[Output]         D0[df] --> B     A --> D0     D1[vars] --> B     A --> D1     D2[value] --> B     A --> D2     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"impute_median","dir":"","previous_headings":"","what":"impute_median","title":"R Package Documentation","text":"Description: Parameters: - df: - vars: - group: - weighted: - weight: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[impute_median]     B --> C[Output]         D0[df] --> B     A --> D0     D1[vars] --> B     A --> D1     D2[group] --> B     A --> D2     D3[weighted] --> B     A --> D3     D4[weight] --> B     A --> D4     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"are_cols_numeric","dir":"","previous_headings":"","what":"are_cols_numeric","title":"R Package Documentation","text":"Description: Parameters: - df: - cols: Outputs: - classes - TRUE - cols New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[are_cols_numeric]     B --> C[Output]         D0[df] --> B     A --> D0     D1[cols] --> B     A --> D1     B --> E0[classes]     E0 --> C     B --> E1[TRUE]     E1 --> C     B --> E2[cols]     E2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"are_values_in_range","dir":"","previous_headings":"","what":"are_values_in_range","title":"R Package Documentation","text":"Description: Parameters: - df: - cols: - lower: - upper: Outputs: - cols - ranges - TRUE New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[are_values_in_range]     B --> C[Output]         D0[df] --> B     A --> D0     D1[cols] --> B     A --> D1     D2[lower] --> B     A --> D2     D3[upper] --> B     A --> D3     B --> E0[cols]     E0 --> C     B --> E1[ranges]     E1 --> C     B --> E2[TRUE]     E2 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"are_values_in_set","dir":"","previous_headings":"","what":"are_values_in_set","title":"R Package Documentation","text":"Description: Parameters: - df: - cols: - set: - main_message: Outputs: - cols - values_chr - values_lgl - x - df_cols - TRUE New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[are_values_in_set]     B --> C[Output]         D0[df] --> B     A --> D0     D1[cols] --> B     A --> D1     D2[set] --> B     A --> D2     D3[main_message] --> B     A --> D3     B --> E0[cols]     E0 --> C     B --> E1[values_chr]     E1 --> C     B --> E2[values_lgl]     E2 --> C     B --> E3[x]     E3 --> C     B --> E4[df_cols]     E4 --> C     B --> E5[TRUE]     E5 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"subvec_in","dir":"","previous_headings":"","what":"subvec_in","title":"R Package Documentation","text":"Description: Parameters: - vector: - set: Outputs: New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[subvec_in]     B --> C[Output]         D0[vector] --> B     A --> D0     D1[set] --> B     A --> D1"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"subvec_not_in","dir":"","previous_headings":"","what":"subvec_not_in","title":"R Package Documentation","text":"Description: Parameters: - vector: - set: Outputs: New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[subvec_not_in]     B --> C[Output]         D0[vector] --> B     A --> D0     D1[set] --> B     A --> D1"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"if_not_in_stop","dir":"","previous_headings":"","what":"if_not_in_stop","title":"R Package Documentation","text":"Description: Parameters: - df: - cols: - df_name: - arg: Outputs: - msg - missing_cols New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[if_not_in_stop]     B --> C[Output]         D0[df] --> B     A --> D0     D1[cols] --> B     A --> D1     D2[df_name] --> B     A --> D2     D3[arg] --> B     A --> D3     B --> E0[msg]     E0 --> C     B --> E1[missing_cols]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"is_in_need","dir":"","previous_headings":"","what":"is_in_need","title":"R Package Documentation","text":"Description: Add dummy variable ‘need’ Parameters: - df: - score: - new_colname: Outputs: - new_colname - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[is_in_need]     B --> C[Output]         D0[df] --> B     A --> D0     D1[score] --> B     A --> D1     D2[new_colname] --> B     A --> D2     B --> E0[new_colname]     E0 --> C     B --> E1[df]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"is_in_acute_need","dir":"","previous_headings":"","what":"is_in_acute_need","title":"R Package Documentation","text":"Description: Parameters: - df: - score: - new_colname: Outputs: - new_colname - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[is_in_acute_need]     B --> C[Output]         D0[df] --> B     A --> D0     D1[score] --> B     A --> D1     D2[new_colname] --> B     A --> D2     B --> E0[new_colname]     E0 --> C     B --> E1[df]     E1 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"num_cat","dir":"","previous_headings":"","what":"num_cat","title":"R Package Documentation","text":"Description: Add categories numeric variable Parameters: - df: - num_col: - breaks: - labels: - int_undefined: - char_undefined: - new_colname: - plus_last: Outputs: - labels - paste0(lower + 1, “+” - upper - lower - new_colname - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[num_cat]     B --> C[Output]         D0[df] --> B     A --> D0     D1[num_col] --> B     A --> D1     D2[breaks] --> B     A --> D2     D3[labels] --> B     A --> D3     D4[int_undefined] --> B     A --> D4     D5[char_undefined] --> B     A --> D5     D6[new_colname] --> B     A --> D6     D7[plus_last] --> B     A --> D7     B --> E0[labels]     E0 --> C     B --> E1[paste0_lower___1_____]     E1 --> C     B --> E2[upper]     E2 --> C     B --> E3[lower]     E3 --> C     B --> E4[new_colname]     E4 --> C     B --> E5[df]     E5 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"rank_top3_vars","dir":"","previous_headings":"","what":"rank_top3_vars","title":"R Package Documentation","text":"Description: Function add top 3 columns numeric variables Parameters: - df: - vars: - new_colname_top1: - new_colname_top2: - new_colname_top3: - id_col: Outputs: - int - new_vars_in_df - new_vars - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[rank_top3_vars]     B --> C[Output]         D0[df] --> B     A --> D0     D1[vars] --> B     A --> D1     D2[new_colname_top1] --> B     A --> D2     D3[new_colname_top2] --> B     A --> D3     D4[new_colname_top3] --> B     A --> D4     D5[id_col] --> B     A --> D5     B --> E0[int]     E0 --> C     B --> E1[new_vars_in_df]     E1 --> C     B --> E2[new_vars]     E2 --> C     B --> E3[df]     E3 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"sum_vars","dir":"","previous_headings":"","what":"sum_vars","title":"R Package Documentation","text":"Description: Function sum columns row-wise. Parameters: - df: - vars: - new_colname: - imputation: - na_rm: - weight: - value: - group: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[sum_vars]     B --> C[Output]         D0[df] --> B     A --> D0     D1[vars] --> B     A --> D1     D2[new_colname] --> B     A --> D2     D3[imputation] --> B     A --> D3     D4[na_rm] --> B     A --> D4     D5[weight] --> B     A --> D5     D6[value] --> B     A --> D6     D7[group] --> B     A --> D7     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/r_package_documentation.html","id":"value_to_sl","dir":"","previous_headings":"","what":"value_to_sl","title":"R Package Documentation","text":"Description: Add value variables skipped Parameters: - df: - var: - undefined: - sl_vars: - sl_value: - suffix: Outputs: - df New/Modified Columns: Returns: specified Function Diagram:","code":"flowchart LR     A[Input] --> B[value_to_sl]     B --> C[Output]         D0[df] --> B     A --> D0     D1[var] --> B     A --> D1     D2[undefined] --> B     A --> D2     D3[sl_vars] --> B     A --> D3     D4[sl_value] --> B     A --> D4     D5[suffix] --> B     A --> D5     B --> E0[df]     E0 --> C"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_access_to_phone_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Access to phone and coverage — add_access_to_phone_best","title":"Access to phone and coverage — add_access_to_phone_best","text":"add_access_to_phone_best() recodes best type phone accessible household. add_access_to_phone_coverage() recodes coverage network type best type phone owned household.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_access_to_phone_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access to phone and coverage — add_access_to_phone_best","text":"","code":"add_access_to_phone_best(   df,   access_to_phone = \"etc_access_to_phone\",   none = \"none\",   smartphone = \"smartphone\",   feature_phone = \"feature_phone\",   basic_phone = \"basic_phone\",   dnk = \"dnk\",   pnta = \"pnta\",   sep = \"/\" )  add_access_to_phone_coverage(   df,   coverage_network_type = \"etc_coverage_network_type\",   coverage_none = \"no_coverage\",   coverage_no_internet = c(\"only_sms\", \"voice_sms\", \"only_voice\"),   coverage_yes_internet = c(\"voice_sms_internet\", \"only_internet\"),   coverage_undefined = c(\"dnk\", \"pnta\"),   access_to_phone_best = \"etc_access_to_phone_best\",   access_to_phone_none = \"none\",   access_to_basic_phone = \"basic_phone\",   access_to_feature_phone = \"feature_phone\",   access_to_smartphone = \"smartphone\",   access_to_undefined = \"undefined\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_access_to_phone_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access to phone and coverage — add_access_to_phone_best","text":"df input data frame access_to_phone name column contains access phone information. none value phone. smartphone value smartphone. feature_phone value feature phone. basic_phone value basic phone. dnk value know. pnta value prefer answer. sep Separator binary columns. coverage_network_type Network coverage column. coverage_none Value coverage. coverage_no_internet Vector values internet. coverage_yes_internet Value yes internet. coverage_undefined Vector values know. access_to_phone_best name column contains access phone information. access_to_phone_none Value phone. access_to_basic_phone Value basic phone. access_to_feature_phone Value feature phone. access_to_smartphone Value smartphone. access_to_undefined Value undefined.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add categories of age — add_age_cat","title":"Add categories of age — add_age_cat","text":"add_age_cat() adds age categories add_age_18_cat() adds age categories dummy variable 18.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add categories of age — add_age_cat","text":"","code":"add_age_cat(   df,   age_col,   breaks = c(seq(0, 115, by = 5), 120),   labels = NULL,   int_undefined = c(-999, 999),   char_undefined = \"undefined\",   new_colname = NULL )  add_age_18_cat(   df,   age_col,   int_undefined = c(-999, 999),   char_undefined = \"undefined\",   new_colname = NULL )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add categories of age — add_age_cat","text":"df dataframe. age_col column name recategorize. breaks vector cut points. labels vector labels. NULL, labels breaks. int_undefined vector values undefined (-999, 999) replace char_undefined. char_undefined character replace int_undefined values, often values corresponding know Pre. new_colname name new column. NULL, adds \"_cat\" age_col (\"_18_cat add_age_18_cat()).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_age_cat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add categories of age — add_age_cat","text":"add_age_18_cat() adds two columns dataframe: one categories (minor, major) one dummy variable 18.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Any barriers to accessing humanitarian assistance encountered — add_barriers_assistance_any","title":"Any barriers to accessing humanitarian assistance encountered — add_barriers_assistance_any","text":"function recodes barriers accessing humanitarian assistance encountered barriers accessing humanitarian assistance type indicator.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Any barriers to accessing humanitarian assistance encountered — add_barriers_assistance_any","text":"","code":"add_barriers_assistance_any(   df,   barriers_assistance = \"aap_barriers_assistance\",   none = \"none\",   pnta = \"pnta\",   dnk = \"dnk\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Any barriers to accessing humanitarian assistance encountered — add_barriers_assistance_any","text":"df input data frame barriers_assistance name column contains information barriers accessing humanitarian assistance. none choice value indicates barriers encountered. pnta value value indicates person prefers answer. dnk value value indicates person know.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_barriers_assistance_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Any barriers to accessing humanitarian assistance encountered — add_barriers_assistance_any","text":"data frame new variable aap_barriers_assistance_any_barrier","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_child_sep_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add child separation categories — add_child_sep_cat","title":"Add child separation categories — add_child_sep_cat","text":"Add child separation categories","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_child_sep_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add child separation categories — add_child_sep_cat","text":"","code":"add_child_sep_cat(   df,   child_sep = \"prot_child_sep\",   child_sep_yes = \"yes\",   child_sep_no = \"no\",   child_sep_undefined = c(\"pnta\", \"dnk\"),   child_sep_reason = \"prot_child_sep_reason\",   child_sep_reason_non_severe = c(\"left_study\"),   child_sep_reason_severe = c(\"left_employment\", \"left_married\"),   child_sep_reason_very_severe = c(\"left_armed_groups\", \"kidnapped\", \"missing\",     \"detained\", \"stayed_in_origin\", \"separated_displacement\"),   child_sep_reason_undefined = c(\"other\", \"dnk\", \"pnta\"),   sep = \"/\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_child_sep_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add child separation categories — add_child_sep_cat","text":"df data frame. child_sep Child separation yes/question. child_sep_yes Value yes. child_sep_no Value . child_sep_undefined Vector undefined responses. child_sep_reason Follow-question reasons child separation. child_sep_reason_non_severe Values non-severe reasons. child_sep_reason_severe Values severe reasons. child_sep_reason_very_severe Values severe reasons. child_sep_reason_undefined Values undefined reasons. sep Separator child_sep_reason columns.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_edu.html","id":null,"dir":"Reference","previous_headings":"","what":"Education sectoral composite - add score and dummy for in need — add_comp_edu","title":"Education sectoral composite - add score and dummy for in need — add_comp_edu","text":"Education sectoral composite - add score dummy need","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_edu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Education sectoral composite - add score and dummy for in need — add_comp_edu","text":"","code":"add_comp_edu(   df,   schooling_age_n = \"edu_schooling_age_n\",   no_access_n = \"edu_no_access_n\",   barrier_protection_n = \"edu_barrier_protection_n\",   occupation_n = \"edu_disrupted_occupation_n\",   hazards_n = \"edu_disrupted_hazards_n\",   displaced_n = \"edu_disrupted_displaced_n\",   teacher_n = \"edu_disrupted_teacher_n\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_edu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Education sectoral composite - add score and dummy for in need — add_comp_edu","text":"df data frame. schooling_age_n Column name number children schooling age. no_access_n Column name number children access education. barrier_protection_n Column name number children barriers protection. occupation_n Column name number children disrupted education due school occupied armed groups hazards_n Column name number children disrupted education due hazards. displaced_n Column name number children disrupted education due recent displacement. teacher_n Column name number children disrupted education due teachers' absence.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_foodsec.html","id":null,"dir":"Reference","previous_headings":"","what":"Food security sectoral composite - add score and dummy for in need — add_comp_foodsec","title":"Food security sectoral composite - add score and dummy for in need — add_comp_foodsec","text":"Food security sectoral composite - add score dummy need","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_foodsec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Food security sectoral composite - add score and dummy for in need — add_comp_foodsec","text":"","code":"add_comp_foodsec(   df,   fc_phase = \"fsl_fc_phase\",   fc_phase_levels = c(\"Phase 1 FC\", \"Phase 2 FC\", \"Phase 3 FC\", \"Phase 4 FC\",     \"Phase 5 FC\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_foodsec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Food security sectoral composite - add score and dummy for in need — add_comp_foodsec","text":"df data frame. fc_phase Column name food security phase. fc_phase_levels Levels food security phase.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_health.html","id":null,"dir":"Reference","previous_headings":"","what":"Health composite - add score and dummy for in need — add_comp_health","title":"Health composite - add score and dummy for in need — add_comp_health","text":"Health composite - add score dummy need","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_health.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Health composite - add score and dummy for in need — add_comp_health","text":"","code":"add_comp_health(   df,   ind_healthcare_needed_no_n = \"health_ind_healthcare_needed_no_n\",   ind_healthcare_needed_yes_unmet_n = \"health_ind_healthcare_needed_yes_unmet_n\",   ind_healthcare_needed_yes_met_n = \"health_ind_healthcare_needed_yes_met_n\",   wgq_dis = FALSE,   ind_healthcare_needed_no_wgq_dis_n = \"health_ind_healthcare_needed_no_wgq_dis_n\",   ind_healthcare_needed_yes_unmet_wgq_dis_n =     \"health_ind_healthcare_needed_yes_unmet_wgq_dis_n\",   ind_healthcare_needed_yes_met_wgq_dis_n =     \"health_ind_healthcare_needed_yes_met_wgq_dis_n\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_health.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Health composite - add score and dummy for in need — add_comp_health","text":"df data frame. ind_healthcare_needed_no_n Column name number individuals need access healthcare. ind_healthcare_needed_yes_unmet_n Column name number individuals needed access healthcare . ind_healthcare_needed_yes_met_n Column name number individuals needed access healthcare . wgq_dis Logical. TRUE, function consider disability columns. ind_healthcare_needed_no_wgq_dis_n Column name number individuals need access healthcare disability. ind_healthcare_needed_yes_unmet_wgq_dis_n Column name number individuals needed access healthcare disability. ind_healthcare_needed_yes_met_wgq_dis_n Column name number individuals needed access healthcare disability.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":null,"dir":"Reference","previous_headings":"","what":"Protection composite - add score and dummy for in need — add_comp_prot","title":"Protection composite - add score and dummy for in need — add_comp_prot","text":"Protection composite - add score dummy need","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protection composite - add score and dummy for in need — add_comp_prot","text":"","code":"add_comp_prot(   df,   child_sep_cat = \"prot_child_sep_cat\",   child_sep_cat_levels = c(\"none\", \"at_least_one_very_severe\", \"at_least_one_severe\",     \"at_least_one_non_severe\", \"undefined\"),   concern_freq_cope = \"prot_concern_freq_cope\",   concern_freq_displaced = \"prot_concern_freq_displaced\",   concern_hh_freq_kidnapping = \"prot_concern_hh_freq_kidnapping\",   concern_hh_freq_discrimination = \"prot_concern_hh_freq_discrimination\",   concern_levels = c(\"always\", \"several_times\", \"once_or_twice\", \"never\", \"dnk\", \"pnta\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_prot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protection composite - add score and dummy for in need — add_comp_prot","text":"df data frame. child_sep_cat Column name child separation category. child_sep_cat_levels Levels child separation category. concern_freq_cope Column name concern frequency cope. concern_freq_displaced Column name concern frequency displaced. concern_hh_freq_kidnapping Column name concern household frequency kidnapping. concern_hh_freq_discrimination Column name concern household frequency discrimination. concern_levels Levels concern variables.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_snfi.html","id":null,"dir":"Reference","previous_headings":"","what":"SNFI sectoral composite - add score and dummy for in need — add_comp_snfi","title":"SNFI sectoral composite - add score and dummy for in need — add_comp_snfi","text":"SNFI sectoral composite - add score dummy need","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_snfi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNFI sectoral composite - add score and dummy for in need — add_comp_snfi","text":"","code":"add_comp_snfi(   df,   shelter_type_cat = \"snfi_shelter_type_cat\",   shelter_type_cat_levels = c(\"none\", \"inadequate\", \"adequate\", \"undefined\"),   shelter_issue_cat = \"snfi_shelter_issue_cat\",   shelter_issue_cat_levels = c(\"none\", \"7_to_8\", \"4_to_6\", \"1_to_3\", \"undefined\"),   occupancy_cat = \"hlp_occupancy_cat\",   occupancy_cat_levels = c(\"high_risk\", \"medium_risk\", \"low_risk\", \"undefined\"),   fds_cannot_cat = \"snfi_fds_cannot_cat\",   fds_cannot_cat_levels = c(\"4_to_5_tasks\", \"2_to_3_tasks\", \"1_task\", \"none\",     \"undefined\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_snfi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SNFI sectoral composite - add score and dummy for in need — add_comp_snfi","text":"df data frame. shelter_type_cat Column name shelter type. shelter_type_cat_levels Levels shelter type order: none, inadequate, adequate, undefined. shelter_issue_cat Column name shelter issue. shelter_issue_cat_levels Levels shelter issue order: none, 7_to_8, 4_to_6, 1_to_3, undefined. occupancy_cat Column name occupancy. occupancy_cat_levels Levels occupancy order: high_risk, medium_risk, low_risk, undefined. fds_cannot_cat Column name fds . fds_cannot_cat_levels Levels fds . order: 4_to_5_tasks, 2_to_3_tasks, 1_task, none, undefined.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_wash.html","id":null,"dir":"Reference","previous_headings":"","what":"WASH sectoral composite - add score and dummy for in need — add_comp_wash","title":"WASH sectoral composite - add score and dummy for in need — add_comp_wash","text":"WASH sectoral composite - add score dummy need","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_wash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WASH sectoral composite - add score and dummy for in need — add_comp_wash","text":"","code":"add_comp_wash(   df,   setting = \"setting\",   setting_levels = c(\"camp\", \"urban\", \"rural\"),   drinking_water_quantity = \"wash_drinking_water_quantity\",   drinking_water_quantity_levels = c(\"always\", \"often\", \"sometimes\", \"rarely\", \"never\",     \"dnk\", \"pnta\"),   drinking_water_quality_jmp_cat = \"wash_drinking_water_quality_jmp_cat\",   drinking_water_quality_jmp_cat_levels = c(\"surface_water\", \"unimproved\", \"limited\",     \"basic\", \"safely_managed\", \"undefined\"),   sanitation_facility_jmp_cat = \"wash_sanitation_facility_jmp_cat\",   sanitation_facility_jmp_cat_levels = c(\"open_defecation\", \"unimproved\", \"limited\",     \"basic\", \"safely_managed\", \"undefined\"),   sanitation_facility_cat = \"wash_sanitation_facility_cat\",   sanitation_facility_cat_levels = c(\"none\", \"unimproved\", \"improved\", \"undefined\"),   sanitation_facility_n_ind = \"wash_sharing_sanitation_facility_n_ind\",   sanitation_facility_n_ind_levels = c(\"50_and_above\", \"20_to_49\", \"19_and_below\"),   handwashing_facility_jmp_cat = \"wash_handwashing_facility_jmp_cat\",   handwashing_facility_jmp_cat_levels = c(\"no_facility\", \"limited\", \"basic\", \"undefined\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_comp_wash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WASH sectoral composite - add score and dummy for in need — add_comp_wash","text":"df data frame. setting Column name setting. setting_levels Levels setting order: camp, rural, urban. drinking_water_quantity Column name drinking water quantity. drinking_water_quantity_levels Levels drinking water quantity. drinking_water_quality_jmp_cat Column name drinking water quality JMP category. drinking_water_quality_jmp_cat_levels Levels drinking water quality JMP category. sanitation_facility_jmp_cat Column name sanitation facility JMP category. sanitation_facility_jmp_cat_levels Levels sanitation facility JMP category. sanitation_facility_cat Column name sanitation facility category. sanitation_facility_cat_levels Levels sanitation facility category. sanitation_facility_n_ind Column name number individuals sharing sanitation facility. sanitation_facility_n_ind_levels Levels number individuals sharing sanitation facility. handwashing_facility_jmp_cat Column name handwashing facility JMP category. handwashing_facility_jmp_cat_levels Levels handwashing facility JMP category.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_drinking_water_source_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Drinking water source recoding — add_drinking_water_source_cat","title":"Drinking water source recoding — add_drinking_water_source_cat","text":"add_drinking_water_source_cat() recodes types water sources, add_drinking_water_time_cat() adds categorical time fetch water, add_drinking_water_time_threshold_cat() according chosen threshold. Finally, add_drinking_water_quality_jmp_cat recodes water source time fetch water joint JMP category.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_drinking_water_source_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drinking water source recoding — add_drinking_water_source_cat","text":"","code":"add_drinking_water_source_cat(   df,   drinking_water_source = \"wash_drinking_water_source\",   improved = c(\"piped_dwelling\", \"piped_compound\", \"piped_neighbour\", \"tap\", \"borehole\",     \"protected_well\", \"protected_spring\", \"rainwater_collection\", \"tank_truck\",     \"cart_tank\", \"kiosk\", \"bottled_water\", \"sachet_water\"),   unimproved = c(\"unprotected_well\", \"unprotected_spring\"),   surface_water = \"surface_water\",   undefined = c(\"dnk\", \"pnta\", \"other\") )  add_drinking_water_time_cat(   df,   drinking_water_time_yn = \"wash_drinking_water_time_yn\",   water_on_premises = \"water_on_premises\",   number_minutes = \"number_minutes\",   dnk = \"dnk\",   undefined = \"pnta\",   drinking_water_time_int = \"wash_drinking_water_time_int\",   max = 600,   drinking_water_time_sl = \"wash_drinking_water_time_sl\",   sl_under_30_min = \"under_30_min\",   sl_30min_1hr = \"30min_1hr\",   sl_more_than_1hr = \"more_than_1hr\",   sl_undefined = c(\"dnk\", \"pnta\"),   drinking_water_source = \"wash_drinking_water_source\",   skipped_drinking_water_source_premises = \"piped_dwelling\",   skipped_drinking_water_source_undefined = c(\"dnk\", \"pnta\") )  add_drinking_water_time_threshold_cat(   df,   drinking_water_time_cat = \"wash_drinking_water_time_cat\",   premises = \"premises\",   under_30min = c(\"under_30_min\", \"30min_1hr\"),   above_30min = \"more_than_1hr\",   undefined = \"undefined\" )  add_drinking_water_quality_jmp_cat(   df,   drinking_water_source_cat = \"wash_drinking_water_source_cat\",   drinking_water_source_cat_levels = c(\"improved\", \"unimproved\", \"surface_water\",     \"undefined\"),   drinking_water_time_30min_cat = \"wash_drinking_water_time_30min_cat\",   drinking_water_time_30min_cat_levels = c(\"premises\", \"under_30min\", \"above_30min\",     \"undefined\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_drinking_water_source_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drinking water source recoding — add_drinking_water_source_cat","text":"df data frame. drinking_water_source Component column: Water source types. improved Character vector responses codes, \"Protected well\" \"Public tap\", e.g., c(\"protected_well\", \"public_tap\"). unimproved Character vector responses codes, \"Unprotected well\" \"Unprotected spring\", e.g., c(\"unprotected_well\", \"unprotected_spring\"). surface_water Character vector responses codes, \"Lake\" \"River, e.g., c(\"lake\", \"river\"). undefined Character vector responses codes undefined information, e.g. \"Prefer answer\". drinking_water_time_yn Component column: Time fetch water, scoping question. water_on_premises Character vector responses codes water premises. number_minutes Character vector responses codes number minutes. dnk Character vector responses codes \"know\". drinking_water_time_int Component column: Time fetch water, integer. max Integer, maximum value time fetch water. drinking_water_time_sl Component column: Time fetch water, simple choice. sl_under_30_min Response code 30 minutes. sl_30min_1hr Response code 30 minutes 1 hour. sl_more_than_1hr Response code 1 hour. sl_undefined Character vector responses codes undefined information, e.g. \"know\" \"Prefer answer\". skipped_drinking_water_source_premises Character vector responses codes skipped water source premises, e.g. \"Piped dwelling\". skipped_drinking_water_source_undefined Character vector responses codes skipped water source undefined, e.g. \"know\" \"Prefer answer\". drinking_water_time_cat Component column: Time fetch water, recoded categories. premises Character vector responses codes water premises. under_30min Character vector responses codes 30 min. above_30min Character vector responses codes 30 min. drinking_water_source_cat Component column: Water source categories. drinking_water_source_cat_levels Character vector water source categories order: Improved, Unimproved, Surface water, Undefined. drinking_water_time_30min_cat Component column: Time fetch water, recoded categories. drinking_water_time_30min_cat_levels Character vector time fetch water categories order: Premises, 30 min, 30 min, Undefined.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_freq_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank top 3 frequent expenditure types — add_expenditure_type_freq_rank","title":"Rank top 3 frequent expenditure types — add_expenditure_type_freq_rank","text":"Rank top 3 frequent expenditure types","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_freq_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank top 3 frequent expenditure types — add_expenditure_type_freq_rank","text":"","code":"add_expenditure_type_freq_rank(   df,   expenditure_freq_types = c(\"cm_expenditure_frequent_food\",     \"cm_expenditure_frequent_rent\", \"cm_expenditure_frequent_water\",     \"cm_expenditure_frequent_nfi\", \"cm_expenditure_frequent_utilitiues\",     \"cm_expenditure_frequent_fuel\", \"cm_expenditure_frequent_transportation\",     \"cm_expenditure_frequent_communication\", \"cm_expenditure_frequent_other\"),   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_freq_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank top 3 frequent expenditure types — add_expenditure_type_freq_rank","text":"df data frame. expenditure_freq_types character vector. names columns contain amount frequent expenditures types. id_col name column contains unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank top 3 infrequent expenditure types — add_expenditure_type_infreq_rank","title":"Rank top 3 infrequent expenditure types — add_expenditure_type_infreq_rank","text":"Rank top 3 infrequent expenditure types","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank top 3 infrequent expenditure types — add_expenditure_type_infreq_rank","text":"","code":"add_expenditure_type_infreq_rank(   df,   expenditure_infreq_types = c(\"cm_expenditure_infrequent_shelter\",     \"cm_expenditure_infrequent_nfi\", \"cm_expenditure_infrequent_health\",     \"cm_expenditure_infrequent_education\", \"cm_expenditure_infrequent_debt\",     \"cm_expenditure_infrequent_other\"),   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_infreq_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank top 3 infrequent expenditure types — add_expenditure_type_infreq_rank","text":"df data frame. expenditure_infreq_types character vector. names columns contain amount infrequent expenditures types. id_col name column contains unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_expenditure_type_prop_freq","title":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_expenditure_type_prop_freq","text":"Add frequent expenditure type amount proportions total frequent expenditure","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_expenditure_type_prop_freq","text":"","code":"add_expenditure_type_prop_freq(   df,   cm_expenditure_frequent_food = \"cm_expenditure_frequent_food\",   cm_expenditure_frequent_rent = \"cm_expenditure_frequent_rent\",   cm_expenditure_frequent_water = \"cm_expenditure_frequent_water\",   cm_expenditure_frequent_nfi = \"cm_expenditure_frequent_nfi\",   cm_expenditure_frequent_utilitiues = \"cm_expenditure_frequent_utilitiues\",   cm_expenditure_frequent_fuel = \"cm_expenditure_frequent_fuel\",   cm_expenditure_frequent_transportation = \"cm_expenditure_frequent_transportation\",   cm_expenditure_frequent_communication = \"cm_expenditure_frequent_communication\",   cm_expenditure_frequent_other = \"cm_expenditure_frequent_other\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_expenditure_type_prop_freq","text":"df data frame cm_expenditure_frequent_food Column name food items expenditure amount. cm_expenditure_frequent_rent Column name rent shelter /land expenditure amount. cm_expenditure_frequent_water Column name water expenditure amount sources combined. cm_expenditure_frequent_nfi Column name non-food household items expenditure amount regular purchase, hygiene items, lightbulbs, etc. cm_expenditure_frequent_utilitiues Column name utilities expenditure amount, electricity gas connections, etc. cm_expenditure_frequent_fuel Column name fuel expenditure amount cooking, vehicles, etc. cm_expenditure_frequent_transportation Column name transportation expenditure amount, including vehicle fuel. cm_expenditure_frequent_communication Column name communications expenditure amount, phone airtime, Internet costs, etc. cm_expenditure_frequent_other Column name frequent expenditures.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_infreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add infrequent expenditure type amount as proportions of total infrequent expenditure — add_expenditure_type_prop_infreq","title":"Add infrequent expenditure type amount as proportions of total infrequent expenditure — add_expenditure_type_prop_infreq","text":"Add infrequent expenditure type amount proportions total infrequent expenditure","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_infreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add infrequent expenditure type amount as proportions of total infrequent expenditure — add_expenditure_type_prop_infreq","text":"","code":"add_expenditure_type_prop_infreq(   df,   cm_expenditure_infrequent_shelter = \"cm_expenditure_infrequent_shelter\",   cm_expenditure_infrequent_nfi = \"cm_expenditure_infrequent_nfi\",   cm_expenditure_infrequent_health = \"cm_expenditure_infrequent_health\",   cm_expenditure_infrequent_education = \"cm_expenditure_infrequent_education\",   cm_expenditure_infrequent_debt = \"cm_expenditure_infrequent_debt\",   cm_expenditure_infrequent_other = \"cm_expenditure_infrequent_other\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_prop_infreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add infrequent expenditure type amount as proportions of total infrequent expenditure — add_expenditure_type_prop_infreq","text":"df data frame cm_expenditure_infrequent_shelter Column name shelter maintenance repair expenditure amount. cm_expenditure_infrequent_nfi Column containing expenditure amount non-food household items infrequent purchase, blankets, cooking pots, clothing, etc. cm_expenditure_infrequent_health Column name health-related expenditures, healthcare, medicine, etc. cm_expenditure_infrequent_education Column name education-related expenditures, school fees, supplies, uniforms, etc. cm_expenditure_infrequent_debt Column containing expenditure amount debt repayment. cm_expenditure_infrequent_other Column name infrequent expenditures.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add zero when the frequent expenditure type was skipped Note:Frequent expenditure = 30-day recall period — add_expenditure_type_zero_freq","title":"Add zero when the frequent expenditure type was skipped Note:Frequent expenditure = 30-day recall period — add_expenditure_type_zero_freq","text":"Add zero frequent expenditure type skipped Note:Frequent expenditure = 30-day recall period","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add zero when the frequent expenditure type was skipped Note:Frequent expenditure = 30-day recall period — add_expenditure_type_zero_freq","text":"","code":"add_expenditure_type_zero_freq(   df,   expenditure_freq = \"cm_expenditure_frequent\",   none = \"none\",   undefined = c(\"dnk\", \"pnta\"),   expenditure_freq_types = c(\"cm_expenditure_frequent_food\",     \"cm_expenditure_frequent_rent\", \"cm_expenditure_frequent_water\",     \"cm_expenditure_frequent_nfi\", \"cm_expenditure_frequent_utilitiues\",     \"cm_expenditure_frequent_fuel\", \"cm_expenditure_frequent_transportation\",     \"cm_expenditure_frequent_communication\", \"cm_expenditure_frequent_other\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add zero when the frequent expenditure type was skipped Note:Frequent expenditure = 30-day recall period — add_expenditure_type_zero_freq","text":"df data frame. expenditure_freq character string. name column contains frequent expenditures. none value expenditure. undefined character vector. values indicate frequent expenditures type skipped. expenditure_freq_types character vector. names columns contain amount frequent expenditures types.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_infreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Add zero when the infrequent expenditure type was skipped Note: Infrequent expenditure = 6-month recall period — add_expenditure_type_zero_infreq","title":"Add zero when the infrequent expenditure type was skipped Note: Infrequent expenditure = 6-month recall period — add_expenditure_type_zero_infreq","text":"Add zero infrequent expenditure type skipped Note: Infrequent expenditure = 6-month recall period","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_infreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add zero when the infrequent expenditure type was skipped Note: Infrequent expenditure = 6-month recall period — add_expenditure_type_zero_infreq","text":"","code":"add_expenditure_type_zero_infreq(   df,   expenditure_infreq = \"cm_expenditure_frequent\",   none = \"none\",   undefined = c(\"dnk\", \"pnta\"),   expenditure_infreq_types = c(\"cm_expenditure_infrequent_shelter\",     \"cm_expenditure_infrequent_nfi\", \"cm_expenditure_infrequent_health\",     \"cm_expenditure_infrequent_education\", \"cm_expenditure_infrequent_debt\",     \"cm_expenditure_infrequent_other\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_expenditure_type_zero_infreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add zero when the infrequent expenditure type was skipped Note: Infrequent expenditure = 6-month recall period — add_expenditure_type_zero_infreq","text":"df data frame. expenditure_infreq character string. name column contains infrequent expenditures. none value expenditure. undefined character vector. values indicate infrequent expenditures type skipped. expenditure_infreq_types character vector. names columns contain amount infrequent expenditures types.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_fds_cannot_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add functional domestic space tasks categories — add_fds_cannot_cat","title":"Add functional domestic space tasks categories — add_fds_cannot_cat","text":"Add functional domestic space tasks categories","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_fds_cannot_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add functional domestic space tasks categories — add_fds_cannot_cat","text":"","code":"add_fds_cannot_cat(   df,   fds_cooking = \"snfi_fds_cooking\",   fds_cooking_cannot = \"no_cannot\",   fds_cooking_can_issues = \"yes_issues\",   fds_cooking_can_no_issues = \"yes_no_issues\",   fds_cooking_no_need = \"no_no_need\",   fds_cooking_undefined = c(\"pnta\", \"dnk\"),   fds_sleeping = \"snfi_fds_sleeping\",   fds_sleeping_cannot = \"no_cannot\",   fds_sleeping_can_issues = \"yes_issues\",   fds_sleeping_can_no_issues = \"yes_no_issues\",   fds_sleeping_undefined = c(\"pnta\", \"dnk\"),   fds_storing = \"snfi_fds_storing\",   fds_storing_cannot = \"no_cannot\",   fds_storing_can_issues = \"yes_issues\",   fds_storing_can_no_issues = \"yes_no_issues\",   fds_storing_undefined = c(\"pnta\", \"dnk\"),   fds_personal_hygiene = \"snfi_fds_personal_hygiene\",   fds_personal_hygiene_cannot = \"no_cannot\",   fds_personal_hygiene_can_issues = \"yes_issues\",   fds_personal_hygiene_can_no_issues = \"yes_no_issues\",   fds_personal_hygiene_undefined = c(\"pnta\", \"dnk\"),   lighting_source = \"energy_lighting_source\",   lighting_source_none = \"none\",   lighting_source_undefined = c(\"pnta\", \"dnk\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_fds_cannot_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add functional domestic space tasks categories — add_fds_cannot_cat","text":"df data frame fds_cooking Column name cooking tasks fds_cooking_cannot Value perform cooking tasks fds_cooking_can_issues Value can perform cooking tasks issues fds_cooking_can_no_issues Value can perform cooking tasks without issues fds_cooking_no_need Value need perform cooking tasks fds_cooking_undefined Vector undefined responses fds_sleeping Column name sleeping tasks fds_sleeping_cannot Value perform sleeping tasks fds_sleeping_can_issues Value can perform sleeping tasks issues fds_sleeping_can_no_issues Value can perform sleeping tasks without issues fds_sleeping_undefined Vector undefined responses fds_storing Column name storing tasks fds_storing_cannot Value perform storing tasks fds_storing_can_issues Value can perform storing tasks issues fds_storing_can_no_issues Value can perform storing tasks without issues fds_storing_undefined Vector undefined responses fds_personal_hygiene Column name personal hygiene tasks fds_personal_hygiene_cannot Value perform personal hygiene tasks fds_personal_hygiene_can_issues Value can perform personal hygiene tasks issues fds_personal_hygiene_can_no_issues Value can perform personal hygiene tasks without issues fds_personal_hygiene_undefined Vector undefined responses lighting_source Column name lighting source lighting_source_none Value lighting source lighting_source_undefined Vector undefined responses","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_handwashing_facility_cat","title":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_handwashing_facility_cat","text":"Add frequent expenditure type amount proportions total frequent expenditure","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_handwashing_facility_cat","text":"","code":"add_handwashing_facility_cat(   df,   survey_modality = \"survey_modality\",   survey_modality_in_person = c(\"in_person\"),   survey_modality_remote = c(\"remote\"),   facility = \"wash_handwashing_facility\",   facility_yes = \"available\",   facility_no = \"none\",   facility_no_permission = \"no_permission\",   facility_undefined = \"other\",   facility_observed_water = \"wash_handwashing_facility_observed_water\",   facility_observed_water_yes = \"water_available\",   facility_observed_water_no = \"water_not_available\",   facility_observed_soap = \"wash_handwashing_facility_observed_soap\",   facility_observed_soap_yes = \"soap_available\",   facility_observed_soap_no = \"soap_not_available\",   facility_observed_soap_alternative = \"alternative_available\",   facility_reported = \"wash_handwashing_facility_reported\",   facility_reported_yes = c(\"fixed_dwelling\", \"fixed_yard\", \"mobile\"),   facility_reported_no = c(\"none\"),   facility_reported_undefined = c(\"other\", \"dnk\", \"pnta\"),   facility_reported_no_permission_soap = \"wash_soap_observed\",   facility_reported_no_permission_soap_yes = c(\"yes_soap_shown\", \"yes_soap_not_shown\"),   facility_reported_no_permission_soap_no = \"no\",   facility_reported_no_permission_soap_undefined = c(\"dnk\", \"pnta\"),   facility_reported_no_permission_soap_type = \"wash_soap_observed_type\",   facility_reported_no_permission_soap_type_yes = c(\"soap\", \"detergent\"),   facility_reported_no_permission_soap_type_no = \"ash_mud_sand\",   facility_reported_no_permission_soap_type_undefined = c(\"other\", \"dnk\", \"pnta\"),   facility_reported_remote_soap = \"wash_soap_reported\",   facility_reported_remote_soap_yes = \"yes\",   facility_reported_remote_soap_no = \"no\",   facility_reported_remote_soap_undefined = c(\"dnk\", \"pnta\"),   facility_reported_remote_soap_type = \"wash_soap_reported_type\",   facility_reported_remote_soap_type_yes = c(\"soap\", \"detergent\"),   facility_reported_remote_soap_type_no = c(\"ash_mud_sand\"),   facility_reported_remote_soap_type_undefined = c(\"other\", \"dnk\", \"pnta\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_handwashing_facility_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add frequent expenditure type amount as proportions of total frequent expenditure — add_handwashing_facility_cat","text":"df Data frame containing survey data. survey_modality Column name survey modality - e.g., \"survey_modality\". survey_modality_in_person Options -person survey modality. survey_modality_remote Options remote survey modality. facility Column name observed handwashing facility - e.g., \"wash_handwashing_facility\". facility_yes Response code yes. facility_no Response code . facility_no_permission Response code permission. facility_undefined Response code undefined. facility_observed_water Column name observed handwashing facility - e.g., \"wash_handwashing_facility_observed_water\". facility_observed_water_yes Response code yes. facility_observed_water_no Response code . facility_observed_soap Column name observed handwashing facility - e.g., \"wash_handwashing_facility_observed_soap\". facility_observed_soap_yes Response code yes. facility_observed_soap_no Response code . facility_observed_soap_alternative Response code alternative. facility_reported Column name reported handwashing facility. facility_reported_yes Response code yes. facility_reported_no Response code . facility_reported_undefined Response code undefined. facility_reported_no_permission_soap Column name reported handwashing facility. facility_reported_no_permission_soap_yes Response code yes. facility_reported_no_permission_soap_no Response code . facility_reported_no_permission_soap_undefined Response code undefined. facility_reported_no_permission_soap_type Column name type soap reported facility_reported_no_permission_soap_type_yes Response code yes. facility_reported_no_permission_soap_type_no Response code . facility_reported_no_permission_soap_type_undefined Response code undefined. facility_reported_remote_soap Column name availability soap reported remote cases. facility_reported_remote_soap_yes Response code yes. facility_reported_remote_soap_no Response code . facility_reported_remote_soap_undefined Response code undefined. facility_reported_remote_soap_type Column name type soap reported remote cases. facility_reported_remote_soap_type_yes Response code yes. facility_reported_remote_soap_type_no Response code . facility_reported_remote_soap_type_undefined Response code undefined.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":null,"dir":"Reference","previous_headings":"","what":"Head of household final values (from respondent skip logic) — add_hoh_final","title":"Head of household final values (from respondent skip logic) — add_hoh_final","text":"Head household final values (respondent skip logic)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Head of household final values (from respondent skip logic) — add_hoh_final","text":"","code":"add_hoh_final(   df,   resp_hoh_yn = \"resp_hoh_yn\",   yes = \"yes\",   no = \"no\",   hoh_gender = \"hoh_gender\",   hoh_age = \"hoh_age\",   resp_gender = \"resp_gender\",   resp_age = \"resp_age\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Head of household final values (from respondent skip logic) — add_hoh_final","text":"df input dataframe. resp_hoh_yn column name whether respondent head household (hoh) yes/indicator. yes value 'yes' 'resp_hoh_yn' column. value '' 'resp_hoh_yn' column. hoh_gender column name household (hoh) gender. hoh_age column name household (hoh) age. resp_gender column name respondent (resp) gender. resp_age column name respondent (resp) age.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_hoh_final.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Head of household final values (from respondent skip logic) — add_hoh_final","text":"modified dataframe updated hoh_gender hoh_age columns.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Add income source amount as proportions of total income — add_income_source_prop","title":"Add income source amount as proportions of total income — add_income_source_prop","text":"Add income source amount proportions total income","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add income source amount as proportions of total income — add_income_source_prop","text":"","code":"add_income_source_prop(   df,   income_souce_salaried_n = \"cm_income_source_salaried_n\",   income_source_casual_n = \"cm_income_source_casual_n\",   income_source_own_business_n = \"cm_income_source_own_business_n\",   income_source_own_production_n = \"cm_income_source_own_production_n\",   income_source_social_benefits_n = \"cm_income_source_social_benefits_n\",   income_source_rent_n = \"cm_income_source_rent_n\",   income_source_remittances_n = \"cm_income_source_remittances_n\",   income_source_assistance_n = \"cm_income_source_assistance_n\",   income_source_support_friends_n = \"cm_income_source_support_friends_n\",   income_source_donation_n = \"cm_income_source_donation_n\",   income_source_other_n = \"cm_income_source_other_n\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add income source amount as proportions of total income — add_income_source_prop","text":"df data frame income_souce_salaried_n Column name salaried income amount. income_source_casual_n Column name casual income amount. income_source_own_business_n Column name business income amount. income_source_own_production_n Column name production income amount. income_source_social_benefits_n Column name social benefits income amount. income_source_rent_n Column name rent income amount. income_source_remittances_n Column name remittances income amount. income_source_assistance_n Column name assistance income amount. income_source_support_friends_n Column name support friends income amount. income_source_donation_n Column name donation income amount. income_source_other_n Column name income amount.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Add income source categories, count, and ranking top 3 — add_income_source_rank","title":"Add income source categories, count, and ranking top 3 — add_income_source_rank","text":"Add income source categories, count, ranking top 3","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add income source categories, count, and ranking top 3 — add_income_source_rank","text":"","code":"add_income_source_rank(   df,   emergency = c(\"cm_income_source_assistance_n\", \"cm_income_source_support_friends_n\",     \"cm_income_source_donation_n\"),   unstable = c(\"cm_income_source_casual_n\", \"cm_income_source_social_benefits_n\",     \"cm_income_source_rent_n\", \"cm_income_source_remittances_n\"),   stable = c(\"cm_income_source_salaried_n\", \"cm_income_source_own_business_n\",     \"cm_income_source_own_production_n\"),   other = \"cm_income_source_other_n\",   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add income source categories, count, and ranking top 3 — add_income_source_rank","text":"df data frame. emergency names columns contain emergency income sources. unstable names columns contain unstable income sources. stable names columns contain stable income sources. name column contains income sources. id_col name column contains unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_zero_to_sl.html","id":null,"dir":"Reference","previous_headings":"","what":"Add zero when the income source was skipped — add_income_source_zero_to_sl","title":"Add zero when the income source was skipped — add_income_source_zero_to_sl","text":"Add zero income source skipped","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_zero_to_sl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add zero when the income source was skipped — add_income_source_zero_to_sl","text":"","code":"add_income_source_zero_to_sl(   df,   income_source = \"cm_income_source\",   none = \"none\",   undefined = c(\"dnk\", \"pnta\"),   income_sources = c(\"cm_income_source_salaried_n\", \"cm_income_source_casual_n\",     \"cm_income_source_own_business_n\", \"cm_income_source_own_production_n\",     \"cm_income_source_social_benefits_n\", \"cm_income_source_rent_n\",     \"cm_income_source_remittances_n\", \"cm_income_source_assistance_n\",     \"cm_income_source_support_friends_n\", \"cm_income_source_donation_n\",     \"cm_income_source_other_n\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_income_source_zero_to_sl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add zero when the income source was skipped — add_income_source_zero_to_sl","text":"df data frame. income_source character string. name column contains income source. none character string. value indicates income source skipped. undefined character vector. values indicate income source skipped. income_sources character vector. names columns contain amount income sources.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_age_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a dummy variable for an age class — add_loop_age_dummy","title":"Add a dummy variable for an age class — add_loop_age_dummy","text":"add_loop_age_dummy() adds dummy variable age class demographics loop. add_loop_age_dummy_to_main() adds sum age dummy variable main dataset. add_loop_age_gender_dummy() add_loop_age_gender_dummy_to_main() gender dimension included.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_age_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a dummy variable for an age class — add_loop_age_dummy","text":"","code":"add_loop_age_dummy(   loop,   ind_age = \"ind_age\",   lb = 5,   ub = 18,   new_colname = NULL )  add_loop_age_dummy_to_main(   main,   loop,   ind_age_dummy = \"ind_age_5_18\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\",   new_colname = NULL )  add_loop_age_gender_dummy(   loop,   ind_age = \"ind_age\",   lb = 5,   ub = 18,   ind_gender = \"ind_gender\",   gender = \"female\",   new_colname = NULL )  add_loop_age_gender_dummy_to_main(   main,   loop,   ind_age_gender_dummy = \"ind_age_female_5_18\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\",   new_colname = NULL )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_age_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a dummy variable for an age class — add_loop_age_dummy","text":"loop data frame individual-level data. ind_age Column name individual age. lb Lower bound age class. ub Upper bound age class. new_colname New column name dummy variable. NULL, default \"ind_age_lb_ub\" \"ind_dummy_n\" \"ind_age_gender_lb_ub\" \"ind_age_gender_dummy_n\" depending function used. main data frame household-level data. ind_age_dummy Column name dummy variable age class. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset. ind_gender Column name individual gender. gender Response options interest, e.g. \"Female\". ind_age_gender_dummy Column name dummy variable age-gender class.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_access_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add education access dummy — add_loop_edu_access_d","title":"Add education access dummy — add_loop_edu_access_d","text":"function adds dummy variable (edu_ind_access_d) individual-level dataframe school-aged children, taking 1 child accessed school O otherwise. also adds acces variable (edu_ind_no_access_d).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_access_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add education access dummy — add_loop_edu_access_d","text":"","code":"add_loop_edu_access_d(   loop,   ind_access = \"edu_access\",   yes = \"yes\",   no = \"no\",   pnta = \"pnta\",   dnk = \"dnk\",   ind_schooling_age_d = \"edu_ind_schooling_age_d\" )  add_loop_edu_access_d_to_main(   main,   loop,   ind_access_d = \"edu_ind_access_d\",   ind_no_access_d = \"edu_ind_no_access_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_access_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add education access dummy — add_loop_edu_access_d","text":"loop data frame individual-level data loop. ind_access Column name education access. yes Value yes.. Value . pnta Value applicable. dnk Value know. ind_schooling_age_d Column name dummy variable schooling age. main data frame household-level data. ind_access_d Column name education access (binary). ind_no_access_d Column name education access (binary). id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_barrier_protection_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a variable for child protection barriers to education — add_loop_edu_barrier_protection_d","title":"Add a variable for child protection barriers to education — add_loop_edu_barrier_protection_d","text":"add_loop_edu_barrier_protection_d adds dummy variable individual-level data frame school-aged children, taking 1 child faces protection barrier 0 otherwise. add_loop_edu_barrier_protection_d_to_main aggregates dummy variable household-level data frame.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_barrier_protection_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a variable for child protection barriers to education — add_loop_edu_barrier_protection_d","text":"","code":"add_loop_edu_barrier_protection_d(   loop,   barriers = \"edu_barrier\",   protection_issues = c(\"protection_at_school\", \"protection_travel_school\",     \"child_work_home\", \"child_work_outside\", \"child_armed_group\", \"child_marriage\",     \"ban\", \"enroll_lack_documentation\", \"discrimination\"),   ind_schooling_age_d = \"edu_ind_schooling_age_d\" )  add_loop_edu_barrier_protection_d_to_main(   main,   loop,   ind_barrier_protection_d = \"edu_ind_barrier_protection_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_barrier_protection_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a variable for child protection barriers to education — add_loop_edu_barrier_protection_d","text":"loop data frame individual-level data loop. barriers Column name child protection barrier category. protection_issues Vector protection issues RESPONSE CODES. ind_schooling_age_d Column name dummy variable schooling age. main data frame household-level data. ind_barrier_protection_d Column name dummy variable child protection barrier category. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_disrupted_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add education disruption categories — add_loop_edu_disrupted_d","title":"Add education disruption categories — add_loop_edu_disrupted_d","text":"add_loop_edu_disrupted_d() adds education disruption binaries add_loop_edu_disrupted_d_to_main() adds education disruption summarised binaries category main dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_disrupted_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add education disruption categories — add_loop_edu_disrupted_d","text":"","code":"add_loop_edu_disrupted_d(   df,   occupation = \"edu_disrupted_occupation\",   hazards = \"edu_disrupted_hazards\",   displaced = \"edu_disrupted_displaced\",   teacher = \"edu_disrupted_teacher\",   levels = c(\"yes\", \"no\", \"dnk\", \"pnta\"),   ind_schooling_age_d = \"edu_ind_schooling_age_d\" )  add_loop_edu_disrupted_d_to_main(   main,   loop,   occupation_d = \"edu_disrupted_occupation_d\",   hazards_d = \"edu_disrupted_hazards_d\",   displaced_d = \"edu_disrupted_displaced_d\",   teacher_d = \"edu_disrupted_teacher_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_disrupted_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add education disruption categories — add_loop_edu_disrupted_d","text":"df data frame. occupation Column name occupation disruption. hazards Column name hazards disruption. displaced Column name displaced disruption. teacher Column name teacher disruption. levels Vector levels disruption variables. ind_schooling_age_d Column name dummy variable schooling age class. main data frame household-level data. loop data frame individual-level data. occupation_d Column name dummy variable occupation dimension. hazards_d Column name dummy variable hazards dimension. displaced_d Column name dummy variable displaced dimension. teacher_d Column name dummy variable teacher dimension. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a correct schooling age to the loop — add_loop_edu_ind_age_corrected","title":"Add a correct schooling age to the loop — add_loop_edu_ind_age_corrected","text":"Add correct schooling age loop","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a correct schooling age to the loop — add_loop_edu_ind_age_corrected","text":"","code":"add_loop_edu_ind_age_corrected(   loop,   main,   id_col_loop = \"uuid\",   id_col_main = \"uuid\",   survey_start_date = \"start\",   school_year_start_month = 9,   ind_age = \"ind_age\",   month = NULL )  add_loop_edu_ind_schooling_age_d_to_main(   main,   loop,   ind_schooling_age_d = \"edu_ind_schooling_age_d\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a correct schooling age to the loop — add_loop_edu_ind_age_corrected","text":"loop data frame individual-level data. main data frame household-level data. id_col_loop Column name unique identifier loop dataset. id_col_main Column name unique identifier main dataset. survey_start_date Survey start date column name main. school_year_start_month month school year started. ind_age individual age column. month NULL, integer 1 12 used month data collection households/ ind_schooling_age_d Column name dummy variable schooling age class.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_edu_ind_age_corrected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a correct schooling age to the loop — add_loop_edu_ind_age_corrected","text":"2 new columns: \"edu_ind_age_corrected\" corrected individual age, dummy variable edu_ind_schooling_age_d","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_healthcare_needed_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add healthcare needed category to loop data (incl. WGQ-SS if provided) — add_loop_healthcare_needed_cat","title":"Add healthcare needed category to loop data (incl. WGQ-SS if provided) — add_loop_healthcare_needed_cat","text":"Add healthcare needed category loop data (incl. WGQ-SS provided)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_healthcare_needed_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add healthcare needed category to loop data (incl. WGQ-SS if provided) — add_loop_healthcare_needed_cat","text":"","code":"add_loop_healthcare_needed_cat(   loop,   ind_healthcare_needed = \"health_ind_healthcare_needed\",   ind_healthcare_needed_levels = c(\"no\", \"yes\", \"dnk\", \"pnta\"),   ind_healthcare_received = \"health_ind_healthcare_received\",   ind_healthcare_received_levels = c(\"no\", \"yes\", \"dnk\", \"pnta\"),   wgq_dis = NULL,   ind_age = \"ind_age\" )  add_loop_healthcare_needed_cat_to_main(   main,   loop,   ind_healthcare_needed_no = \"health_ind_healthcare_needed_no\",   ind_healthcare_needed_yes_unmet = \"health_ind_healthcare_needed_yes_unmet\",   ind_healthcare_needed_yes_met = \"health_ind_healthcare_needed_yes_met\",   ind_healthcare_needed_no_wgq_dis = NULL,   ind_healthcare_needed_yes_unmet_wgq_dis = NULL,   ind_healthcare_needed_yes_met_wgq_dis = NULL,   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_healthcare_needed_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add healthcare needed category to loop data (incl. WGQ-SS if provided) — add_loop_healthcare_needed_cat","text":"loop data frame individual-level data. ind_healthcare_needed name variable indicates healthcare needed. ind_healthcare_needed_levels character vector levels ind_healthcare_needed. ind_healthcare_received name variable indicates healthcare received. ind_healthcare_received_levels character vector levels ind_healthcare_received. wgq_dis name variable indicates individual disability (usual cut-offs 3). ind_age name variable indicates age individual. main data frame household-level data. ind_healthcare_needed_no binary variable indicates healthcare needed. ind_healthcare_needed_yes_unmet binary variable indicates healthcare needed unmet. ind_healthcare_needed_yes_met binary variable indicates healthcare needed met. ind_healthcare_needed_no_wgq_dis binary variable indicates healthcare needed individual disability. ind_healthcare_needed_yes_unmet_wgq_dis binary variable indicates healthcare needed unmet individual disability. ind_healthcare_needed_yes_met_wgq_dis binary variable indicates healthcare needed met individual disability. id_col_main column name unique identifier main data frame. id_col_loop column name unique identifier loop data frame.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_wgq_ss.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare dummy variables for each WG-SS component (individual data) — add_loop_wgq_ss","title":"Prepare dummy variables for each WG-SS component (individual data) — add_loop_wgq_ss","text":"add_loop_wgq_ss prepares dummy variables WG-SS component (vision, hearing, mobility, cognition, self-care, communication) levels (difficulty, difficulty, lot difficulty, ) combines sum domains coded level (e.g, wgq_cannot_do_n), disability binary cut-offs variables (wgq_dis_1, wgq_dis_2, wgq_dis_3, wgq_dis_4).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_wgq_ss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare dummy variables for each WG-SS component (individual data) — add_loop_wgq_ss","text":"","code":"add_loop_wgq_ss(   loop,   ind_age = \"ind_age\",   vision = \"wgq_vision\",   hearing = \"wgq_hearing\",   mobility = \"wgq_mobility\",   cognition = \"wgq_cognition\",   self_care = \"wgq_self_care\",   communication = \"wgq_communication\",   no_difficulty = \"no_difficulty\",   some_difficulty = \"some_difficulty\",   lot_of_difficulty = \"lot_of_difficulty\",   cannot_do = \"cannot_do\",   undefined = c(\"dnk\", \"pnta\") )  add_loop_wgq_ss_to_main(   main,   loop,   wgq_dis_4 = \"wgq_dis_4\",   wgq_dis_3 = \"wgq_dis_3\",   wgq_dis_2 = \"wgq_dis_2\",   wgq_dis_1 = \"wgq_dis_1\",   ind_age_above_5 = \"ind_age_above_5\",   id_col_main = \"uuid\",   id_col_loop = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_loop_wgq_ss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare dummy variables for each WG-SS component (individual data) — add_loop_wgq_ss","text":"loop data frame individual-level data. ind_age individual age column. vision Vision component column. hearing Hearing component column. mobility Mobility component column. cognition Cognition component column. self_care Self-care component column. communication Communication component column. no_difficulty Level difficulty. some_difficulty Level difficulty. lot_of_difficulty Level lot difficulty. cannot_do Level . undefined Vector undefined responses, Prefer answer know. main data frame household-level data. wgq_dis_4 Column name disability 4 cut-offs binary. wgq_dis_3 Column name disability 3 cut-offs binary. wgq_dis_2 Column name disability 2 cut-offs binary. wgq_dis_1 Column name disability 1 cut-offs binary. ind_age_above_5 Column name age 5 dummy individual-level dataset. id_col_main Column name unique identifier main dataset. id_col_loop Column name unique identifier loop dataset.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":null,"dir":"Reference","previous_headings":"","what":"Add MSNI - add score and dummy for in need — add_msni","title":"Add MSNI - add score and dummy for in need — add_msni","text":"output data frame 5 new columns. First MSNI-related variables: msni_score, msni_in_need, msni_in_acute_need. two latter used metrics 1 2. Second, number sectoral needs sector_in_need_n sectoral needs profile sector_needs_profile. two used metric 3 4.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add MSNI - add score and dummy for in need — add_msni","text":"","code":"add_msni(   df,   comp_foodsec_score = \"comp_foodsec_score\",   comp_snfi_score = \"comp_snfi_score\",   comp_wash_score = \"comp_wash_score\",   comp_prot_score = \"comp_prot_score\",   comp_health_score = \"comp_health_score\",   comp_edu_score = \"comp_edu_score\",   comp_foodsec_in_need = \"comp_foodsec_in_need\",   comp_snfi_in_need = \"comp_snfi_in_need\",   comp_wash_in_need = \"comp_wash_in_need\",   comp_prot_in_need = \"comp_prot_in_need\",   comp_health_in_need = \"comp_health_in_need\",   comp_edu_in_need = \"comp_edu_in_need\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add MSNI - add score and dummy for in need — add_msni","text":"df data frame. comp_foodsec_score Column name food security composite score. comp_snfi_score Column name SNFI composite score. comp_wash_score Column name WASH composite score. comp_prot_score Column name protection composite score. comp_health_score Column name health composite score. comp_edu_score Column name education composite score. comp_foodsec_in_need Column name food security need. comp_snfi_in_need Column name SNFI need. comp_wash_in_need Column name WASH need. comp_prot_in_need Column name protection need. comp_health_in_need Column name health need. comp_edu_in_need Column name education need.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_msni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add MSNI - add score and dummy for in need — add_msni","text":"data frame 5 new columns.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_occupancy_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the category of occupancy arrangement — add_occupancy_cat","title":"Add the category of occupancy arrangement — add_occupancy_cat","text":"Add category occupancy arrangement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_occupancy_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the category of occupancy arrangement — add_occupancy_cat","text":"","code":"add_occupancy_cat(   df,   occupancy = \"hlp_occupancy\",   high_risk = c(\"no_agreement\"),   medium_risk = c(\"rented\", \"hosted_free\"),   low_risk = c(\"ownership\"),   undefined = c(\"dnk\", \"pnta\", \"other\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_occupancy_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the category of occupancy arrangement — add_occupancy_cat","text":"df data frame. occupancy Component column: Occupancy arrangement. high_risk Character vector high risk occupancy arrangements. medium_risk Character vector medium risk occupancy arrangements. low_risk Character vector low risk occupancy arrangements. undefined Character vector undefined responses codes (e.g. \"Prefer answer\").","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_received_assistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Add received assistance (combined calculation) — add_received_assistance","title":"Add received assistance (combined calculation) — add_received_assistance","text":"Add received assistance (combined calculation)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_received_assistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add received assistance (combined calculation) — add_received_assistance","text":"","code":"add_received_assistance(   df,   received_assistance_12m = \"aap_received_assistance_12m\",   yes = \"yes\",   no = \"no\",   undefined = c(\"dnk\", \"pnta\"),   received_assistance_date = \"aap_received_assistance_date\",   date_past_30d = \"past_30d\",   date_1_3_months = \"1_3_months\",   date_4_6_months = \"4_6_months\",   date_7_12_months = \"7_12_months\",   date_undefined = c(\"dnk\", \"pnta\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_received_assistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add received assistance (combined calculation) — add_received_assistance","text":"df data frame. received_assistance_12m Column name received assistance last 12 months. yes Value yes. Value . undefined Vector undefined responses. received_assistance_date Column name recall period assistance received. date_past_30d Value received assistance past 30 days. date_1_3_months Value received assistance last 1-3 months. date_4_6_months Value received assistance last 4-6 months. date_7_12_months Value received assistance last 7-12 months. date_undefined Vector undefined responses date received assistance.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_sanitation_facility_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitation facility classification — add_sanitation_facility_cat","title":"Sanitation facility classification — add_sanitation_facility_cat","text":"add_sanitation_facility_cat() recodes types sanitation facilities, add_sharing_sanitation_facility_cat() recodes sharing status sanitation facility, add_sanitation_facility_jmp_cat() combines previous two functions recode sanitation facility JMP classification. Finally, add_sharing_sanitation_facility_n_ind() recodes number individuals sharing sanitation facility.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_sanitation_facility_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitation facility classification — add_sanitation_facility_cat","text":"","code":"add_sanitation_facility_cat(   df,   sanitation_facility = \"wash_sanitation_facility\",   improved = c(\"flush_piped_sewer\", \"flush_septic_tank\", \"flush_pit_latrine\",     \"flush_dnk_where\", \"pit_latrine_slab\", \"twin_pit_latrine_slab\",     \"ventilated_pit_latrine_slab\", \"container\", \"compost\"),   unimproved = c(\"flush_open_drain\", \"flush_elsewhere\", \"pit_latrine_wo_slab\", \"bucket\",     \"hanging_toilet\", \"plastic_bag\"),   none = \"none\",   undefined = c(\"other\", \"dnk\", \"pnta\") )  add_sharing_sanitation_facility_cat(   df,   sharing_sanitation_facility = \"wash_sanitation_facility_sharing_yn\",   yes = \"yes\",   no = \"no\",   undefined = c(\"dnk\", \"pnta\"),   sanitation_facility = \"wash_sanitation_facility\",   skipped_sanitation_facility = NULL )  add_sharing_sanitation_facility_n_ind(   df,   sharing_sanitation_facility_cat = \"wash_sharing_sanitation_facility_cat\",   levels = c(\"shared\", \"not_shared\", \"not_applicable\", \"undefined\"),   sanitation_facility_sharing_n = \"wash_sanitation_facility_sharing_n\",   hh_size = \"hh_size\",   weight = \"weight\" )  add_sanitation_facility_jmp_cat(   df,   sanitation_facility_cat = \"wash_sanitation_facility_cat\",   sanitation_facility_levels = c(\"improved\", \"unimproved\", \"none\", \"undefined\"),   sharing_sanitation_facility_cat = \"wash_sharing_sanitation_facility_cat\",   sharing_sanitation_facility_levels = c(\"shared\", \"not_shared\", \"not_applicable\",     \"undefined\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_sanitation_facility_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitation facility classification — add_sanitation_facility_cat","text":"df data frame. sanitation_facility Component column: Sanitation facility types. improved Character vector responses codes Improved facilities. unimproved Character vector responses codes Unimproved facilities. none Character vector responses codes sanitation facility/Open defecation. undefined Character vector responses codes, fit category, e.g., c(\"dnk\", \"pnta\", \"\"). sharing_sanitation_facility Component column: Number people facility shared. yes Character vector responses codes Yes. Character vector responses codes . skipped_sanitation_facility Character vector responses codes skipped sanitation facility. sharing_sanitation_facility_cat Component column: Sharing status sanitation facility recoded. levels Character vector responses codes, including first following order: Shared, shared, applicable, Undefined. sanitation_facility_sharing_n Component column: number households sharing sanitation facility. hh_size Column household size. weight Column survey weights. sanitation_facility_cat Component column: Sanitation facility types recoded. sanitation_facility_levels Levels: Improved, Unimproved, None, Undefined. sharing_sanitation_facility_levels Levels: Shared, shared, applicable, Undefined.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_issue_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the number of shelter issues and related category — add_shelter_issue_cat","title":"Add the number of shelter issues and related category — add_shelter_issue_cat","text":"Add number shelter issues related category","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_issue_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the number of shelter issues and related category — add_shelter_issue_cat","text":"","code":"add_shelter_issue_cat(   df,   shelter_issue = \"snfi_shelter_issue\",   none = \"none\",   issues = c(\"lack_privacy\", \"lack_space\", \"temperature\", \"ventilation\", \"leak\", \"lock\",     \"lack_lighting\", \"difficulty_move\"),   undefined = c(\"dnk\", \"pnta\", \"other\"),   sep = \"/\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_issue_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the number of shelter issues and related category — add_shelter_issue_cat","text":"df data frame. shelter_issue Component column: Shelter issues. none Response code issue. issues Character vector issues. undefined Character vector undefined responses codes (e.g. \"Prefer answer\"). sep Separator binary columns.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_type_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines both shelter types questions and recodes the type of shelter. — add_shelter_type_cat","title":"Combines both shelter types questions and recodes the type of shelter. — add_shelter_type_cat","text":"Combines shelter types questions recodes type shelter.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_type_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines both shelter types questions and recodes the type of shelter. — add_shelter_type_cat","text":"","code":"add_shelter_type_cat(   df,   shelter_type = \"snfi_shelter_type\",   sl_none = \"none\",   sl_collective_center = \"collective_center\",   sl_undefined = \"pnta\",   shelter_type_individual = \"snfi_shelter_type_individual\",   adequate = c(\"house\", \"apartment\", \"tent\"),   inadequate = c(\"makeshift\", \"unfinished_building\"),   undefined = c(\"pnta\", \"other\", \"dnk\") )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/add_shelter_type_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines both shelter types questions and recodes the type of shelter. — add_shelter_type_cat","text":"df data frame. shelter_type Component column: Shelter type categories. sl_none Character vector responses codes none/sleeping open skipped. sl_collective_center Character vector responses codes collective center skipped. sl_undefined Character vector undefined responses codes (e.g. \"Prefer answer\") skipped. shelter_type_individual Component column: Individual shelter types. adequate Character vector responses codes adequate shelter types. inadequate Character vector responses codes inadequate shelter types. undefined Character vector responses codes undefined shelter types.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement values are not numeric — are_cols_numeric","title":"Stop statement values are not numeric — are_cols_numeric","text":"Stop statement values numeric","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement values are not numeric — are_cols_numeric","text":"","code":"are_cols_numeric(df, cols)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement values are not numeric — are_cols_numeric","text":"df data frame cols vector column names (quoted)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_cols_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement values are not numeric — are_cols_numeric","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement values are not in range — are_values_in_range","title":"Stop statement values are not in range — are_values_in_range","text":"Stop statement values range","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement values are not in range — are_values_in_range","text":"","code":"are_values_in_range(df, cols, lower = 0, upper = 7)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement values are not in range — are_values_in_range","text":"df data frame cols vector column names (quoted) lower Lower bound upper Upper bound","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement values are not in range — are_values_in_range","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement values are not in set — are_values_in_set","title":"Stop statement values are not in set — are_values_in_set","text":"Stop statement values set","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement values are not in set — are_values_in_set","text":"","code":"are_values_in_set(   df,   cols,   set,   main_message = \"All columns must be in the following set: \" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement values are not in set — are_values_in_set","text":"df data frame cols vector column names (quoted) set vector values main_message main message","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/are_values_in_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement values are not in set — are_values_in_set","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/choices_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Some choices sheet, updated — choices_update","title":"Some choices sheet, updated — choices_update","text":"choices sheet, updated","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/choices_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some choices sheet, updated — choices_update","text":"","code":"choices_update"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/choices_update.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some choices sheet, updated — choices_update","text":"tibble","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/count_if_above_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dummy variables and count across if above zero — count_if_above_zero","title":"Create dummy variables and count across if above zero — count_if_above_zero","text":"Create dummy variables count across zero","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/count_if_above_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dummy variables and count across if above zero — count_if_above_zero","text":"","code":"count_if_above_zero(df, vars, new_colname)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/count_if_above_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dummy variables and count across if above zero — count_if_above_zero","text":"df data frame. vars Vector column names. new_colname name new column.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/dummy_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Some MSNA dummy data A list of datasets with ","title":"Some MSNA dummy data A list of datasets with ","text":"MSNA dummy data list datasets \"main\" household-level, \"roster\" demographics, \"edu_ind\" individual education variables, \"health_ind\" individual health variables, \"nut_ind\" individual nutrition variables.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/dummy_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some MSNA dummy data A list of datasets with ","text":"","code":"dummy_raw_data"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/dummy_raw_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some MSNA dummy data A list of datasets with ","text":"list tibbles","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/humind-package.html","id":null,"dir":"Reference","previous_headings":"","what":"humind: Compose MSNA Indicators — humind-package","title":"humind: Compose MSNA Indicators — humind-package","text":"packages provides functions compose usual humanitarian composite indicators related IMPACT Multi-Sector Needs Assessments (MSNAs) food sec indicators (rCSI, LCSI, HHS, FCS), Washington Group Short Set questions, JMP ladders, well specific indicators related MSNI framework.","code":""},{"path":[]},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/humind-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"humind: Compose MSNA Indicators — humind-package","text":"Maintainer: Guillaume Noblet gnoblet@zaclys.net Authors: Laith Abu-Nawwas laith.abu-nawwas@impact-initiatives.org Sunhee Moraes sunhee.moraes@impact-initiatives.org contributors: Raphael Bacot raphael.bacot@impact-initiatives.org [contributor]","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop statement ","title":"Stop statement ","text":"Stop statement \"colnames\" colnames","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop statement ","text":"","code":"if_not_in_stop(df, cols, df_name, arg = NULL)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop statement ","text":"df data frame cols vector column names (quoted) df_name Provide tibble name character string arg Default NULL.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/if_not_in_stop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop statement ","text":"stop statement","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/impute_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing values — impute_value","title":"Impute missing values — impute_value","text":"impute_value() replaces missing values specific value impute_median() replaces missing values (weighted) median variable.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/impute_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing values — impute_value","text":"","code":"impute_value(df, vars, value)  impute_median(df, vars, group = NULL, weighted = FALSE, weight = NULL)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/impute_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing values — impute_value","text":"df dataframe. vars character vector variables replace na . value value replace na . group character vector grouping variables. weighted boolean indicating whether use weighted median . weight weight variable.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/is_in_need.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a dummy variable 'is in need' — is_in_need","title":"Add a dummy variable 'is in need' — is_in_need","text":"is_in_need() function adds new binary variable indicates score 3, means: \"need\", is_in_acute_need() score 4, means: \"acute need\".","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/is_in_need.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a dummy variable 'is in need' — is_in_need","text":"","code":"is_in_need(df, score, new_colname = NULL)  is_in_acute_need(df, score, new_colname = NULL)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/is_in_need.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a dummy variable 'is in need' — is_in_need","text":"df dataframe. score variable containing score 1-5 scale. new_colname name new column. NULL, function create new column name 'score_in_need'.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/loa.html","id":null,"dir":"Reference","previous_headings":"","what":"Some analysis DAP — loa","title":"Some analysis DAP — loa","text":"analysis DAP","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/loa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some analysis DAP — loa","text":"","code":"loa"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/loa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some analysis DAP — loa","text":"tibble","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add categories for a numeric variable — num_cat","title":"Add categories for a numeric variable — num_cat","text":"Add categories numeric variable","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add categories for a numeric variable — num_cat","text":"","code":"num_cat(   df,   num_col,   breaks,   labels = NULL,   int_undefined = c(-999, 999),   char_undefined = \"Unknown\",   new_colname = NULL,   plus_last = FALSE )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add categories for a numeric variable — num_cat","text":"df dataframe. num_col column name recategorize. breaks vector cut points. labels vector labels. int_undefined vector values replace char_dontknow. char_undefined character replace int_dontknow values. new_colname name new column. plus_last Logical, whether add \"+\" last category.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/num_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add categories for a numeric variable — num_cat","text":"dataframe new column.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/rank_top3_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to add top 3 columns out of numeric variables — rank_top3_vars","title":"Function to add top 3 columns out of numeric variables — rank_top3_vars","text":"case equality, function takes precedence order 'vars' factors.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/rank_top3_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to add top 3 columns out of numeric variables — rank_top3_vars","text":"","code":"rank_top3_vars(   df,   vars,   new_colname_top1,   new_colname_top2,   new_colname_top3,   id_col = \"uuid\" )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/rank_top3_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to add top 3 columns out of numeric variables — rank_top3_vars","text":"df data frame. vars character vector numeric variable names. new_colname_top1 new column name top variable. new_colname_top2 new column name 2nd top variable. new_colname_top3 new column name 3rd top variable. id_col column name unique identifier.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. impactR4PHU add_fclcm_phase, add_fcm_phase, add_fcs, add_hhs, add_lcsi, add_rcsi","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Subvec in — subvec_in","title":"Subvec in — subvec_in","text":"Subvec ","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subvec in — subvec_in","text":"","code":"subvec_in(vector, set)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subvec in — subvec_in","text":"vector vector subset set set-vector","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subvec in — subvec_in","text":"subset list vector","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Subvec not in — subvec_not_in","title":"Subvec not in — subvec_not_in","text":"Subvec ","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subvec not in — subvec_not_in","text":"","code":"subvec_not_in(vector, set)"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subvec not in — subvec_not_in","text":"vector vector subset set set-vector","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/subvec_not_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subvec not in — subvec_not_in","text":"subset vector set","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/sum_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to sum up columns row-wise. — sum_vars","title":"Function to sum up columns row-wise. — sum_vars","text":"Function sum columns row-wise.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/sum_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to sum up columns row-wise. — sum_vars","text":"","code":"sum_vars(   df,   vars,   new_colname,   imputation = \"none\",   na_rm = FALSE,   weight = \"weight\",   value = 0,   group = NULL )"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/sum_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to sum up columns row-wise. — sum_vars","text":"df dataframe vars character vector columns sum. new_colname character vector new column name. imputation imputation method, either none (default), value, median weighted median. na_rm boolean indicating whether remove missing values summing across columns. weight weight variable calculate weighted means medians. value value replace missing values imputation \"value\". group character vector grouping variables.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/survey_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Some survey sheet, updated — survey_update","title":"Some survey sheet, updated — survey_update","text":"survey sheet, updated","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/survey_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some survey sheet, updated — survey_update","text":"","code":"survey_update"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/survey_update.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some survey sheet, updated — survey_update","text":"tibble","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/value_to_sl.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a value to variables that were skipped — value_to_sl","title":"Add a value to variables that were skipped — value_to_sl","text":"Add value variables skipped","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/value_to_sl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a value to variables that were skipped — value_to_sl","text":"","code":"value_to_sl(df, var, undefined = NULL, sl_vars, sl_value, suffix = \"\")"},{"path":"https://impact-initiatives-hppu.github.io/humind/reference/value_to_sl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a value to variables that were skipped — value_to_sl","text":"df data frame. var name variable used skip logic. undefined character vector values considered \"undefined\" replaced follow-variables. sl_vars character vector variable names skipped replaced value. sl_value value added skipped variables. suffix suffix add new variable names. Default suffix (empty string).","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-202410","dir":"Changelog","previous_headings":"","what":"humind 2024.1.0","title":"humind 2024.1.0","text":"Provides functions compose usual humanitarian composite indicators related IMPACT Multi-Sector Needs Assessments (MSNAs). : Food security indicators (rCSI, LCSI, HHS, FCS). Washington Group Short Set questions (WG-SS). JMP ladders. Specific indicators related MSNI framework. package follows ‘Step-Composition’ approach IMPACT R framework.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-01900","dir":"Changelog","previous_headings":"","what":"humind 0.1.900","title":"humind 0.1.900","text":"Expect many breaking changes moving towards consistent coherent package 2024 MSNAs Food security indicators imported impactR4PHU, potentially Public Health functions.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0053","dir":"Changelog","previous_headings":"","what":"humind 0.0.5.3","title":"humind 0.0.5.3","text":"Bug fix: rsci() now correctly adds rcsi_score variable.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0052","dir":"Changelog","previous_headings":"","what":"humind 0.0.5.2","title":"humind 0.0.5.2","text":"Breaking change: drinking_water_quantity() now recodes frequencies days without drinking water, drinking_water_quantity_score() assigns score 5-point scale. Added: time_to_fetch_water_int_char() time_to_fetch_water_combine() recode combine variables time fetch water.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0051","dir":"Changelog","previous_headings":"","what":"humind 0.0.5.1","title":"humind 0.0.5.1","text":"Bug fix breaking change: handwashing_facility() now recodes types handwashing facility. Added: handwashing_facility_score() calculates score 2-point scale based handwashing_facility()","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-005","dir":"Changelog","previous_headings":"","what":"humind 0.0.5","title":"humind 0.0.5","text":"Breaking changes: revamp water sources sanitation facilities fonctions approach food security functions. Added: drinking_water_source() recodes types water sources, time_to_fetch_water() time fetch water according chosen threshold, drinking_water_source_score() classify household/individual 5-point scale. Added: sanitation_facility() recodes types sanitation facilities, sharing_sanitation_facility() recodes number people sharing sanitation facility, sanitation_facility_score() classify household 5-point scale.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-004","dir":"Changelog","previous_headings":"","what":"humind 0.0.4","title":"humind 0.0.4","text":"Added water_source(): Water source 5-point-scale. Added sanitation_facility(): Sanitation facility 5-point scale. Added handwashing_facility(): Handwashing facility 2-point scale. Added drinking_water_quantity(): Drinking water quantity 5-point scale.","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-003","dir":"Changelog","previous_headings":"","what":"humind 0.0.3","title":"humind 0.0.3","text":"Added hdds(): Household Dietary Diversity Scores (HDDS) (#5) Added fies(): Food Insecurity Experience Scale (FIES) #6 Bug fix: error lcsi() aggregated categories’ names corrected (#20)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-002","dir":"Changelog","previous_headings":"","what":"humind 0.0.2","title":"humind 0.0.2","text":"Added: HWISE functions. (#16) Updated: dplyr v1.1.0 dplyr::case_when() revamp. (#) Modified: dependency know goes impactR.utils impactR. (#)","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-001","dir":"Changelog","previous_headings":"","what":"humind 0.0.1","title":"humind 0.0.1","text":"patches github-action pages","code":""},{"path":"https://impact-initiatives-hppu.github.io/humind/news/index.html","id":"humind-0009000","dir":"Changelog","previous_headings":"","what":"humind 0.0.0.9000","title":"humind 0.0.0.9000","text":"Initial commit","code":""}]
